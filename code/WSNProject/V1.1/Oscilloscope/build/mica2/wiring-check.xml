<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="36:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c441a2020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c442458b8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c442458b8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c4447b640"/></to>
    </wire>
    <wire loc="37:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b6c441ab6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44489080"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c44489080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c444be638"/></to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c441cd958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c45111d20"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c45111d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c45869978"/></to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c441a9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c45109e38"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c45109e38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c444a11c8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c441dcc00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44cad6e0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44cad6e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b6c441dad20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44ca7be8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44ca7be8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer3" scoped="" ref="0x2b6c441e1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44cda020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44cda020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c441e9020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44cd4dc0"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c44cd4dc0"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x2b6c44ccb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:OscilloscopeAppC.nc">
      <from><interface-ref name="Read2" scoped="" ref="0x2b6c441e8780"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44e170a0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c44e170a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44e12788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:OscilloscopeAppC.nc">
      <from><interface-ref name="Read3" scoped="" ref="0x2b6c441f2020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c450b6380"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c450b6380"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44ebe6f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c44204c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c44ca1568"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c44ca1568"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c44c9de08"/></to>
    </wire>
    <wire loc="49:OscilloscopeAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c44203020"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c4514d770"/></to>
    </wire>
    <wire loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c4514d770"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c45149560"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c457f9980"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c45751d88"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c456cfd10"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c456a7020"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c45682dc8"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c455d27b8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44964e40"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c449556a0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c45490520"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44561708"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c4470ec10"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c4447bc78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c440aabe8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c440aabe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c44169448"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c444946a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44241c10"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44241c10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c4424cbe8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44494d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c4424d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44c30020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c4424d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c447c4d48"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44248b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c4446ad18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b6c44255a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c4446a6e8"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c44255370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44cb22d8"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c44255370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44250140"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44250140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c4424fce0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44250140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44260358"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c442507d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c4424d9a0"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44260358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c442a6ac0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44260358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c4425e870"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b6c4425b020"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b6c44303e00"/></to>
    </wire>
    <wire loc="141:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b6c44303e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44386740"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c4425a198"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c442507d0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x2b6c442b4108"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b6c442ff1a0"/></to>
    </wire>
    <wire loc="143:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b6c442ff1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44384a50"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x2b6c442b0338"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b6c44323968"/></to>
    </wire>
    <wire loc="168:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b6c44323968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c443b2430"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x2b6c442ac4c0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b6c44320c78"/></to>
    </wire>
    <wire loc="170:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b6c44320c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c443af740"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x2b6c442bd650"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b6c4431fe00"/></to>
    </wire>
    <wire loc="171:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b6c4431fe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c443ae8c8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x2b6c442d2100"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b6c44310658"/></to>
    </wire>
    <wire loc="147:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b6c44310658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44391d60"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x2b6c442de350"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b6c4430e968"/></to>
    </wire>
    <wire loc="149:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b6c4430e968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c4438e020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x2b6c442dd4d8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b6c4430f7e0"/></to>
    </wire>
    <wire loc="148:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b6c4430f7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44390e18"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x2b6c442dc648"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b6c443091a0"/></to>
    </wire>
    <wire loc="153:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b6c443091a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c443a05b8"/></to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b6c44334968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44418970"/></to>
    </wire>
    <wire loc="165:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b6c443124d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c443b5020"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c443b5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45295480"/></to>
    </wire>
    <wire loc="176:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b6c4432e4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c443bad60"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c443bad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45321480"/></to>
    </wire>
    <wire loc="185:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b6c443251a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c443d75b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c443d75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453b7480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44384a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45190480"/></to>
    </wire>
    <wire loc="183:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b6c44328e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c443c32a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c443c32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45369480"/></to>
    </wire>
    <wire loc="146:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b6c442fd4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44392bd0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44392bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d63e0"/></to>
    </wire>
    <wire loc="157:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b6c4431a658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44397740"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44397740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45258480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c443b2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452de480"/></to>
    </wire>
    <wire loc="179:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b6c4432b968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c443cc120"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c443cc120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45318480"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b6c44306968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c4438a2a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c4438a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4519f480"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c4438e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4521c480"/></to>
    </wire>
    <wire loc="160:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b6c44317af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c443aabd8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c443aabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4524f480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c443ae8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452d5480"/></to>
    </wire>
    <wire loc="188:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b6c44336658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c443d4a50"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c443d4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453ae480"/></to>
    </wire>
    <wire loc="194:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b6c44330348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44421020"/></to>
    </wire>
    <wire loc="174:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b6c4431c1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c443bda50"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c443bda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45328480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44386740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45196480"/></to>
    </wire>
    <wire loc="152:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b6c4430a020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c4438b430"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c4438b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45213480"/></to>
    </wire>
    <wire loc="192:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b6c44332020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44414ab0"/></to>
    </wire>
    <wire loc="155:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b6c44308348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44399500"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44399500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4525f3e0"/></to>
    </wire>
    <wire loc="166:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b6c44311658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c443b4120"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c443b4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452e4480"/></to>
    </wire>
    <wire loc="177:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b6c4432d658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c443b9e18"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c443b9e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4531e480"/></to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b6c44338348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c443d6740"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c443d6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453b4480"/></to>
    </wire>
    <wire loc="144:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b6c442fe348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44383bd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44383bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4518d480"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44391d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d3480"/></to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b6c443197e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c443968c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c443968c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45255480"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b6c44322af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c443b15b8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c443b15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452db480"/></to>
    </wire>
    <wire loc="180:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b6c4432aaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c443cb2a8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c443cb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45315480"/></to>
    </wire>
    <wire loc="139:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b6c44305af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44389430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44389430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4519c480"/></to>
    </wire>
    <wire loc="150:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b6c4430daf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c4438d120"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c4438d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45219480"/></to>
    </wire>
    <wire loc="161:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b6c44316c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c443a9d60"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c443a9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4524c480"/></to>
    </wire>
    <wire loc="189:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b6c443357e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c443d3bd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c443d3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453ab480"/></to>
    </wire>
    <wire loc="164:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b6c44313020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c443a1e40"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c443a1e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452993e0"/></to>
    </wire>
    <wire loc="175:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b6c4431b348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c443bcbd8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c443bcbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45324480"/></to>
    </wire>
    <wire loc="184:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b6c44326020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c443c2430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c443c2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453ba480"/></to>
    </wire>
    <wire loc="195:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b6c4432f4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4441d180"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b6c44301020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c443858c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c443858c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45193480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c443a05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45210480"/></to>
    </wire>
    <wire loc="182:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b6c44329c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c443c41e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c443c41e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4536c3e0"/></to>
    </wire>
    <wire loc="156:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b6c443074d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c443985b8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c443985b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4525b480"/></to>
    </wire>
    <wire loc="167:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b6c443247e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c443b32a8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c443b32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452e1480"/></to>
    </wire>
    <wire loc="178:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b6c4432c7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c443b7020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c443b7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4531b480"/></to>
    </wire>
    <wire loc="187:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b6c443374d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c443d58c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c443d58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453b1480"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b6c442d5780"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c443751e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c443751e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451a23e0"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44390e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d0480"/></to>
    </wire>
    <wire loc="159:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b6c44318968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c443aba50"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c443aba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45252480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c443af740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452d8480"/></to>
    </wire>
    <wire loc="193:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b6c443311a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44427c38"/></to>
    </wire>
    <wire loc="173:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b6c4431d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c443be930"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c443be930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4532b3e0"/></to>
    </wire>
    <wire loc="162:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b6c44315e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c443a8e18"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c443a8e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45249480"/></to>
    </wire>
    <wire loc="140:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b6c44304c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c443875b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c443875b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45199480"/></to>
    </wire>
    <wire loc="151:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b6c4430ce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c4438c2a8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c4438c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45216480"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c441672b0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6c44170758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6c4418c660"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c441872b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44a1e268"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c444be638"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c444edd10"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c44488020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c444d05f0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c444d05f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c444eaba0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6c444a1d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6c444ce348"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6c444ce348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6c444e7968"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c444951f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c444cc020"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c444cc020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c4453ea10"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c444c4860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c444ca738"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c444ca738"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c44535060"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c444bf080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c444ebe18"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c444ebe18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c445381a0"/></to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c444a11c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c444cf7a0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c444cf7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c444e9dc0"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444b4cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444cccb8"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444cccb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c4453b1d0"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444ce938"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c444ce938"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444e6020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c444c5968"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c444de670"/></to>
    </wire>
    <wire loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c444de670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c4454c020"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c444edd10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44561d20"/></to>
    </wire>
    <wire loc="133:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c4454c020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c4462f478"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c4453ea10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c44618d20"/></to>
    </wire>
    <wire loc="132:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c44535060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c44613510"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c444eb338"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c4454aac8"/></to>
    </wire>
    <wire loc="134:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c4454aac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c4462b020"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c445381a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c4455f7f0"/></to>
    </wire>
    <wire loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c4453b1d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c446141a0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c444e2ce0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c4453bb30"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c4453bb30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c44614b00"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c444f4c58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c4453f7b0"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c4453f7b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c44619a20"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c444e4978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c4453e438"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c4453e438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c44618748"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b6c444f5070"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b6c44b0f6f0"/></to>
    </wire>
    <wire loc="88:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c444e3020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c4453ea10"/></to>
    </wire>
    <wire loc="101:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x2b6c4453ac30"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x2b6c445607f0"/></to>
    </wire>
    <wire loc="102:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x2b6c445369a8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x2b6c4455f020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b6c4457f770"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b6c44749620"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c44597df0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c4495a208"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c4495a208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c44953080"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c4457e080"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c447372f0"/></to>
    </wire>
    <wire loc="110:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x2b6c4457d770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44972a60"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44972a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x2b6c4456d9d8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x2b6c44616968"/></to>
    </wire>
    <wire loc="112:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x2b6c4457a3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c4461ab58"/></to>
    </wire>
    <wire loc="113:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x2b6c44576540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6c446192d0"/></to>
    </wire>
    <wire loc="115:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b6c4462bb78"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b6c44749620"/></to>
    </wire>
    <wire loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c446296f8"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c447bd908"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c447bd908"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c442dfd60"/></to>
    </wire>
    <wire loc="117:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b6c44625070"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b6c44b0f6f0"/></to>
    </wire>
    <wire loc="118:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x2b6c44627618"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b6c4470b6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c44628a98"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c447372f0"/></to>
    </wire>
    <wire loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b6c4458b8e0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b6c4470b6d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b6c4458d168"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b6c4470b6d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b6c445a79c8"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b6c4470b6d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x2b6c445a53e0"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x2b6c4472c1d8"/></to>
    </wire>
    <wire loc="125:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b6c44592348"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b6c44b31568"/></to>
    </wire>
    <wire loc="127:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x2b6c4472b4b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x2b6c447c04e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x2b6c447c04e0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b6c44937680"/></to>
    </wire>
    <wire loc="128:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44727620"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x2b6c447bfb80"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b6c447bfb80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447b8980"/></to>
    </wire>
    <wire loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x2b6c44747118"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b6c447bcbf8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x2b6c447bcbf8"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b6c442b1ba0"/></to>
    </wire>
    <wire loc="130:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b6c44747e48"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b6c44b31568"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c44c51e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c44b56638"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c44b56638"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c44c3ac50"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b6c44622900"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c44b57c38"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b6c44624b18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c44988c48"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6c44988c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c44af5128"/></to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x2b6c445a0de8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x2b6c445c4778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x2b6c445cfc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x2b6c445c9298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x2b6c446a23f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x2b6c446d6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b6c44937680"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b6c447d3620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c447b8980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44936c70"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x2b6c442ae698"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44936c70"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44935578"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c447b4a08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c4492d680"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b6c447d3620"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b6c448fc428"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c4493f720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447cf050"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c448f99a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b6c44940060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c448fe6a0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c448fab18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c447c5cb8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c447c5cb8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c447e1488"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b6c447e59b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b6c447e1de0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c448cf840"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c448cf840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c4548ebb8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c448cb3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c447f6940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c44813020"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c44813020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c448361e8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c447ddd30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44248b98"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c448c8060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c447dfc10"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448c8d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448cedd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448cedd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4548c268"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b6c44834640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b6c44189a80"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c448ce698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4548d9a8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c448cd9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4548ce20"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4548a6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c448cb3c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c4548ae78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c45490af8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c45487020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c454b2020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c448c8060"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c454b2740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c448c8780"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c454b2cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448c8d18"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c454b1908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c448dd908"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b6c449134d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b6c4495b1a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b6c44954020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c4495c310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c449556a0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44961b68"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44961b68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44b045e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44964e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44984d90"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44984d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44a831f0"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6c44afe858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44abaab0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c44ab5c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44979748"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44979748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c44a83998"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c44b1f330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c4499de40"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c4499de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c44a80a90"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c44a80a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c454ef020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44a831f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c454f4600"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c44a83998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c454f4da8"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c454ec168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44a0ade8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44a0ade8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44a280f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c454e7020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a02020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a02020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a23160"/></to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c454e6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c44a00020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c44a00020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c44a22190"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6c454e20a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6c449fd228"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6c449fd228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6c44a1e968"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b6c44ab2cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c44af9930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b6c44c56e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c44b513a0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c44b513a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c44c1d5a8"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44c426f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44b4b098"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44b4b098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44b5c020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44b45140"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44b8b020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b6c44b69b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c44b8a680"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c44b669c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b6c44b86e60"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c44b669c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b6c44b812b8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c44b669c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b6c44b7d698"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b6c44b7aa48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a02020"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44c30740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44b4b098"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44c84e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44cb22d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44c9d840"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c44c99540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6c44c9bd60"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c44c9bd60"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b6c44305af0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c44c987d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6c44cb4020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c44cb4020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b6c44306968"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c44c97958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6c44cb31b0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c44cb31b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b6c442d5780"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x2b6c44cc89d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c45572128"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c45572128"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c447b4a08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c455706b0"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2b6c44cf99a8"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x2b6c44cf99a8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2b6c44cf4108"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x2b6c44ccb020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44df7020"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x2b6c44ccac98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44df1790"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44df3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44cc3bc8"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44cc3bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44db2a58"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b6c44df6860"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x2b6c44cc89d0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44e2c720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44cc3bc8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b6c44e2d060"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x2b6c44cc56a8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x2b6c44cf8398"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2b6c44cf4ad0"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44db2a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c455d0e20"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44dff0e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44db0020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44db0020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c455cd3f0"/></to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44dffc98"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44db0bd8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44db0bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c455cc020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c44dec0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44cf7550"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44cf35f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44dbadc0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44dbadc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x2b6c44cee690"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x2b6c44d0e020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2b6c44d0e020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b6c44318968"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x2b6c44cea560"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b6c44cfbd00"/></to>
    </wire>
    <wire loc="95:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2b6c44cfbd00"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b6c44d2f060"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x2b6c44ceac00"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b6c44d353c0"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2b6c44d353c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b6c44d2f6d0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b6c44cde190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b6c44d04020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6c44d93728"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2b6c44cfc980"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2b6c44d33c28"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2b6c44d10de0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b6c443197e0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2b6c44d0c328"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b6c44316c78"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2b6c44d35a30"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2b6c44d2fd40"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b6c44d097d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b6c4432c7e0"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2b6c44cfd808"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b6c443247e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2b6c44d12ad0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b6c443074d0"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b6c44d03858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6c44dca728"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2b6c44cfb020"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b6c44d30340"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2b6c44cfe680"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b6c44311658"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2b6c44d0b4b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b6c44315e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b6c44d002b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6c44da3060"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2b6c44d34340"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2b6c44d2e3f8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b6c44d08958"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b6c4432b968"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2b6c44d11c58"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b6c4431a658"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2b6c44d0d180"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b6c44317af0"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2b6c44cfb690"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b6c44d309b0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b6c44d0a648"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b6c4432d658"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b6c44d04ba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6c44dcd020"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2b6c44cff4f8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b6c44322af0"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2b6c44d349b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2b6c44d2ea68"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2b6c44d15970"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b6c44308348"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b6c44d06ae0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b6c4432aaf0"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44da3b10"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2b6c44d19b38"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b6c44d19b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d80180"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44d922e8"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2b6c44d54b38"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b6c44d54b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d7c020"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44dcdad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b6c44d53b38"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b6c44d53b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d79cd8"/></to>
    </wire>
    <wire loc="89:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44dc92e8"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2b6c44d52b38"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b6c44d52b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d749d8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b6c44d20c88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d8ecf8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b6c44d1fb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d897e8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b6c44d1bda0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d68258"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b6c44d1ab38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c44d853e0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d90060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b6c44d4a850"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d8cb10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b6c44d4d020"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d885f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b6c44d4d758"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d842e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b6c44d4b020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d7f020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b6c44d4b758"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d7cde0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b6c44d48020"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d77b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b6c44d48758"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d73908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b6c44d47020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44db1820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c455ceb48"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c455cc8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44def550"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c455cb0a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c455d2d90"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c455c9100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c455f6740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44dec0e0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c455f5268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44decb10"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c455f5800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44dff0e0"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456523f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44dffc98"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b6c45652b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b6c45651470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c455706b0"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c447cf050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4556f020"/></to>
    </wire>
    <wire loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c44e12788"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44e92d58"/></to>
    </wire>
    <wire loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b6c44e905e8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x2b6c44e471c8"/></to>
    </wire>
    <wire loc="46:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x2b6c44e471c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44e76288"/></to>
    </wire>
    <wire loc="12:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44e8fca0"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x2b6c44e4b020"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2b6c44e4b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44e32b28"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x2b6c44e0fc58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44e38910"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44e38910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c456a5630"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44e32b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c456cb4b0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x2b6c44e4a3f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44e841c0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e6c800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e37dd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e37dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456a3ac8"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e6a3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e369d8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e369d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456a2700"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e6d6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e85540"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b6c44e827d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44e447c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44e814f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44eaa5e8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44eaa5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b6c44e7c4a0"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x2b6c44d097d0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b6c44e7b6c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44ea3aa8"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c44ea3aa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c447b4a08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e67268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e30268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e30268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456ca940"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e67e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e30e20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e30e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456c9578"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e681c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e77600"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b6c44e748f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44e447c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44e73680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44eaa5e8"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b6c44eaf5d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x2b6c44d15970"/></to>
    </wire>
    <wire loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b6c44eae848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c44ea3aa8"/></to>
    </wire>
    <wire loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44ea1060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44e432d8"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b6c44e43ce8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b6c44cfb020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e3c510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4567e200"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e3cc50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4567e940"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44e447c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c4567f4b0"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e3b888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4567d578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4567de18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e3a140"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c4567c5d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456813f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c456795f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e37698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c456a3388"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c456a1020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e353c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c456a17a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456a75f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c4569f908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e319a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c456ca200"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c456c9e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e2f6d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c456c85d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456ce328"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c456c65f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c456f6d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e6d6d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c456f57b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44e6c268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456f5d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e6c800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456f4940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e6a3f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b6c456f3120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b6c456f38c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c45742020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e681c8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45742a50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44e68bf8"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45741020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e67268"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c45741bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e67e20"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b6c45740470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b6c45740c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b6c44e7ad98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b6c44eade00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44ea1060"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c447cf050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44ea1908"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2b6c450b5a08"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2b6c44eb3c10"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2b6c44eb3c10"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2b6c44ef0188"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b6c44ebb538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c457675f0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c457675f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c447b4a08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c45766ba0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44eb3300"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44eb3300"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b6c44eef438"/></to>
    </wire>
    <wire loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b6c44ebe6f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b6c45078020"/></to>
    </wire>
    <wire loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c45074020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44eb4598"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44eb4598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c4508bd88"/></to>
    </wire>
    <wire loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b6c45077860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x2b6c44ebb538"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c4508bd88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c457f6060"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45084800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45089268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45089268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c457f54c0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c450833f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c45089e20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c45089e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c457f40e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c450866d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c44eb1668"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44eee020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c45091020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c45091020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x2b6c44ee90b8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2b6c44d10de0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x2b6c44ee83a8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x2b6c44d0c328"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x2b6c44ee76d8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2b6c44d06ae0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x2b6c44ee69b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b6c44cfb690"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44edac30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b6c4504f020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b6c4504f020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44f239b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2b6c44ed7828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44f321d0"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44f321d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44f24538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x2b6c44ed6710"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b6c44d03858"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44f24538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44f6e140"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44f239b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44f7e020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b6c44f7ac70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c44f35d80"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c44f35d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c4574d4b0"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b6c44f79a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b6c45027700"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2b6c44fba420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2b6c45023318"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c44f74600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c44fb5e60"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44f722e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44f77268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44f77268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4574c940"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b6c45023930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b6c4501a830"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b6c4501a830"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b6c450121d8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b6c4501f2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c45067358"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b6c4501e908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c45067358"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44f78af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4574c200"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44f77e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4574b578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4574be18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44f766d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c4574a5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b6c4574f3f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c457485f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2b6c45010b50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b6c44313020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2b6c4500fe08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b6c443124d0"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4508aaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c457f6d58"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c457f4980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c450886d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c457f2130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c457f8020"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c457f02e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c45826780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c450866d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45825268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45084268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45825800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45084800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c458243f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c450833f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b6c45824b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b6c45823470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c45766ba0"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c447cf050"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c45764578"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c45869978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c4585b378"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c45110908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c45867578"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c45867578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c444951f0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c4510f578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c45866268"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c45866268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b6c4510dbd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b6c458658c8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b6c458658c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444b4cb0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c4585a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c450d74f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c4585abd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c450d74f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c45124920"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c451236f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c44488020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c451223f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c45121a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c444951f0"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b6c45120780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b6c4511f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c45104408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c444951f0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c4514f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></to>
    </wire>
    <wire loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c45149cd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c45147518"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c45147518"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x2b6c45143e08"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x2b6c44d11c58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rahul/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c4499bc50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c44162720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c44162720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b6c44161020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rahul/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer" loc="44(OscilloscopeAppC.Timer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer2" loc="44(OscilloscopeAppC.Timer2):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer3" loc="44(OscilloscopeAppC.Timer3):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1" loc="18(OscilloscopeAppC.Sensor1):/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1.AdcX" loc="21(OscilloscopeAppC.Sensor1.AdcX):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor2" loc="18(OscilloscopeAppC.Sensor2):/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3" loc="40(OscilloscopeAppC.Sensor3):/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor3.AdcReadClientC):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c4433f750" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c4433fa98" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c4433fde0" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c44343020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c44343388" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c443436f0" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c44343a20" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c443e0020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c443e0388" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c443e06f0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c443e0a20" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b6c44851b08" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b6c44866748" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b6c448995c0" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b6c4492c1d0" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b6c4492c1d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c4499bc50" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c4499bc50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c44998020" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c4498d410" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c4498d410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c4498d700" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44982c60" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44982c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44aafcd0" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44aafcd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6c44aac020" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44af79f8" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44af79f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6c44bfae50" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44bfae50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b6c44c2f1e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6c44bfb740" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6c44bfb740"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b6c44c1b020" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44c1b020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6c44c39550" loc="55:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6c44c39550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6c44c39cb8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6c44c39cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6c44c370a8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6c44c370a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6c44c37820" loc="58:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6c44c37820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6c44c37bc8" loc="59:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b6c44c36380" loc="60:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b6c44c36380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b6c44d67020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b6c44d67388" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b6c44d676f0" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c44d67a20" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TempC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MicC" loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b6c44f195a0" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b6c44f13d20" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b6c450b3e18" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b6c450ac950" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b6c450a2380" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b6c450d4738" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b6c4510bd08" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2b6c441a2020" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c441a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c441a2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6c441cd958" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c441cd958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c441cdca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c441cde30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c441aa020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c441aa1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c441aa330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b6c441ab6f0" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b6c441ab6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c441aba40"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c441abbc8"/>
        <function-ref name="start" scoped="" ref="0x2b6c441abd50"/>
        <function-ref name="stop" scoped="" ref="0x2b6c441af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer3" ref="0x2b6c441e1020" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer3" scoped="" ref="0x2b6c441e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c441eb2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c441ee978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c441ed6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c441ed278"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c441ebb58"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c441eb708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c441eedc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c441e1b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c441edc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c441ee088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c441ee528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b6c441e9020" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c441e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c441e9b68"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c441e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read2" ref="0x2b6c441e8780" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read2" scoped="" ref="0x2b6c441e8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c441f3370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c441f37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b6c441a9020" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c441a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c441a9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read3" ref="0x2b6c441f2020" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read3" scoped="" ref="0x2b6c441f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c441f2b68"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c441f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c44204c38" loc="32:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44204c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c441f0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c441f01a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c441f0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c441f04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c441f0640"/>
        <function-ref name="get" scoped="" ref="0x2b6c441f07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c441f0950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c441ef020"/>
        <function-ref name="set" scoped="" ref="0x2b6c441f0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c441f0c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c441f0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x2b6c44203020" loc="33:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c44203020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b6c44203370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b6c441dad20" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b6c441dad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c441e2088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c441e5688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c441e4470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c441e4020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c441e2928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c441e24d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c441e5ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c441e68b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c441e4a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c441e6d58"/>
        <function-ref name="stop" scoped="" ref="0x2b6c441e5238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c441dcc00" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c441dcc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c441dbe78"/>
        <function-ref name="fired" scoped="" ref="0x2b6c441d95a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c441db2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c441d9e48"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c441da748"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c441da2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c441d99f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c441ce7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c441db8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c441cec88"/>
        <function-ref name="stop" scoped="" ref="0x2b6c441d9158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c44242d18" loc="58:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44242d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c442410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c442458b8" loc="57:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c442458b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c44245c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c4424d9a0" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c4424d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4424dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44241c10" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44241c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4423e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c44248b98" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44248b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c4424d020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c4424d1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c4424d330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c4424d4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c4424d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6c44255370" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b6c44255370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c442556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4424cbe8" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4424cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44255020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b6c44255a38" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b6c44255a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44255d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c442507d0" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c442507d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44250b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c44250140" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44250140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44250490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c4425a198" loc="19:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c4425a198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4425a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b6c4425b020" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b6c4425b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4425b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4425b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4425b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4425b808"/>
        <function-ref name="get" scoped="" ref="0x2b6c4425b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4425bb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4425bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4425be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c4424fce0" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c4424fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4425c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c44260358" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44260358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c442606a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x2b6c442ac4c0" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x2b6c442ac4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442ac810"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442ac998"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442acb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442acca8"/>
        <function-ref name="get" scoped="" ref="0x2b6c442ace30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442bd020"/>
        <function-ref name="set" scoped="" ref="0x2b6c442bd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442bd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x2b6c442b4108" loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x2b6c442b4108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442b4458"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442b45e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442b4768"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442b48f0"/>
        <function-ref name="get" scoped="" ref="0x2b6c442b4a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442b4c00"/>
        <function-ref name="set" scoped="" ref="0x2b6c442b4d88"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x2b6c442ae698" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x2b6c442ae698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c442ae9e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c442aeb70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c442aecf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x2b6c442b0338" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x2b6c442b0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442b0688"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442b0810"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442b0998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442b0b20"/>
        <function-ref name="get" scoped="" ref="0x2b6c442b0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442b0e30"/>
        <function-ref name="set" scoped="" ref="0x2b6c442ac020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c442a6ac0" loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c442a6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c442a6e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x2b6c442bd650" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x2b6c442bd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442bd9a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442bdb28"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442bdcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442bde38"/>
        <function-ref name="get" scoped="" ref="0x2b6c442bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442bc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c442bc330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b6c442b1ba0" loc="55:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b6c442b1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c442a4020"/>
        <function-ref name="read" scoped="" ref="0x2b6c442a41a8"/>
        <function-ref name="write" scoped="" ref="0x2b6c442a4330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b6c442a44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b6c442dfd60" loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c442dfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b6c442d30d8"/>
        <function-ref name="initSlave" scoped="" ref="0x2b6c442d3260"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6c442d33e8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c442d3570"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6c442d36f8"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c442d3880"/>
        <function-ref name="readByte" scoped="" ref="0x2b6c442d3a08"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c442d3b90"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c442d3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x2b6c442d2100" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x2b6c442d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442d2450"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442d28e8"/>
        <function-ref name="get" scoped="" ref="0x2b6c442d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442d2bf8"/>
        <function-ref name="set" scoped="" ref="0x2b6c442d2d80"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c4425e870" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c4425e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4425ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x2b6c442de350" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x2b6c442de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442de6a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442de828"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442de9b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442deb38"/>
        <function-ref name="get" scoped="" ref="0x2b6c442decc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442dee48"/>
        <function-ref name="set" scoped="" ref="0x2b6c442dd020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x2b6c442dd4d8" loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x2b6c442dd4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442dd828"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442dd9b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442ddb38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442ddcc0"/>
        <function-ref name="get" scoped="" ref="0x2b6c442dde48"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442dc020"/>
        <function-ref name="set" scoped="" ref="0x2b6c442dc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442dc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x2b6c442dc648" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x2b6c442dc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442dc998"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442dcb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442dcca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442dce30"/>
        <function-ref name="get" scoped="" ref="0x2b6c442db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442db1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c442db330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442db4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b6c44334968" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b6c44334968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443330f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44333278"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44333400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44333588"/>
        <function-ref name="get" scoped="" ref="0x2b6c44333710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44333898"/>
        <function-ref name="set" scoped="" ref="0x2b6c44333a20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44333ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b6c443124d0" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b6c443124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44312820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443129a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44312b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44312cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44312e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44311020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443111a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44311330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b6c4432e4d0" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b6c4432e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4432e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4432eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4432ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4432ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4432d020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b6c443251a0" loc="94:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b6c443251a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443254f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44325678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44325800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44325988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44325b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44325c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44325e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44338020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b6c442ff1a0" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b6c442ff1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442ff4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442ff678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442ff800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442ff988"/>
        <function-ref name="get" scoped="" ref="0x2b6c442ffb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442ffc98"/>
        <function-ref name="set" scoped="" ref="0x2b6c442ffe20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b6c44328e00" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b6c44328e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443271a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44327330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443274b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44327640"/>
        <function-ref name="get" scoped="" ref="0x2b6c443277c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44327950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44327ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44327c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b6c442fd4d0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b6c442fd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442fd820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442fd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442fdb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442fdcb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c442fde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44310020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44310330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b6c4431a658" loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b6c4431a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431ae40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44319020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443191a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44319330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b6c44323968" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b6c44323968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44323cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44323e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44322020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443221a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44322330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443224b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44322640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b6c4432b968" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b6c4432b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4432be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4432a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4432a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4432a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4432a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b6c44306968" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b6c44306968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44306cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44306e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44305020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443051a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44305330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443054b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44305640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b6c4430e968" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b6c4430e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4430ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4430ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4430d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4430d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430d640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b6c44317af0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b6c44317af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44317e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44316020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443161a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44316330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443164b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44316640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443167c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44316950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b6c4431fe00" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b6c4431fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431e640"/>
        <function-ref name="get" scoped="" ref="0x2b6c4431e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431e950"/>
        <function-ref name="set" scoped="" ref="0x2b6c4431ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4431ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b6c44336658" loc="97:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b6c44336658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443369a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44336b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44336cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44336e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44335020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443351a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44335330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b6c44330348" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b6c44330348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44330698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44330820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443309a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44330b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44330cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44330e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b6c4431c1a0" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b6c4431c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431c988"/>
        <function-ref name="get" scoped="" ref="0x2b6c4431cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431cc98"/>
        <function-ref name="set" scoped="" ref="0x2b6c4431ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4431b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b6c44303e00" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b6c44303e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443021a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44302330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443024b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44302640"/>
        <function-ref name="get" scoped="" ref="0x2b6c443027c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44302950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44302ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44302c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b6c4430a020" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b6c4430a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4430a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4430a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4430a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4430a808"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430ab18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b6c44332020" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b6c44332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44332370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443324f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44332680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44332808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44332990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44332b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44332ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44332e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b6c44308348" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b6c44308348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44308698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44308820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443089a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44308b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44308cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44308e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44307020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b6c44311658" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b6c44311658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443119a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44311b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44311cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44311e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44324020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443241a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44324330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b6c4432d658" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b6c4432d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4432db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4432dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4432de40"/>
        <function-ref name="get" scoped="" ref="0x2b6c4432c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4432c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432c330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b6c44338348" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b6c44338348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44338698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44338820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443389a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44338b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44338cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44338e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44337020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b6c442fe348" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b6c442fe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442fe698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442fe820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442fe9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c442feb30"/>
        <function-ref name="get" scoped="" ref="0x2b6c442fecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c442fee40"/>
        <function-ref name="set" scoped="" ref="0x2b6c442fd020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c442fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b6c44310658" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b6c44310658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443109a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44310b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44310cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44310e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430f330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b6c443197e0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b6c443197e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44319b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44319cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44319e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44318020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44318330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443184b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44318640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b6c44322af0" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b6c44322af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44322e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44320020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443201a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44320330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443204b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44320640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443207c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44320950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b6c4432aaf0" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b6c4432aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44329020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44329330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44329640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443297c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44329950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b6c44305af0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b6c44305af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44305e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44304020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443041a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44304330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443044b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44304640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443047c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44304950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b6c4430daf0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b6c4430daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4430c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4430c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4430c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4430c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430c950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b6c44316c78" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b6c44316c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44315020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443151a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44315330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443154b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44315640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443157c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44315950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44315ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b6c443357e0" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b6c443357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44335b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44335cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44335e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44334020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44334330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44334640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b6c44313020" loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b6c44313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44313570"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443136f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44313880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44313a08"/>
        <function-ref name="get" scoped="" ref="0x2b6c44313b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44313d18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44312020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b6c4431b348" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b6c4431b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431bb30"/>
        <function-ref name="get" scoped="" ref="0x2b6c4431bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431be40"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432e020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b6c44326020" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b6c44326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44326370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443264f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44326680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44326808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44326990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44326b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44326ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44326e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b6c4432f4d0" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b6c4432f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4432f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4432fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4432fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4432fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44341020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443411a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44341330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b6c44301020" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b6c44301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44301370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443014f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44301680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44301808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44301990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44301b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44301ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44301e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b6c443091a0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b6c443091a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443094f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44309678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44309800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44309988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44309b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44309c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44309e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b6c44329c78" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b6c44329c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44328020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443281a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44328330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443284b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44328640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443287c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44328950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44328ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b6c443074d0" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b6c443074d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44307820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443079a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44307b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44307cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44307e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4431a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4431a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b6c443247e0" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b6c443247e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44324b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44324cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44324e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44323020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44323330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443234b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44323640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b6c4432c7e0" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b6c4432c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4432cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4432ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4432ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4432b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4432b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4432b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4432b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4432b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b6c443374d0" loc="96:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b6c443374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44337820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443379a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44337b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44337cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44337e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44336020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44336330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b6c442d5780" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b6c442d5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c442d5ad0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c442d5c58"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c442d5de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44306020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44306330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443064b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44306640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b6c4430f7e0" loc="57:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b6c4430f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4430fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4430fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4430fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4430e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430e330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b6c44318968" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b6c44318968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44318cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44318e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44317020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443171a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44317330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443174b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44317640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b6c44320c78" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b6c44320c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4431f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4431f950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4431fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b6c443311a0" loc="102:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b6c443311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443314f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44331678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44331800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44331988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44331b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44331c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44331e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b6c4431d020" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b6c4431d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4431d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4431d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4431d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4431d808"/>
        <function-ref name="get" scoped="" ref="0x2b6c4431d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4431db18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4431dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4431de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b6c44315e00" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b6c44315e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443141a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44314330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443144b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44314640"/>
        <function-ref name="get" scoped="" ref="0x2b6c443147c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44314950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44314ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44314c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b6c44304c78" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b6c44304c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44303020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44303330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443034b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44303640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443037c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44303950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44303ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b6c4430ce00" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b6c4430ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4430b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4430b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4430b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4430b640"/>
        <function-ref name="get" scoped="" ref="0x2b6c4430b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4430b950"/>
        <function-ref name="set" scoped="" ref="0x2b6c4430bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4430bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44389430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44389430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44389780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44389908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44389a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44389c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c44389da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44387020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44387330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c443858c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c443858c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44385c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44385da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44384020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443841a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44384330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443844b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44384640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c443751e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c443751e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44375538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443756c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44375848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443759d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44375b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44375ce0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44375e68"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4438a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c443875b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c443875b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44387908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44387a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44387c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44387da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44386020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443861a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44386330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44384a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44384a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44384da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44383020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44383330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44383640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443837c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44383950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c4438a2a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c4438a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438a780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438aa90"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4438ada0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44389020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44386740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44386740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44386a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44386c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44386da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44385020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44385330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443854b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44385640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44383bd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44383bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44382020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443821a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44382330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443824b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44382640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443827c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44382950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44382ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451a23e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451a23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451a2730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451a28b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451a2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451a2bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c451a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451a1020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451a11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4519f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4519f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4519f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4519f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4519fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4519fc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4519fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4519e020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4519e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4519e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4519c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4519c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4519c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4519c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4519cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4519cc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4519cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4519b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4519b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4519b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45199480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45199480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451997d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45199958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45199ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45199c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45199df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45198020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45198330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45196480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45196480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45196958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45196ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45196c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45196df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45195020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45195330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45193480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45193480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45193958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45193ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45193c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45193df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45192020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45192330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45190480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45190480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451907d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45190958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45190ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45190c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45190df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4518f020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4518f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4518f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4518d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4518d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4518d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4518d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4518dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4518dc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4518ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4518c020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4518c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4518c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44390e18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44390e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438f640"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4438f950"/>
        <function-ref name="set" scoped="" ref="0x2b6c4438fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4438fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c4438c2a8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c4438c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438ca90"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4438cda0"/>
        <function-ref name="set" scoped="" ref="0x2b6c4438b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4438b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44392bd0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44392bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44391020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443911a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44391330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443914b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44391640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443917c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44391950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44391ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c4438e020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c4438e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438e808"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4438eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4438eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4438ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c4438b430" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c4438b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438b780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438b908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438bc18"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443a0020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443a01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44391d60" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44391d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443900d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44390260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443903e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44390570"/>
        <function-ref name="get" scoped="" ref="0x2b6c443906f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44390880"/>
        <function-ref name="set" scoped="" ref="0x2b6c44390a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44390b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c4438d120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c4438d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4438d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4438d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4438d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4438d908"/>
        <function-ref name="get" scoped="" ref="0x2b6c4438da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4438dc18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4438dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4438c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c443a05b8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c443a05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443a0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443a0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443a0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443a0da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c4439f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4439f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4439f330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4439f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d63e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451d5020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451d51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d3480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d3c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451d2020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451d21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d0480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d0c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451cf020"/>
        <function-ref name="set" scoped="" ref="0x2b6c451cf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4521c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4521c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4521c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4521c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4521cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4521cc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4521cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4521b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4521b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4521b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45219480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45219480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452197d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45219958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45219ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45219c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45219df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45218020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452181a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45218330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45216480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45216480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452167d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45216958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45216ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45216c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45216df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45215020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452151a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45215330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45213480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45213480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452137d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45213958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45213ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45213c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45213df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45212020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452121a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45212330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45210480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45210480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452107d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45210958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45210ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45210c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45210df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4520f020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4520f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4520f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44397740" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44397740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44397a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44397c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44397da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44396020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44396330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443964b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44396640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c443aabd8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c443aabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443a9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443a91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443a9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443a94b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443a9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443a97c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443a9950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443a9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44399500" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44399500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44399850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443999d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44399b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44399ce8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44399e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44398020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44398330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c443968c8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c443968c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44396c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44396da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443ab1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443ab330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ab4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ab640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c443a9d60" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c443a9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443a80d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443a8260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443a83e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443a8570"/>
        <function-ref name="get" scoped="" ref="0x2b6c443a86f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443a8880"/>
        <function-ref name="set" scoped="" ref="0x2b6c443a8a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443a8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c443985b8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c443985b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44398908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44398a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44398c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44398da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44397020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443971a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44397330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c443aba50" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c443aba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443abda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443aa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443aa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443aa330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443aa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443aa640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443aa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443aa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c443a8e18" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c443a8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443a71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443a7330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443a74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443a7640"/>
        <function-ref name="get" scoped="" ref="0x2b6c443a77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443a7950"/>
        <function-ref name="set" scoped="" ref="0x2b6c443a7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443a7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4525f3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4525f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4525f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4525f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4525fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4525fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4525fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4525d020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4525d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4525d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4525b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4525b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4525b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4525b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4525bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4525bc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4525bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4525a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4525a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4525a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45258480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45258480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452587d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45258958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45258ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45258c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45258df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45257020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452571a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45257330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45255480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45255480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452557d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45255958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45255ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45255c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45255df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45254020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452541a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45254330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45252480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45252480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452527d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45252958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45252ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45252c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45252df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45251020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452511a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45251330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4524f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4524f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4524f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4524f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4524fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4524fc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4524fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4524e020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4524e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4524e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4524c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4524c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4524c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4524c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4524cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4524cc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4524cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4524b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4524b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4524b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45249480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45249480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452497d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45249958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45249ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45249c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45249df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45248020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452481a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45248330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c443b4120" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c443b4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b4908"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b4c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c443b15b8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c443b15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b1908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b1da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c443af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443af330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c443a1e40" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c443a1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b61c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b6348"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b6658"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b67e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b6968"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b6af0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c443b32a8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c443b32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b3a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b3da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c443af740" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c443af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443afa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443afc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443afda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443ae020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ae330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c443b5020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c443b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b5808"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b5b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c443b2430" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c443b2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b2780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b2908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b2c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b1020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c443ae8c8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c443ae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443aec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443aeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ad640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452993e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45299730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452998b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45299a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45299bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c45299d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45297020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45297330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45295480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45295480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452957d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45295958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45295ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45295c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45295df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452e6020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452e61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452e6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452e4480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452e47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452e4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452e4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452e4c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452e4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452e3020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452e31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452e1480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452e17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452e1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452e1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452e1c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452e1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452e0020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452de480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452de7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452de958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452deae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452dec68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452dedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452dd020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452dd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452dd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452db480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452db7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452db958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452dbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452dbc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452dbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452da020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452da1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452d8480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452d87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452d8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452d8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452d8c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452d8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452d7020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452d71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452d5480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452d57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452d5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452d5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452d5c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c452d5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452d4020"/>
        <function-ref name="set" scoped="" ref="0x2b6c452d41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c443bcbd8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c443bcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443ba020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443ba1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443ba330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443ba4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443ba640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ba7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ba950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443baad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c443b7020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c443b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b7808"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b7b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c443be930" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c443be930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443bec80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443bee08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443bd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443bd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443bd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443bd640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c443bad60" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c443bad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b90d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b9260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b9570"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b96f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b9880"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b9a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c443cc120" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c443cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443cc470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443cc5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443cc780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443cc908"/>
        <function-ref name="get" scoped="" ref="0x2b6c443cca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ccc18"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ccda0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c443bda50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c443bda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443bdda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443bc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443bc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443bc330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443bc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443bc640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443bc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443bc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c443b9e18" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c443b9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443b81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443b8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443b8640"/>
        <function-ref name="get" scoped="" ref="0x2b6c443b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443b8950"/>
        <function-ref name="set" scoped="" ref="0x2b6c443b8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c443cb2a8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c443cb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443cb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443cb780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443cb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443cba90"/>
        <function-ref name="get" scoped="" ref="0x2b6c443cbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443cbda0"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ca020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4532b3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4532b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4532b730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4532b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4532ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4532bbc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4532bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4532a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4532a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4532a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45328480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45328480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453287d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45328958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45328ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45328c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45328df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45326020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45326330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45324480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45324480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453247d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45324958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45324ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45324c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45324df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45323020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45323330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45321480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45321480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453217d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45321958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45321ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45321c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45321df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45320020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45320330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4531e480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4531e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4531e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4531e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4531eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4531ec68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4531edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4531d020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4531d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4531d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4531b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4531b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4531b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4531b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4531bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4531bc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4531bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4531a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4531a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4531a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45318480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45318480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453187d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45318958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45318ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45318c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45318df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45317020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453171a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45317330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45315480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45315480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453157d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45315958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45315ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45315c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45315df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45314020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45314330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c443c2430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c443c2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443c2780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443c2908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443c2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443c2c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c443c2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d7020"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c443d58c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c443d58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443d5c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443d5da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443d41a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443d4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d44b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d4640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c443c41e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c443c41e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443c4538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443c49d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c443c4b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443c4ce0"/>
        <function-ref name="set" scoped="" ref="0x2b6c443c4e68"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c443d75b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c443d75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443d7908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443d7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443d7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443d7da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c443d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d61a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d6330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c443d4a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c443d4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443d4da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443d3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443d31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443d3330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443d34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d3640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c443c32a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c443c32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443c35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443c3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443c3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443c3a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c443c3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443c3da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c443c2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c443d6740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c443d6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443d6a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443d6c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443d6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443d5020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443d51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d5330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c443d3bd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c443d3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443d2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443d21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443d2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443d24b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443d2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443d27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443d2950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443d2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4536c3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4536c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4536c730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4536c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4536ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4536cbc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4536cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4536b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c4536b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4536b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45369480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45369480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453697d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45369958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45369ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45369c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c45369df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45367020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453671a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45367330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453ba480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453ba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453ba7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453ba958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453baae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453bac68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453badf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453b9020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453b91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453b7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453b77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453b7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453b7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453b7c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453b7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453b6020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453b61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453b4480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453b47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453b4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453b4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453b4c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453b4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453b3020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453b1480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453b17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453b1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453b1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453b1c68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453b1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453b0020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453ae480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453ae480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453ae7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453ae958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453aeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453aec68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453aedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453ad020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453ad1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453ad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453ab480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453ab7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c453ab958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c453abae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c453abc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c453abdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c453aa020"/>
        <function-ref name="set" scoped="" ref="0x2b6c453aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c453aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c443e1ac0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c443e1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443e1e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443f7330"/>
        <function-ref name="get" scoped="" ref="0x2b6c443f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443f7640"/>
        <function-ref name="set" scoped="" ref="0x2b6c443f77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c443f4db8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c443f4db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443f3170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443f32f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443f3480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443f3608"/>
        <function-ref name="get" scoped="" ref="0x2b6c443f3790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443f3918"/>
        <function-ref name="set" scoped="" ref="0x2b6c443f3aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443f3c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c443ee3e0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c443ee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443ee730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443ee8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443eea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443eebc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443eed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44404020"/>
        <function-ref name="set" scoped="" ref="0x2b6c444041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44404330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c444017e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c444017e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44401b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44401cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44401e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443ff020"/>
        <function-ref name="get" scoped="" ref="0x2b6c443ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443ff330"/>
        <function-ref name="set" scoped="" ref="0x2b6c443ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c443fcc38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c443fcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c443fb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c443fb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c443fb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c443fb4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c443fb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c443fb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c443fb950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c443fbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4440e020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4440e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4440e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4440e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4440e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4440e808"/>
        <function-ref name="get" scoped="" ref="0x2b6c4440e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4440eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c4440eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4440ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4440a480" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4440a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4440a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4440a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4440aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4440ac68"/>
        <function-ref name="get" scoped="" ref="0x2b6c4440adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44409020"/>
        <function-ref name="set" scoped="" ref="0x2b6c444091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44409330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c444057e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c444057e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44405b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44405cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44405e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4441c020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4441c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4441c330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4441c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4441c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44418970" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44418970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44418cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44418e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44417020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c444171a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44417330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c444174b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44417640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c444177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44414ab0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44414ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44414e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44413020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c444131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44413330"/>
        <function-ref name="get" scoped="" ref="0x2b6c444134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44413640"/>
        <function-ref name="set" scoped="" ref="0x2b6c444137c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44413950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44427c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44427c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44426020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c444261a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44426330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c444264b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44426640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c444267c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44426950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44426ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44421020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44421020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44421370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c444214f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44421680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44421808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44421990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44421b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44421ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44421e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4441d180" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4441d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4441d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4441d658"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4441d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4441d968"/>
        <function-ref name="get" scoped="" ref="0x2b6c4441daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4441dc78"/>
        <function-ref name="set" scoped="" ref="0x2b6c4441de00"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44434020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4446a6e8" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4446a6e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b6c440ad6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b6c440ad6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4446aa38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c4446ad18" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c4446ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c444680a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c44468228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c444683b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c44468538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c444686c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c44494d70" loc="60:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44494d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c444930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c4447b640" loc="57:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c4447b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c4447b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6c444946a8" loc="59:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c444946a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c444949f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6c4447bc78" loc="58:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c4447bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44494020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c444941a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c44494330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c440b5728" loc="48:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c440b5728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c440b5a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c440b5c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c440aabe8" loc="47:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c440aabe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c440ac020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c440ac1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c440ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c441672b0" loc="56:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c441672b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44167600"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44167788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6c44170758" loc="57:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c44170758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c44170aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c44169448" loc="55:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c44169448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44169798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c44169920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c44169aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6c441872b0" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c441872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c44187600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6c4418c660" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c4418c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c4418c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6c44189a80" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c44189a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c44189dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44489080" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44489080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c444893d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44489558"/>
        <function-ref name="start" scoped="" ref="0x2b6c444896e0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44489868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c44488020" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c44488020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c44488370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444884f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c44488680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c44488808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c44488990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c444a1d10" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c444a1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c444951f0" loc="65:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c444951f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44495540"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c444956c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c44495850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444959d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c44495b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6c444c4860" loc="69:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c444c4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c444c3cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b6c444c1420"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c444c35e0"/>
        <function-ref name="set" scoped="" ref="0x2b6c444c1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c444bf080" loc="70:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c444bf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6c444bf3d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6c444bf558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6c444bf6e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6c444bf868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c444a11c8" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c444a11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444a1518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c444b4cb0" loc="67:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c444ba0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c444ba228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c444ba3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c444b9b58" loc="66:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c444b9b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c4449e020"/>
        <function-ref name="source" scoped="" ref="0x2b6c4449e1a8"/>
        <function-ref name="address" scoped="" ref="0x2b6c4449e330"/>
        <function-ref name="destination" scoped="" ref="0x2b6c4449e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c4449e640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c4449e7c8"/>
        <function-ref name="type" scoped="" ref="0x2b6c4449e950"/>
        <function-ref name="setType" scoped="" ref="0x2b6c4449ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c4449ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c4449ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c44496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6c444c5968" loc="68:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c444c5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c444b8e10"/>
        <function-ref name="clear" scoped="" ref="0x2b6c444c7558"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c444b8730"/>
        <function-ref name="set" scoped="" ref="0x2b6c444c7c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c444be638" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c444be638"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c444be988"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c444beb10"/>
        <function-ref name="start" scoped="" ref="0x2b6c444bec98"/>
        <function-ref name="stop" scoped="" ref="0x2b6c444bee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6c444de670" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c444de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c444ddad0"/>
        <function-ref name="clear" scoped="" ref="0x2b6c444dc1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c444dd3f0"/>
        <function-ref name="set" scoped="" ref="0x2b6c444dc8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c444d05f0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c444d05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c444d0940"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444d0ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444d0c50"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c444d0dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c444cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c444ce348" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c444ce348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444ce698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c444cc020" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c444cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c444cc370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c444cc4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444cc680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444cc808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c444cc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6c444ca738" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c444ca738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c444c9c58"/>
        <function-ref name="clear" scoped="" ref="0x2b6c444e1380"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c444c9578"/>
        <function-ref name="set" scoped="" ref="0x2b6c444e1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b6c444eb338" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c444eb338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c444eb688"/>
        <function-ref name="isSet" scoped="" ref="0x2b6c444eb810"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c444eb998"/>
        <function-ref name="set" scoped="" ref="0x2b6c444ebb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c444cf7a0" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c444cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444cfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c444ebe18" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c444ebe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6c444d91a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6c444d9330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6c444d94b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6c444d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c444cccb8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c444cccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c444cb0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c444cb228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c444cb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c444ce938" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c444ce938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c444cec88"/>
        <function-ref name="source" scoped="" ref="0x2b6c444cee10"/>
        <function-ref name="address" scoped="" ref="0x2b6c444cd020"/>
        <function-ref name="destination" scoped="" ref="0x2b6c444cd1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c444cd330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c444cd4b8"/>
        <function-ref name="type" scoped="" ref="0x2b6c444cd640"/>
        <function-ref name="setType" scoped="" ref="0x2b6c444cd7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c444cd950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c444cdad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c444cdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6c444e2ce0" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c444e2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6c444ca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c444f4c58" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c444f4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c444e4020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444e41a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444e4330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c444e44b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c444e4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c444e4978" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c444e4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444e4cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c444eaba0" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c444eaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c444e9020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444e91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444e9330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c444e94b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c444e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c444e7968" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c444e7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444e7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6c444e3020" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c444e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c444e3370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c444e34f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c444e3680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c444e3808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c444e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c444e9dc0" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c444e9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c444e7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c444e6020" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c444e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c444e6370"/>
        <function-ref name="source" scoped="" ref="0x2b6c444e64f8"/>
        <function-ref name="address" scoped="" ref="0x2b6c444e6680"/>
        <function-ref name="destination" scoped="" ref="0x2b6c444e6808"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c444e6990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c444e6b18"/>
        <function-ref name="type" scoped="" ref="0x2b6c444e6ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b6c444e6e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c444e5020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c444e51a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c444e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c444edd10" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c444edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c4453f0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c4453f228"/>
        <function-ref name="start" scoped="" ref="0x2b6c4453f3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4453f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c4453ea10" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c4453ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c4453ed60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c4453d020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c4453d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c4453d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c4453d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c4453f7b0" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c4453f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c4453fb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c4453fc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c4453fe10"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c4453e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c4453e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c445381a0" loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c445381a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6c445384f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6c44538678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6c44538800"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6c44538988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b6c4453ac30" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b6c4453ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b6c4453c020"/>
        <function-ref name="enableCca" scoped="" ref="0x2b6c4453c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6c44535060" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c44535060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c4454f4b8"/>
        <function-ref name="clear" scoped="" ref="0x2b6c4454fb98"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c44535db0"/>
        <function-ref name="set" scoped="" ref="0x2b6c4454e2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c4453e438" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c4453e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c4453e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b6c4454aac8" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c4454aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c4454ae18"/>
        <function-ref name="isSet" scoped="" ref="0x2b6c44548020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c445481a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44548330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c4453b1d0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c4453b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c4453b520"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c4453b6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c4453b830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b6c445369a8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b6c445369a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b6c44536cf8"/>
        <function-ref name="initial" scoped="" ref="0x2b6c44536e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6c4454c020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c4454c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c4454b478"/>
        <function-ref name="clear" scoped="" ref="0x2b6c4454bb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c4454cd70"/>
        <function-ref name="set" scoped="" ref="0x2b6c4454a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6c4453bb30" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c4453bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6c4453be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44561d20" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44561d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c445600a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44560228"/>
        <function-ref name="start" scoped="" ref="0x2b6c445603b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44560538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b6c44592348" loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b6c44592348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412b588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6c4412b8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6c445911d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x2b6c445a0de8" loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x2b6c445a0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c4459f170"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c4459f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x2b6c445c4778" loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x2b6c445c4778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c445c4ac8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c445c4c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x2b6c4458b8e0" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b6c4458b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c4458e490"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c4458e918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b6c44597df0" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c44597df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c4457d170"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c4457d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c4455f7f0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c4455f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6c4455fb40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6c4455fcc8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6c4455fe50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6c4457a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b6c445607f0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b6c445607f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b6c44560b40"/>
        <function-ref name="enableCca" scoped="" ref="0x2b6c44560cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44561708" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44561708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44561a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x2b6c4458d168" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b6c4458d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c4458dce8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c445a71f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b6c4457e080" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c4457e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c4457e3d0"/>
        <function-ref name="settled" scoped="" ref="0x2b6c4457e558"/>
        <function-ref name="adjust" scoped="" ref="0x2b6c4457e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x2b6c445cfc60" loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x2b6c445cfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c445ce020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c445ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x2b6c4457d770" loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x2b6c4457d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44594a18"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44596158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44596e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c445969f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c445932e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44594e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c445965a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44598370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44594448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44598810"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44598cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x2b6c4457a3e0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x2b6c4457a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4457a730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x2b6c445c9298" loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x2b6c445c9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c445c95e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c445c9770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b6c4457f770" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b6c4457f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b6c4457fac0"/>
        <function-ref name="biasOn" scoped="" ref="0x2b6c4457fc48"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b6c4457fdd0"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b6c44589020"/>
        <function-ref name="selectLock" scoped="" ref="0x2b6c445891a8"/>
        <function-ref name="init" scoped="" ref="0x2b6c44589330"/>
        <function-ref name="getLock" scoped="" ref="0x2b6c445894b8"/>
        <function-ref name="coreOn" scoped="" ref="0x2b6c44589640"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c445897c8"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b6c44589950"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c44589ad8"/>
        <function-ref name="off" scoped="" ref="0x2b6c44589c60"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b6c44589de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x2b6c44576540" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x2b6c44576540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c44576890"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44576a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x2b6c445a79c8" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b6c445a79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c445a6598"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c445a6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b6c4455f020" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b6c4455f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b6c4455f370"/>
        <function-ref name="initial" scoped="" ref="0x2b6c4455f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x2b6c4456d9d8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b6c4456d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b6c4456dd28"/>
        <function-ref name="listen" scoped="" ref="0x2b6c44579020"/>
        <function-ref name="syncing" scoped="" ref="0x2b6c445791a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b6c44579330"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b6c445794b8"/>
        <function-ref name="idleByte" scoped="" ref="0x2b6c44579640"/>
        <function-ref name="cts" scoped="" ref="0x2b6c445797c8"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b6c44579950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c44579ad8"/>
        <function-ref name="off" scoped="" ref="0x2b6c44579c60"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b6c44579de8"/>
        <function-ref name="rx" scoped="" ref="0x2b6c44578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c44618d20" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c44618d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c446160a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c44616228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c446163b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c44616538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c446166c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x2b6c446296f8" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c446296f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b6c44629b48"/>
        <function-ref name="initSlave" scoped="" ref="0x2b6c44629cd0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6c44629e58"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c44628020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6c446281a8"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c44628330"/>
        <function-ref name="readByte" scoped="" ref="0x2b6c446284b8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c44628640"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c446287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c44619a20" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c44619a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c44619d70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c44618020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c446181a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c44618330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c446184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6c44613510" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6c44613510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c44612a88"/>
        <function-ref name="clear" scoped="" ref="0x2b6c44631190"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c446123a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44631870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4461ab58" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4461ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b6c4462b020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6c4462b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c4462b370"/>
        <function-ref name="isSet" scoped="" ref="0x2b6c4462b4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c4462b680"/>
        <function-ref name="set" scoped="" ref="0x2b6c4462b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c44618748" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c44618748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c44618a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b6c44628a98" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c44628a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44628de8"/>
        <function-ref name="settled" scoped="" ref="0x2b6c44627020"/>
        <function-ref name="adjust" scoped="" ref="0x2b6c446271a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x2b6c44627618" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x2b6c44627618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c446261d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44626658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b6c44622900" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b6c44622900"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c446244c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x2b6c446a23f0" loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x2b6c446a23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c446a2740"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c446a28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c446141a0" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c446141a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c446144f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c44614678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c44614800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b6c4462bb78" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b6c4462bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b6c4462a020"/>
        <function-ref name="biasOn" scoped="" ref="0x2b6c4462a1a8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b6c4462a330"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b6c4462a4b8"/>
        <function-ref name="selectLock" scoped="" ref="0x2b6c4462a640"/>
        <function-ref name="init" scoped="" ref="0x2b6c4462a7c8"/>
        <function-ref name="getLock" scoped="" ref="0x2b6c4462a950"/>
        <function-ref name="coreOn" scoped="" ref="0x2b6c4462aad8"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c4462ac60"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b6c4462ade8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c44629020"/>
        <function-ref name="off" scoped="" ref="0x2b6c446291a8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b6c44629330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b6c44624b18" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b6c44624b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44623728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x2b6c446d6020" loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x2b6c446d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c446d6370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c446d64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6c4462f478" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6c4462f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6c4462e900"/>
        <function-ref name="clear" scoped="" ref="0x2b6c4462d020"/>
        <function-ref name="isValid" scoped="" ref="0x2b6c4462e220"/>
        <function-ref name="set" scoped="" ref="0x2b6c4462d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6c446192d0" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c446192d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c44619620"/>
        <function-ref name="stop" scoped="" ref="0x2b6c446197a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6c44614b00" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6c44614b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6c44614e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x2b6c44616968" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b6c44616968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b6c44616cb8"/>
        <function-ref name="listen" scoped="" ref="0x2b6c44616e40"/>
        <function-ref name="syncing" scoped="" ref="0x2b6c44615020"/>
        <function-ref name="rxDone" scoped="" ref="0x2b6c446151a8"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b6c44615330"/>
        <function-ref name="idleByte" scoped="" ref="0x2b6c446154b8"/>
        <function-ref name="cts" scoped="" ref="0x2b6c44615640"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b6c446157c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c44615950"/>
        <function-ref name="off" scoped="" ref="0x2b6c44615ad8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b6c44615c60"/>
        <function-ref name="rx" scoped="" ref="0x2b6c44615de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x2b6c4472b4b8" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x2b6c4472b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44726088"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44726510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c44727620" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44727620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44727970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44727af8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44727c80"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44727e08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4472b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x2b6c4470b6d8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x2b6c4470b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c4472e3a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c4472e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4470ec10" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4470ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x2b6c447372f0" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b6c447372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44737640"/>
        <function-ref name="settled" scoped="" ref="0x2b6c447377c8"/>
        <function-ref name="adjust" scoped="" ref="0x2b6c44737950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b6c44747e48" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b6c44747e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412b588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6c4412b8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6c44746be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x2b6c44747118" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x2b6c44747118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44747468"/>
        <function-ref name="read" scoped="" ref="0x2b6c447475f0"/>
        <function-ref name="write" scoped="" ref="0x2b6c44747778"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b6c44747900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x2b6c44749620" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b6c44749620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b6c44749970"/>
        <function-ref name="biasOn" scoped="" ref="0x2b6c44749af8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b6c44749c80"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b6c44749e08"/>
        <function-ref name="selectLock" scoped="" ref="0x2b6c44748020"/>
        <function-ref name="init" scoped="" ref="0x2b6c447481a8"/>
        <function-ref name="getLock" scoped="" ref="0x2b6c44748330"/>
        <function-ref name="coreOn" scoped="" ref="0x2b6c447484b8"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c44748640"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b6c447487c8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c44748950"/>
        <function-ref name="off" scoped="" ref="0x2b6c44748ad8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b6c44748c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b6c447bd908" loc="50:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b6c447bd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b6c447bdc58"/>
        <function-ref name="initSlave" scoped="" ref="0x2b6c447bdde0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6c447bc020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c447bc1a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6c447bc330"/>
        <function-ref name="txMode" scoped="" ref="0x2b6c447bc4b8"/>
        <function-ref name="readByte" scoped="" ref="0x2b6c447bc640"/>
        <function-ref name="rxMode" scoped="" ref="0x2b6c447bc7c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447bc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x2b6c447c04e0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x2b6c447c04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c447bf088"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c447bf510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x2b6c447bfb80" loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b6c447bfb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c447bd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c447bd1a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c447bd330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c447bd4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c447bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b6c447bcbf8" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b6c447bcbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c447bb020"/>
        <function-ref name="read" scoped="" ref="0x2b6c447bb1a8"/>
        <function-ref name="write" scoped="" ref="0x2b6c447bb330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b6c447bb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44935578" loc="28:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44935578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c449358c8"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44935a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b6c44937680" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b6c44937680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44936230"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c449366b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c44936c70" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44936c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44935020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c449351a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44935330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c447b8980" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c447b8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c447b8cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c447b8e58"/>
        <function-ref name="request" scoped="" ref="0x2b6c44937020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c449371a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44937330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c447b4a08" loc="18:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c447b4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c447d4578"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c447d49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b6c447d3620" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b6c447d3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c447d21d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c447d2658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c447d0208" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c447d0208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c447d0558"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c447d06e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c447d0868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c447cf050" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c447cf050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c447cf3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c447cf528"/>
        <function-ref name="request" scoped="" ref="0x2b6c447cf6b0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c447cf838"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c447cf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c447c9890" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c447c9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c447c9be0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c447c9d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b6c447e59b0" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b6c447e59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b6c447e5d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b6c447c5cb8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c447c5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b6c447ca0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c447ca228"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447ca3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c447ceaf8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c447ceaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c447cee48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c447cb020"/>
        <function-ref name="request" scoped="" ref="0x2b6c447cb1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c447cb330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c447cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c447c4d48" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c447c4d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c447e20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b6c447e1de0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b6c447e1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b6c447e0170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447e02f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b6c447e1488" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c447e1488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b6c447e17d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c447e1960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447e1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b6c447f6940" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c447f6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b6c447f6c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b6c447f6e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b6c447de020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c447de1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b6c447de330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b6c447de4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b6c447de640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b6c447de7c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c447de950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b6c447dead8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b6c447dec60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b6c447dede8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b6c447dd020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b6c447dd2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b6c447dd430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b6c447dd5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b6c447dd740"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c447dd8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c447dda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b6c447dfc10" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c447dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c447e1020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c447e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b6c447ddd30" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c447ddd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c447f50d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c447f5260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c447f53e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c447f5570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c447f56f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b6c44813020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c44813020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b6c44813370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b6c448134f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b6c44813680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c44813808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b6c44813990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b6c44813b18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b6c44813ca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b6c44813e28"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c44812020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b6c448121a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b6c44812330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b6c448124b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b6c44812640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b6c448128c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b6c44812a50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b6c44812bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b6c44812d60"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44811020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c448111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b6c448361e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b6c448361e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b6c44836538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b6c448366c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b6c44836848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c448369d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b6c44836b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b6c44836ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b6c44836e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b6c44835020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c448351a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b6c44835330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b6c448354b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b6c44835640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b6c448357c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b6c44835a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b6c44835bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b6c44835d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b6c44834020"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c448341a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c44834330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b6c44834640" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c44834640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c44834990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c448ce698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c448ce698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c448cea08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c448ceb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c448cb3c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c448cb3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c448cb738"/>
        <function-ref name="configure" scoped="" ref="0x2b6c448cb8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c448cedd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448cedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c448cd170"/>
        <function-ref name="requested" scoped="" ref="0x2b6c448cd2f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c448cd480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c448cd608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c448cd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c448cf840" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c448cf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c448cfbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c448cfd38"/>
        <function-ref name="request" scoped="" ref="0x2b6c448ce020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c448ce1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c448ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c448cd9d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c448cd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c448cdd28"/>
        <function-ref name="userId" scoped="" ref="0x2b6c448cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c45490520" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c45490520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c45490870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c45490af8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c45490af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c45490e48"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c4548f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c4548f1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c4548f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c4548d9a8" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4548d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c4548dd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4548c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c4548a6f8" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4548a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c4548aa68"/>
        <function-ref name="configure" scoped="" ref="0x2b6c4548abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c4548ae78" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c4548ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c454891f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c45489380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c45489508"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c45489690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c4548c268" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4548c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4548c5b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c4548c740"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4548c8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4548ca50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4548cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c454898d8" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c454898d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c45489c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c45489db0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c45488020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c454881a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c45488330"/>
        <function-ref name="get" scoped="" ref="0x2b6c454884b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c45488640"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c45488c60"/>
        <function-ref name="set" scoped="" ref="0x2b6c45488950"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c454887c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c45488ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c4548ebb8" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c4548ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4548d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c4548d1a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c4548d330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4548d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4548d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c4548ce20" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4548ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c4548a1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c4548a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c45487020" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c45487020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45487370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c454874f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c448c8780" loc="72:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c448c8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c448c8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c448c8d18" loc="73:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c448c8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c448dd0a0"/>
        <function-ref name="requested" scoped="" ref="0x2b6c448dd228"/>
        <function-ref name="granted" scoped="" ref="0x2b6c448dd3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c448dd538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c448dd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b6c448c8060" loc="70:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c448c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c448c83b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c448c8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c448dd908" loc="74:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c448dd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c448ddc58"/>
        <function-ref name="userId" scoped="" ref="0x2b6c448ddde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c454b2740" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c454b2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c454b2a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c454b2cd8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c454b2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c454b10a0"/>
        <function-ref name="requested" scoped="" ref="0x2b6c454b1228"/>
        <function-ref name="granted" scoped="" ref="0x2b6c454b13b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c454b1538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c454b16c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b6c454b2020" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c454b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c454b2370"/>
        <function-ref name="stop" scoped="" ref="0x2b6c454b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c454b1908" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c454b1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c454b1c58"/>
        <function-ref name="userId" scoped="" ref="0x2b6c454b1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c448fe6a0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c448fe6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c448fd370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c448fd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b6c448fc428" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b6c448fc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c448fa020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c448fa4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c448f99a0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c448f99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c448f9cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c448f9e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c448f8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b6c448fab18" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b6c448fab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b6c448fae68"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c448f9020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c448f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b6c449134d8" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b6c449134d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44913828"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c449139b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c4492d680" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c4492d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44941370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c449417e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b6c44940060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b6c44940060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44940bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c4493f088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c4493f720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c4493f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4493fa90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c4493fc18"/>
        <function-ref name="request" scoped="" ref="0x2b6c4493fda0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4493d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4493d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6c4495a208" loc="46:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c4495a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c4495a558"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c4495a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6c4495b1a0" loc="45:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b6c4495b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4495bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4495c310" loc="44:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4495c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4495c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6c44953080" loc="48:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c44953080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c449533d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c44953558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6c44954020" loc="47:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b6c44954020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44954b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c449556a0" loc="46:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c449556a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c449559f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44972a60" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44972a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44b15d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b16470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44b151c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44b16d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44b14648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44b141f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44b168c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44b18620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44b15790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44b18ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c44969510" loc="49:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44969510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44966768"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44968e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44967b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44967728"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44964088"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44966bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c449672d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44968088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44966198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44968528"/>
        <function-ref name="stop" scoped="" ref="0x2b6c449689c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c44961b68" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44961b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44989d98"/>
        <function-ref name="fired" scoped="" ref="0x2b6c4495e4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c449891f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c4495ed78"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44988688"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44988238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c4495e928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c449606f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c449897c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44960b90"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4495e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c44988c48" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c44988c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44986820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44964e40" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44964e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c449611c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b6c4499de40" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c4499de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44976be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44975548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c449750c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c449759d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44984d90" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44984d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44981170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b6c44979748" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44979748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44977020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44978020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c44978930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c449784a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c449774a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c4497f578"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4497fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c44a83998" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c44a83998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44a80020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44a810c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c44a819d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44a81548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c44a804a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44a82730"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44a82c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44a831f0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44a831f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6c440ad388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6c440ad388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44a83540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c44a80a90" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44a80a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44a7e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44a7d190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44a7ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44a7d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b6c454e7020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c454e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c454e7370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c454e74f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c454e7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c454e7808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c454e7990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c454e7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c454f4da8" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c454f4da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c454f0470"/>
        <function-ref name="fired" scoped="" ref="0x2b6c454f1510"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c454f1e20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c454f1998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c454f08f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c454f2b38"/>
        <function-ref name="stop" scoped="" ref="0x2b6c454f1088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c454f4600" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c454f4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c454f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c454ef020" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c454ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c454efd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c454ed6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c454ed230"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c454edb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b6c454e20a0" loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c454e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c454e23f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c454e2578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c454e2700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c454e2888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c454e2a10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c454e2b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b6c454e6020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c454e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c454e37a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c454e5560"/>
        <function-ref name="get" scoped="" ref="0x2b6c454e6ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c454e59e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c454e3c30"/>
        <function-ref name="set" scoped="" ref="0x2b6c454e5088"/>
        <function-ref name="start" scoped="" ref="0x2b6c454e5e70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c454e3320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c454ec168" loc="30:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c454ec168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c454e8270"/>
        <function-ref name="test" scoped="" ref="0x2b6c454ea930"/>
        <function-ref name="get" scoped="" ref="0x2b6c454ecce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c454e86f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c454e8bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c454ebb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c454eb6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c454eadb8"/>
        <function-ref name="set" scoped="" ref="0x2b6c454eb1f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c454ea020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c454ea4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44a02020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c44a02370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44a024f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44a02680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44a02808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44a02990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c44a02b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6c449fd228" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c449fd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c449fd578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c449fd700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c449fd888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c449fda10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c449fdb98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c449fdd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c44a00020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c44a00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c449fe7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c449ff560"/>
        <function-ref name="get" scoped="" ref="0x2b6c44a00ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c449ff9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c449fec30"/>
        <function-ref name="set" scoped="" ref="0x2b6c449ff088"/>
        <function-ref name="start" scoped="" ref="0x2b6c449ffe70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c449fe320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44a0ade8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44a0ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44a030f8"/>
        <function-ref name="test" scoped="" ref="0x2b6c44a04798"/>
        <function-ref name="get" scoped="" ref="0x2b6c44a07a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44a03580"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44a03a58"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44a06980"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44a064f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44a04c20"/>
        <function-ref name="set" scoped="" ref="0x2b6c44a06020"/>
        <function-ref name="start" scoped="" ref="0x2b6c44a06e08"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44a04310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44a23160" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44a23160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c44a234b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44a23638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44a237c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44a23948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44a23ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c44a23c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6c44a1e268" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44a1e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c44a1e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6c44a1e968" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c44a1e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c44a1ecb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c44a1ee40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c44a1d020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c44a1d1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c44a1d330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c44a1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c44a22190" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c44a22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44a20930"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44a216d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44a22d10"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44a21b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44a20db8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44a211f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44a20020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44a204a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44a280f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44a280f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44a25270"/>
        <function-ref name="test" scoped="" ref="0x2b6c44a26930"/>
        <function-ref name="get" scoped="" ref="0x2b6c44a28c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44a256f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44a25bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44a27a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44a27608"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44a26db8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44a27130"/>
        <function-ref name="start" scoped="" ref="0x2b6c44a26020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44a264a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6c44ab2cf0" loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b6c44ab2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44ab00a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44ab0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6c44ab5c70" loc="49:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c44ab5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44ab2410"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44ab34a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c44ab3db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44ab3930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c44ab2898"/>
        <function-ref name="start" scoped="" ref="0x2b6c44ab49f0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44abaab0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44abaab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44ab7d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44ab8470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44ab71c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44ab8d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44ab5648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44ab51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44ab88c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44ab9620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44ab7790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44ab9ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44ab8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6c44af9930" loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c44af9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44af9c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44af9e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6c44afe858" loc="49:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b6c44afe858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44afbbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44afc1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44afb020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44afca60"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44af94d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44af9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44afc610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44afd3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44afb5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44afd878"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44afdd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44b045e0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44b045e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44b00988"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b02020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44b02d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44b02900"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44afe2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44b00df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44b02490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44b03198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44b00398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44b03658"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b03b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c44af5128" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c44af5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44af5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c44b1f330" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44b1f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44b1e0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44b1e9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44b1e548"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44b1ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b6c44b0b7e8" loc="54:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c44b0b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6c44b0bb38"/>
        <function-ref name="changed" scoped="" ref="0x2b6c44b0bcc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6c44b0be48"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6c44b0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b6c44b31568" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b6c44b31568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412b588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6c4412b8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6c44b2f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c44b56638" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44b56638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44b553f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44b55d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44b55878"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44b541f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c44b513a0" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44b513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c44162720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44b4f130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44b4fa40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44b4f5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44b4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44b45140" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44b45140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44b45490"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b6c44b45618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44b457a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b6c44b45928"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44b45ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44b45c38"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b6c44b45dc0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b6c44b44020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b6c44b441a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b6c44b44330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c44b69b68" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b6c44b69b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b6c44b67db8"/>
        <function-ref name="test" scoped="" ref="0x2b6c44b674a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b70728"/>
        <function-ref name="captured" scoped="" ref="0x2b6c44b680c0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b68598"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b67930"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b70bb0"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b68a20"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c44b669c0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c44b669c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44b62270"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b63020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b65598"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b634a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b626f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b65a20"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b63930"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b63db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44b4b098" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44b4b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44b47270"/>
        <function-ref name="test" scoped="" ref="0x2b6c44b48930"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b4bc18"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44b476f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44b47bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b4aa58"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44b4a5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b48db8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b4a0f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b48020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b484a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44b8b020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44b8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44b8b370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b6c44b8b4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44b8b680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b6c44b8b808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44b8b990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44b8bb18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b6c44b8bca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b6c44b8be28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b6c44b8a020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b6c44b8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b6c44b7aa48" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b6c44b7aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c44b7ad98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44b78020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44b781a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44b78330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44b784b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c44b78640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b6c44b86e60" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b6c44b86e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44b83798"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b844f8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b85a18"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b84980"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b83c20"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b84020"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b84e08"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b83310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c44b8a680" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b6c44b8a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b6c44b86798"/>
        <function-ref name="test" scoped="" ref="0x2b6c44b88e58"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b89230"/>
        <function-ref name="captured" scoped="" ref="0x2b6c44b89b90"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b880c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b86310"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b896b8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b88548"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b889d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b6c44b812b8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b6c44b812b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44b7fa40"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b807e8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b81e38"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b80c70"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b7d020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b80310"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b7f130"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b7f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b6c44b7d698" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b6c44b7d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44b7a020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44b7cd08"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b7c3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b7b1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b7a4a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b7c830"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b7b680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b7bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44b5c020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44b5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44b590f8"/>
        <function-ref name="test" scoped="" ref="0x2b6c44b5a7a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44b5cba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44b59580"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44b59a58"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44b5b9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44b5b560"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44b5ac30"/>
        <function-ref name="set" scoped="" ref="0x2b6c44b5b088"/>
        <function-ref name="start" scoped="" ref="0x2b6c44b5be70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44b5a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44c30020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44c30020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6c440ad388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6c440ad388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44c30370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44c30740" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44c30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44c21930"/>
        <function-ref name="test" scoped="" ref="0x2b6c44c21020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c243a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44c21db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44c202f0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44c221f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c24d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44c214a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c24830"/>
        <function-ref name="start" scoped="" ref="0x2b6c44c22680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44c22b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c44c1d5a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44c1d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c44162720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44c443a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44c44cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44c44830"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c42190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44c426f0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44c426f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44c3e930"/>
        <function-ref name="test" scoped="" ref="0x2b6c44c3e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c413a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44c3edb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44c3d2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44c401f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c41d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44c3e4a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c41830"/>
        <function-ref name="start" scoped="" ref="0x2b6c44c40680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44c40b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b6c44c56e20" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b6c44c56e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c44162720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44c55be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44c53548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44c530c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c539d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c44c3ac50" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44c3ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44c579f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44c56330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44c57e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c567b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c44b57c38" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c44b57c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44c51820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c44c51e48" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c44c51e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412cd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c4412b178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44c50be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44c4e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44c4e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44c4e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44c84e10" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44c84e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44c7f0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44c82798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44c814d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44c81088"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44c7f960"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44c7f510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44c82be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44c839e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44c81aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44c83e80"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44c82348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c44ca1568" loc="46:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44ca1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44ca18b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44ca1a40"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44ca1bc8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44ca1d50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44c9e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9e1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44c9e330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44c9e950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9e4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44c9e640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44c9e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6c44c99540" loc="50:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c44c99540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c99890"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c99a18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c99ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c99d28"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c981a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c98330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44c9d840" loc="46:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44c9d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44c9db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6c44c987d0" loc="51:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c44c987d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c98b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c98ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c98e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c97020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c97330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c44c9de08" loc="47:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44c9de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44c9a1a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44c9a330"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44c9a4b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44c9a640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44c9a7c8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9a950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44c9aad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44c991a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9ac60"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44c9ade8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44c99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6c44c97958" loc="52:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c44c97958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c97ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c97e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c961a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c96330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c964b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c96640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6c44c9bd60" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c44c9bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cb60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cb6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cb63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cb6570"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cb66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cb6880"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cb6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cb6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6c44cb4020" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c44cb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cb4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cb44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cb4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cb4808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cb4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cb4b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cb4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cb4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6c44cb22d8" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44cb22d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44cb2628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6c44cb31b0" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c44cb31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cb3500"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cb3688"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cb3810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cb3998"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cb3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cb3ca8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cb3e30"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44cad6e0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44cad6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44caaa18"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44cab158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44cabe48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44cab9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44ca82e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44caae68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44cab5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44cac370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44caa448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44cac810"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44caccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44ca7be8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44ca7be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44cdde18"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44ca5548"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44cdd278"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44ca5de8"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44cdc728"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44cdc2d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44ca5998"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44ca6768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44cdd848"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44ca6c08"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44ca50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44cda020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44cda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44cd62b8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44cd9978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44cd76c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44cd7278"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44cd6b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44cd6708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44cd9dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44cdab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44cd7c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44cd9088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44cd9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44cd4dc0" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44cd4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44cd3930"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44cd3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x2b6c44ccb020" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x2b6c44ccb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44ccbb68"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44cca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x2b6c44cc56a8" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x2b6c44cc56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44cc4370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44cc47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x2b6c44ccac98" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x2b6c44ccac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44cc9820"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44cc9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x2b6c44cc89d0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x2b6c44cc89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44cc6560"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44cc69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2b6c44cf8398" loc="21:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2b6c44cf8398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44cf86e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cf8870"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44cf89f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2b6c44cf99a8" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2b6c44cf99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44cf9cf8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cf9e80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44cf8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44cc3bc8" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44cc3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44cf9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44cf91a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44cf9330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44cf94b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44cf9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44cf7550" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44cf7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44cf78a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44cf7a28"/>
        <function-ref name="start" scoped="" ref="0x2b6c44cf7bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44cf7d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2b6c44cf4ad0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2b6c44cf4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44cf4e20"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cf3020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44cf31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x2b6c44ceac00" loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x2b6c44ceac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x2b6c44cea560" loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x2b6c44cea560"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cea8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2b6c44cf4108" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2b6c44cf4108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44cf4458"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cf45e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44cf4768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b6c44cde190" loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b6c44cde190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44cde4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44cde668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x2b6c44cee690" loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x2b6c44cee690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cee9e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ceeb68"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ceecf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ceee78"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ced030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ced1b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ced340"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ced4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44cf35f0" loc="22:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44cf35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44cef8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44cf1020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44cf1d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44cf18c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44cee1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44cefd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44cf1470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44cf2198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44cef320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44cf2638"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44cf2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2b6c44d04020" loc="36:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b6c44d04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d04370"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d044f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44d04680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44d04808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b6c44cfc980" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b6c44cfc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cfccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2b6c44d10de0" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2b6c44d10de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0f608"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d0f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d0f918"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d0faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d0fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2b6c44d0c328" loc="26:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2b6c44d0c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0c678"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0c800"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0c988"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0cb10"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d0cc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d0ce20"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d0b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b6c44cfbd00" loc="48:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b6c44cfbd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d350a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b6c44d35a30" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b6c44d35a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b6c44d097d0" loc="30:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b6c44d097d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d09b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d09ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d09e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d08020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d08330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d084b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d08640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2b6c44cfd808" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2b6c44cfd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cfdb58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cfdce0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cfde68"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cfc020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cfc330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cfc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2b6c44d12ad0" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2b6c44d12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d12e20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d11020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d111a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d11330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d114b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d11640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d117c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d11950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2b6c44d0e020" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2b6c44d0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0e808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d0e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d0eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d0eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d0ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2b6c44d03858" loc="38:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b6c44d03858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d03ba8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d03d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44cff020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44cff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b6c44cfb020" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b6c44cfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cfb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2b6c44cfe680" loc="41:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2b6c44cfe680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cfe9d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cfeb58"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cfece0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cfee68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cfd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cfd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cfd330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cfd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2b6c44d0b4b0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2b6c44d0b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0b800"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0b988"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0bb10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0bc98"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d0be20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d0a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d0a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2b6c44d002b0" loc="35:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b6c44d002b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d00700"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d00888"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44d00a10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44d00b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b6c44d34340" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b6c44d34340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d34690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b6c44d08958" loc="31:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b6c44d08958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d08ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d08e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d06020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d061a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d06330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d064b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d06640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2b6c44d11c58" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2b6c44d11c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d10020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d101a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d10330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d104b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d10640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d107c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d10950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d10ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2b6c44d0d180" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2b6c44d0d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0d658"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0d968"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d0daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d0dc78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d0de00"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b6c44cfb690" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b6c44cfb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44cfb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b6c44d353c0" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b6c44d353c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d35710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b6c44d0a648" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b6c44d0a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d0a998"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d0ab20"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d0aca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d0ae30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d091a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d09330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2b6c44d04ba8" loc="37:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b6c44d04ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d03020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d031a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44d03330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44d034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2b6c44cff4f8" loc="40:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2b6c44cff4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cff848"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cff9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cffb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cffce0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cffe68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cfe020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cfe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cfe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b6c44d349b0" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b6c44d349b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d34d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2b6c44d15970" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2b6c44d15970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d15cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d15e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d12020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d121a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d12330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d124b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d12640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b6c44d06ae0" loc="32:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b6c44d06ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d06e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d05020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d05330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d05640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d057c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d05950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b6c44d33c28" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b6c44d33c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b6c44d2f060" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b6c44d2f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d2f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b6c44d2fd40" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b6c44d2fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d2e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b6c44d30340" loc="19:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b6c44d30340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d30690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b6c44d2e3f8" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b6c44d2e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d2e748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b6c44d309b0" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b6c44d309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d30d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b6c44d2f6d0" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b6c44d2f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d2fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b6c44d2ea68" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b6c44d2ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44d2edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b6c44d53b38" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b6c44d53b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d52020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d521a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d52330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d524b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d52640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b6c44d20c88" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b6c44d20c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d1f020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d1f1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d1f330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d1f4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d1f640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b6c44d19b38" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b6c44d19b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d54020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d541a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d54330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d544b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d54640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b6c44d52b38" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b6c44d52b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d51020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d511a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d51330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d514b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d51640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d517c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b6c44d1fb38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b6c44d1fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d1a020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d1a1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d1a330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d1a4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d1a640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d1a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b6c44d54b38" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b6c44d54b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d53020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d531a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d53330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d534b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d53640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b6c44d1bda0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b6c44d1bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d20170"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d202f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d20480"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d20608"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d20790"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d20918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b6c44d1ab38" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b6c44d1ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d19020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d191a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d19330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d194b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d19640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b6c44d48758" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b6c44d48758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d48aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b6c44d4d020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b6c44d4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d4d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b6c44d4b758" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b6c44d4b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d4baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b6c44d47020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b6c44d47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d47370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b6c44d4d758" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b6c44d4d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d4daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b6c44d48020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b6c44d48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d48370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b6c44d4a850" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b6c44d4a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d4aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b6c44d4b020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b6c44d4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d4b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d68258" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d68258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d685a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d68730"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d688b8"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d68a40"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d68bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d68d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d90060" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d90060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d903b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d8ecf8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d8ecf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d8c0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d8c228"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d8c3b0"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d8c538"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d8c6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d8c848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d8cb10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d8cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d8ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d897e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d897e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d89b38"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d89cc0"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d89e48"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d88020"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d881a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d88330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d885f8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d885f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d88948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d853e0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d85730"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d858b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d85a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d85bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d85d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d84020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d842e8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d842e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d84638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d80180" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d80180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d804d0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d80658"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d807e0"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d80968"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d80af0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d80c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d7f020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d7f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d7c020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d7c370"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d7c4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d7c680"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d7c808"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d7c990"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d7cb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d7cde0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d7cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d7b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d79cd8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d79cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d770a0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d77228"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d773b0"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d77538"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d776c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d77848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d77b10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d77b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d77e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c44d749d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c44d749d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d74d28"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d73020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d731a8"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d73330"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d734b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d73640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c44d73908" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c44d73908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d73c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b6c44da3b10" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44da3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44da3e60"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d95020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d951a8"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d95330"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d954b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d95640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6c44da3060" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b6c44da3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44da33b0"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44da3538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44da36c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44da3848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b6c44d922e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44d922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44d92638"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d927c0"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d92948"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44d92ad0"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44d92c58"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44d92de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6c44d93728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b6c44d93728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44d93a78"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44d93c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44d93d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44d92020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b6c44dcdad0" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44dcdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44dcde20"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44dcc020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44dcc1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44dcc330"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44dcc4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44dcc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6c44dcd020" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b6c44dcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44dcd370"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44dcd4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44dcd680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44dcd808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b6c44dc92e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c44dc92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c44dc9638"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44dc97c0"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44dc9948"/>
        <function-ref name="edge" scoped="" ref="0x2b6c44dc9ad0"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44dc9c58"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c44dc9de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6c44dca728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b6c44dca728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44dcaa78"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44dcac00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44dcad88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44dc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44dbadc0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44dbadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44db5088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44db7708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44db6470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44db6020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44db5928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44db54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44db7b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44db8930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44db6a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44db8dd0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44db72b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c44db1820" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44db1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c44db1b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44db1d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44def550" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44def550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44def8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44defa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c44db0020" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44db0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44db0370"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44db04f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44db0680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44db0808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44db0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44db2a58" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44db2a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44db2dc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44db1020"/>
        <function-ref name="request" scoped="" ref="0x2b6c44db11a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44db1330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44db14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c44db0bd8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44db0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44def020"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44def1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c455d27b8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c455d27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c455d2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c455d2d90" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c455d2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c455d1170"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c455d12f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c455d1480"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c455d1608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c455ceb48" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c455ceb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c455cd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c455cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c455cc8c0" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c455cc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c455ccc30"/>
        <function-ref name="configure" scoped="" ref="0x2b6c455ccdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c455cb0a0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c455cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c455cb3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c455cb578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c455cb700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c455cb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c455cd3f0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c455cd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c455cd740"/>
        <function-ref name="requested" scoped="" ref="0x2b6c455cd8c8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c455cda50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c455cdbd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c455cdd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c455cbad0" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c455cbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c455cbe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c455ca020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c455ca1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c455ca330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c455ca4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c455ca640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c455ca7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c455cade8"/>
        <function-ref name="set" scoped="" ref="0x2b6c455caad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c455ca950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c455cac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c455d0e20" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c455d0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c455ce1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c455ce348"/>
        <function-ref name="request" scoped="" ref="0x2b6c455ce4d0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c455ce658"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c455ce7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c455cc020" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c455cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c455cc370"/>
        <function-ref name="userId" scoped="" ref="0x2b6c455cc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c455c9100" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c455c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c455c9450"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c455c95d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c44dec0e0" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44dec0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44dec430"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44dec5b8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44dec740"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44dec8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c44decb10" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44decb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c44dece60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c44dff0e0" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44dff0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44dff430"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44dff5b8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44dff740"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44dff8c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44dffa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c44dffc98" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44dffc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44dfe020"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44dfe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c455f6740" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c455f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c455f6a90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c455f6c18"/>
        <function-ref name="start" scoped="" ref="0x2b6c455f6da0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c455f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c455f5268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c455f5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c455f55b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b6c45652b90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b6c45652b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45651020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c456511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c455f5800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c455f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c455f5b50"/>
        <function-ref name="requested" scoped="" ref="0x2b6c455f5cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c455f5e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c45652020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456521a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b6c45651470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b6c45651470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c456517c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45651948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b6c455f6020" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c455f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c455f6370"/>
        <function-ref name="stop" scoped="" ref="0x2b6c455f64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c456523f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c45652740"/>
        <function-ref name="userId" scoped="" ref="0x2b6c456528c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44df7020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44df7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44df7b88"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44df6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b6c44df6860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b6c44df6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44df5458"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44df58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c44df3020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44df3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44df3390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44df3518"/>
        <function-ref name="request" scoped="" ref="0x2b6c44df36a0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44df3828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44df39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44df1790" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44df1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44df0370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44df07e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b6c44e2d060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b6c44e2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e2dbc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e2c088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c44e2c720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44e2c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e2ca90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e2cc18"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e2cda0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e2b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c4556f020" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4556f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c4556f370"/>
        <function-ref name="configure" scoped="" ref="0x2b6c4556f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c45572128" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c45572128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c45572c70"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c455700f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c455706b0" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c455706b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c45570a00"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c45570b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c45570d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44e170a0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44e170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e17be8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44ecc088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44e12788" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44e12788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e11370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e117c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x2b6c44e471c8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x2b6c44e471c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e47d10"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e461c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x2b6c44e0fc58" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x2b6c44e0fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e4c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e4c1a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e4c330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e4c4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e4c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x2b6c44e4b020" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2b6c44e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e4b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e4b4f8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e4b680"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e4b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e4b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x2b6c44e4a3f0" loc="7:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x2b6c44e4a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e49020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e49470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x2b6c44e43ce8" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b6c44e43ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44e420a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b6c44e432d8" loc="16:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44e432d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44e43628"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44e437b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44e43938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c44e3c510" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e3c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c44e3c880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e3ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44e3a140" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e3a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44e3a4b0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44e3a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c44e3cc50" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e3cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e3b020"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44e3b1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e3b330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e3b4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e3b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44e447c0" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44e447c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e44b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e44cb8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e44e40"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e3c020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c44e3b888" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e3b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44e3bbd8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44e3bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c45682dc8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c45682dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c45681170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c456813f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456813f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c45681748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c456818d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c45681a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c45681be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c4567e200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4567e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c4567e570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4567e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c4567de18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4567de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c4567c1c0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c4567c348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c4567c5d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c4567c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c4567c920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c4567caa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c4567cc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c4567cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c4567e940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4567e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4567ec90"/>
        <function-ref name="requested" scoped="" ref="0x2b6c4567ee18"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4567d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4567d1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4567d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c4567a060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c4567a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c4567a3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c4567a538"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c4567a6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c4567a848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c4567a9d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c4567ab58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c4567ace0"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c45679330"/>
        <function-ref name="set" scoped="" ref="0x2b6c45679020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c4567ae68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c456791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c4567f4b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c4567f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4567f820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c4567f9a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c4567fb30"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4567fcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4567fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c4567d578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4567d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c4567d8c8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c4567da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c456795f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c456795f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45679948"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45679ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c44e37698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e37698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c44e37a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e37b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44e353c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e353c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44e35738"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44e358c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c44e37dd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e37dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e36170"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44e362f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e36480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e36608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e36790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44e38910" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44e38910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e38c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e38e08"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e37020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e371a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e37330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c44e369d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e369d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44e36d28"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c456a7020" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c456a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c456a7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c456a75f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456a75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c456a7948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c456a7ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c456a7c58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c456a7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c456a3388" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c456a3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c456a36f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456a3880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c456a1020" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c456a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c456a1390"/>
        <function-ref name="configure" scoped="" ref="0x2b6c456a1518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c456a17a0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c456a17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c456a1af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c456a1c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c456a1e00"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c456a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c456a3ac8" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456a3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c456a3e18"/>
        <function-ref name="requested" scoped="" ref="0x2b6c456a2020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c456a21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c456a2330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c456a0268" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c456a0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c456a05b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c456a0740"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c456a08c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c456a0a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c456a0bd8"/>
        <function-ref name="get" scoped="" ref="0x2b6c456a0d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c4569f020"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c4569f640"/>
        <function-ref name="set" scoped="" ref="0x2b6c4569f330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c4569f1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c4569f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c456a5630" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c456a5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c456a59a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c456a5b28"/>
        <function-ref name="request" scoped="" ref="0x2b6c456a5cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c456a5e38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c456a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c456a2700" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456a2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c456a2a50"/>
        <function-ref name="userId" scoped="" ref="0x2b6c456a2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c4569f908" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c4569f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c4569fc58"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c4569fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c44e319a8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44e319a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c44e31d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44e2f6d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44e2f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44e2fa48"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44e2fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c44e30268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e30268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e305b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44e30740"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e308c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e30a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e30bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44e32b28" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44e32b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e31020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e311a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e31330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e314b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e31640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c44e30e20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e30e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44e2f1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44e2f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c456cfd10" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c456cfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c456ce0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c456ce328" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c456ce328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c456ce678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c456ce800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c456ce988"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c456ceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c456ca200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c456ca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c456ca570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456ca6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c456c9e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c456c9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c456c81c0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c456c8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c456c85d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c456c85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c456c8920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c456c8aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c456c8c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c456c8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c456ca940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456ca940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c456cac90"/>
        <function-ref name="requested" scoped="" ref="0x2b6c456cae18"/>
        <function-ref name="granted" scoped="" ref="0x2b6c456c9020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c456c91a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c456c7060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c456c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c456c73b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c456c7538"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c456c76c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c456c7848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c456c79d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c456c7b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c456c7ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c456c6330"/>
        <function-ref name="set" scoped="" ref="0x2b6c456c6020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c456c7e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c456c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c456cb4b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c456cb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c456cb820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c456cb9a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c456cbb30"/>
        <function-ref name="granted" scoped="" ref="0x2b6c456cbcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c456cbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c456c9578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456c9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c456c98c8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c456c9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c456c65f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c456c65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c456c6948"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c456c6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c44e6d6d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e6d6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44e6da28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44e6dbb0"/>
        <function-ref name="start" scoped="" ref="0x2b6c44e6dd38"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c44e6c268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44e6c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c44e6c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c44e6c800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e6c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e6cb50"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44e6ccd8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e6ce60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e6a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e6a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c44e6a3f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e6a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44e6a740"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44e6a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c456f6d58" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c456f6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c456f50d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c456f5260"/>
        <function-ref name="start" scoped="" ref="0x2b6c456f53e8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c456f5570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c456f57b8" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c456f57b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c456f5b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b6c456f3120" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b6c456f3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c456f3470"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c456f35f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c456f5d50" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c456f5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c456f40d8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c456f4260"/>
        <function-ref name="granted" scoped="" ref="0x2b6c456f43e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c456f4570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c456f46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b6c456f38c0" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b6c456f38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c456f3c10"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c456f3d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b6c456f6638" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c456f6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c456f6988"/>
        <function-ref name="stop" scoped="" ref="0x2b6c456f6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c456f4940" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c456f4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c456f4c90"/>
        <function-ref name="userId" scoped="" ref="0x2b6c456f4e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c44e681c8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e681c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44e68518"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44e686a0"/>
        <function-ref name="start" scoped="" ref="0x2b6c44e68828"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e689b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c44e68bf8" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44e68bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c44e67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c44e67268" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44e67268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e675b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44e67740"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e678c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e67a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44e67bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c44e67e20" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44e67e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44e661a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44e66330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c45742020" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c45742020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c45742370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c457424f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c45742680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45742808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c45742a50" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45742a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c45742da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b6c45740470" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b6c45740470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c457407c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45740948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c45741020" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c45741370"/>
        <function-ref name="requested" scoped="" ref="0x2b6c457414f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c45741680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c45741808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c45741990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b6c45740c10" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b6c45740c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c4573e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c4573e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b6c457438d8" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c457438d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c45743c28"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45743db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c45741bd8" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c45741bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c45740020"/>
        <function-ref name="userId" scoped="" ref="0x2b6c457401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44e85540" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e85540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44e85890"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44e85a18"/>
        <function-ref name="start" scoped="" ref="0x2b6c44e85ba0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e85d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b6c44e827d8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b6c44e827d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e82b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e82cb0"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e82e38"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e81020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44e841c0" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44e841c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e84d28"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e821c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b6c44e7ad98" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b6c44e7ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44e79170"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44e792f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b6c44e7c4a0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b6c44e7c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44e7c7f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44e7c978"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44e7cb00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44e7cc88"/>
        <function-ref name="get" scoped="" ref="0x2b6c44e7ce10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44e7b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44e7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44e7b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b6c44e7b6c0" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b6c44e7b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e7a370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e7a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44e814f8" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44e814f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44e7e768"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44e80e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44e7fb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44e7f728"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44e7c088"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44e7ebb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44e7f2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44e80088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44e7e198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44e80528"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e809c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44e77600" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44e77600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44e77950"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44e77ad8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44e77c60"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e77de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b6c44e748f0" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b6c44e748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44e74c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44e74dc8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44e73020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44e731a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44e73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44e76288" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44e76288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e76df0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e742d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b6c44eade00" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b6c44eade00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44eac1a8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44eac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b6c44eaf5d8" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b6c44eaf5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44eaf928"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44eafab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44eafc38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44eafdc0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44eae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44eae1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44eae330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44eae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b6c44eae848" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b6c44eae848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44ead3d8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44ead828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44e73680" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44e73680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44e6f8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44e71020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44e71d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44e718c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44eaf1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44e6fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44e71470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44e721f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44e6f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44e72698"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44e72b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44eaa5e8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44eaa5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44ea68f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44ea7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44ea7d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44ea78c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44ea51c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44ea6d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44ea7470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44ea8158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44ea6320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44ea85f8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44ea8a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44ea1908" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44ea1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44ea1c58"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44ea1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44ea3aa8" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44ea3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44ea2620"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44ea2a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c44ea1060" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44ea1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44ea13b0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44ea1538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44ea16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44e92d58" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44e92d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e918f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e91d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b6c44e905e8" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b6c44e905e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44e8f198"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44e8f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c44e8fca0" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44e8fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44ecf0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44ecf228"/>
        <function-ref name="request" scoped="" ref="0x2b6c44ecf3b0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44ecf538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44ecf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c450b6380" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c450b6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c450b5020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c450b5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b6c450b5a08" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b6c450b5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b6c450b5d58"/>
        <function-ref name="disable" scoped="" ref="0x2b6c450b4020"/>
        <function-ref name="stopMic" scoped="" ref="0x2b6c450b41a8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b6c450b4330"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b6c450b44b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c450b4640"/>
        <function-ref name="muxSel" scoped="" ref="0x2b6c450b47c8"/>
        <function-ref name="startMic" scoped="" ref="0x2b6c450b4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c44ebe6f8" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c44ebe6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44ebd370"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44ebd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b6c44ebb538" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b6c44ebb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44eba0c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44eba510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b6c44eb3c10" loc="43:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b6c44eb3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b6c44eb2020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44eb21a8"/>
        <function-ref name="stopMic" scoped="" ref="0x2b6c44eb2330"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b6c44eb24b8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b6c44eb2640"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44eb27c8"/>
        <function-ref name="muxSel" scoped="" ref="0x2b6c44eb2950"/>
        <function-ref name="startMic" scoped="" ref="0x2b6c44eb2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b6c44eb3300" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c44eb3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44eb3650"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44eb37d8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44eb3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44eb4598" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44eb4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44eb48e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44eb4a70"/>
        <function-ref name="request" scoped="" ref="0x2b6c44eb4bf8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44eb4d80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44eb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c44eb1668" loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c44eb1668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c44eb19b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c44eb1b40"/>
        <function-ref name="start" scoped="" ref="0x2b6c44eb1cc8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44eb1e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x2b6c44ee76d8" loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x2b6c44ee76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ee7a28"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ee7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ee7d38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ee6020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ee61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ee6330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ee64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ee6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x2b6c44eef438" loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b6c44eef438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c44eef788"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44eef910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c44eefa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x2b6c44ee90b8" loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x2b6c44ee90b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ee9408"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ee9590"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ee9718"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ee98a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ee9a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ee9bb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ee9d38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ee8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x2b6c44ee83a8" loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x2b6c44ee83a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ee86f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ee8880"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ee8a08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ee8b90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ee8d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ee7020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ee71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ee7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b6c44ef0188" loc="48:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b6c44ef0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b6c44ef04d8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44ef0660"/>
        <function-ref name="stopMic" scoped="" ref="0x2b6c44ef07e8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b6c44ef0970"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b6c44ef0af8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c44ef0c80"/>
        <function-ref name="muxSel" scoped="" ref="0x2b6c44ef0e08"/>
        <function-ref name="startMic" scoped="" ref="0x2b6c44eef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2b6c44ed7828" loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2b6c44ed7828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44ed7b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44ed7d00"/>
        <function-ref name="request" scoped="" ref="0x2b6c44ed6020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44ed61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44ed6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x2b6c44ee69b0" loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x2b6c44ee69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b6c44ee6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b6c44edac30" loc="56:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44edac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44ee4820"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c44ed9ba0"/>
        <function-ref name="write" scoped="" ref="0x2b6c44ee33c8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44ed9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x2b6c44ed6710" loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x2b6c44ed6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c44ed6a60"/>
        <function-ref name="disable" scoped="" ref="0x2b6c44ed6be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c44ed6d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c44ed5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c44eee020" loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44eee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44eea2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44eed978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44eeb6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44eeb278"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44eeab58"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44eea708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44eeddc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44eeeb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44eebc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44eed088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44eed528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44f321d0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44f321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f32520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44f326a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44f32830"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f329b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f32b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b6c4504f020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b6c4504f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c4504fba0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c45093020"/>
        <function-ref name="write" scoped="" ref="0x2b6c4504e790"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c4504d388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44f24538" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44f24538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f24888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44f24a10"/>
        <function-ref name="request" scoped="" ref="0x2b6c44f24b98"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f24d20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b6c44f239b0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44f239b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44f21560"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c44f1f8b0"/>
        <function-ref name="write" scoped="" ref="0x2b6c44f20130"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44f20cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c44f78af8" loc="92:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c44f78af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c44f78e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44f77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c44f766d8" loc="96:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c44f766d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c44f76a48"/>
        <function-ref name="configure" scoped="" ref="0x2b6c44f76bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c44f77268" loc="93:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44f77268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f775b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44f77740"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f778c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f77a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44f77bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44f35d80" loc="91:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44f35d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f78170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44f782f8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44f78480"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f78608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f78790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c44f77e20" loc="94:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44f77e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44f761a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44f76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c45751d88" loc="44:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c45751d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c4574f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b6c4574f3f8" loc="45:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b6c4574f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c4574f748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c4574f8d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c4574fa58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c4574fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c4574c200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4574c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c4574c570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4574c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c4574be18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c4574be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c4574a1c0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c4574a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c4574a5d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c4574a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c4574a920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c4574aaa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c4574ac30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c4574adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c4574c940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c4574c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4574cc90"/>
        <function-ref name="requested" scoped="" ref="0x2b6c4574ce18"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4574b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4574b1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c4574b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c45749060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c45749060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c457493b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c45749538"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c457496c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c45749848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c457499d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c45749b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c45749ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c45748330"/>
        <function-ref name="set" scoped="" ref="0x2b6c45748020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c45749e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c457481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c4574d4b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c4574d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4574d820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c4574d9a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c4574db30"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4574dcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4574de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c4574b578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c4574b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c4574b8c8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c4574ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c457485f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c457485f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45748948"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45748ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c44f74d20" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c44f74d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c44f720a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c44f722e8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c44f722e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f72638"/>
        <function-ref name="requested" scoped="" ref="0x2b6c44f727c0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f72948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f72ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c44f72c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b6c44f74600" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c44f74600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c44f74950"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44f74ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c44f71020" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c44f71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c44f71370"/>
        <function-ref name="userId" scoped="" ref="0x2b6c44f714f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2b6c44fba420" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b6c44fba420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b6c44fba770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b6c44f79a10" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b6c44f79a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44fbe5d8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c44fbb8e8"/>
        <function-ref name="write" scoped="" ref="0x2b6c44fbd190"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44fbdd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c44fba9f8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44fba9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44fbad48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44fb9020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44fb91a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44fb9330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44fb94b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44fb9640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44fb97c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44fb9de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44fb9ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44fb9950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44fb9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c44f6e140" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c44f6e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f6e4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44f6e638"/>
        <function-ref name="request" scoped="" ref="0x2b6c44f6e7c0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f6e948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f6ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b6c44f7e020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b6c44f7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c44f7ebc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c44f7a020"/>
        <function-ref name="write" scoped="" ref="0x2b6c44f7d790"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c44f7c388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b6c44f7ac70" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b6c44f7ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c44f79020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c44f791a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c44f79330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c44f794b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c44f79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2b6c45023318" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b6c45023318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b6c45023668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2b6c45023930" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b6c45023930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b6c45023c80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b6c45023e08"/>
        <function-ref name="setStart" scoped="" ref="0x2b6c45021020"/>
        <function-ref name="status" scoped="" ref="0x2b6c450211a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b6c45021330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c450214b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c45021640"/>
        <function-ref name="read" scoped="" ref="0x2b6c450217c8"/>
        <function-ref name="init" scoped="" ref="0x2b6c45021950"/>
        <function-ref name="enableAck" scoped="" ref="0x2b6c45021ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c45021c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2b6c45021de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c45020020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b6c450202a8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c45020430"/>
        <function-ref name="write" scoped="" ref="0x2b6c450205b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b6c45020740"/>
        <function-ref name="off" scoped="" ref="0x2b6c450208c8"/>
        <function-ref name="setStop" scoped="" ref="0x2b6c45020a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b6c45020bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c45020d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2b6c4501f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2b6c4501f2e8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b6c4501f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c4501f638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c4501f7c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c4501f948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c4501fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c4501fc58"/>
        <function-ref name="get" scoped="" ref="0x2b6c4501fde0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c4501e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c4501e640"/>
        <function-ref name="set" scoped="" ref="0x2b6c4501e330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c4501e1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c4501e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2b6c4501e908" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b6c4501e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c4501ec58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c4501ede0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c4501d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c4501d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c4501d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c4501d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c4501d640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c4501dc60"/>
        <function-ref name="set" scoped="" ref="0x2b6c4501d950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c4501d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c4501dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b6c44fb5e60" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c44fb5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c450271e8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45027370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b6c45027700" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b6c45027700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b6c44eb98c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b6c44eb9b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c450263a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c45024790"/>
        <function-ref name="write" scoped="" ref="0x2b6c45025020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c45025ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b6c4501a830" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b6c4501a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b6c4501ab80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b6c4501ad08"/>
        <function-ref name="setStart" scoped="" ref="0x2b6c45017020"/>
        <function-ref name="status" scoped="" ref="0x2b6c450171a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b6c45017330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c450174b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c45017640"/>
        <function-ref name="read" scoped="" ref="0x2b6c450177c8"/>
        <function-ref name="init" scoped="" ref="0x2b6c45017950"/>
        <function-ref name="enableAck" scoped="" ref="0x2b6c45017ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c45017c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2b6c45017de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c45016020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b6c450162a8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c45016430"/>
        <function-ref name="write" scoped="" ref="0x2b6c450165b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b6c45016740"/>
        <function-ref name="off" scoped="" ref="0x2b6c450168c8"/>
        <function-ref name="setStop" scoped="" ref="0x2b6c45016a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b6c45016bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c45016d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2b6c45015020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b6c450121d8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b6c450121d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b6c45012528"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b6c450126b0"/>
        <function-ref name="setStart" scoped="" ref="0x2b6c45012838"/>
        <function-ref name="status" scoped="" ref="0x2b6c450129c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b6c45012b48"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b6c45012cd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c45012e58"/>
        <function-ref name="read" scoped="" ref="0x2b6c45011020"/>
        <function-ref name="init" scoped="" ref="0x2b6c450111a8"/>
        <function-ref name="enableAck" scoped="" ref="0x2b6c45011330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c450114b8"/>
        <function-ref name="hasStart" scoped="" ref="0x2b6c45011640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c450117c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b6c45011a50"/>
        <function-ref name="enable" scoped="" ref="0x2b6c45011bd8"/>
        <function-ref name="write" scoped="" ref="0x2b6c45011d60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b6c45010020"/>
        <function-ref name="off" scoped="" ref="0x2b6c450101a8"/>
        <function-ref name="setStop" scoped="" ref="0x2b6c45010330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b6c450104b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c45010640"/>
        <function-ref name="hasStop" scoped="" ref="0x2b6c450107c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2b6c45010b50" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2b6c45010b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4500f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4500f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4500f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4500f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c4500f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4500f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4500f950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4500fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2b6c4500fe08" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2b6c4500fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4500e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4500e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4500e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4500e640"/>
        <function-ref name="get" scoped="" ref="0x2b6c4500e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4500e950"/>
        <function-ref name="set" scoped="" ref="0x2b6c4500ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4500ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c4506ad10" loc="46:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c4506ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c450670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c45067358" loc="47:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c45067358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c450676a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c45067830"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c450679b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c45067b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c45067cc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c45067e50"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c45066020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c45066640"/>
        <function-ref name="set" scoped="" ref="0x2b6c450661a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c45066330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c450664b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c45091020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c45091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c4508d2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c45090978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c4508f6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c4508f278"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c4508db58"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c4508d708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45090dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c45091b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c4508fc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c45090088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45090528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c4508aaf8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c4508aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c4508ae68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c45089020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c450886d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c450886d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c45088a48"/>
        <function-ref name="configure" scoped="" ref="0x2b6c45088bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c45089268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45089268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c450895b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6c45089740"/>
        <function-ref name="granted" scoped="" ref="0x2b6c450898c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c45089a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c45089bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c4508bd88" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c4508bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c4508a170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c4508a2f8"/>
        <function-ref name="request" scoped="" ref="0x2b6c4508a480"/>
        <function-ref name="granted" scoped="" ref="0x2b6c4508a608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c4508a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c45089e20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c45089e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c450881a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c45088330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c457f9980" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c457f9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c457f9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b6c457f8020" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b6c457f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c457f8370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c457f84f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c457f8680"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c457f8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c457f6d58" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c457f6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c457f50f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c457f5278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c457f4980" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c457f4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c457f4cf0"/>
        <function-ref name="configure" scoped="" ref="0x2b6c457f4e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c457f2130" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c457f2130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c457f2480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c457f2608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c457f2790"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c457f2918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6c457f54c0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c457f54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c457f5810"/>
        <function-ref name="requested" scoped="" ref="0x2b6c457f5998"/>
        <function-ref name="granted" scoped="" ref="0x2b6c457f5b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c457f5ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c457f5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c457f2b60" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c457f2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c457f1020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c457f11a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c457f1330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c457f14b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c457f1640"/>
        <function-ref name="get" scoped="" ref="0x2b6c457f17c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c457f1950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c457f0020"/>
        <function-ref name="set" scoped="" ref="0x2b6c457f1c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c457f1ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c457f1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c457f6060" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c457f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c457f63d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c457f6558"/>
        <function-ref name="request" scoped="" ref="0x2b6c457f66e0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c457f6868"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c457f69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c457f40e0" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c457f40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c457f4430"/>
        <function-ref name="userId" scoped="" ref="0x2b6c457f45b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c457f02e8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c457f02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c457f0638"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c457f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c450866d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c450866d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c45086a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c45086bb0"/>
        <function-ref name="start" scoped="" ref="0x2b6c45086d38"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45084020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c45084268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45084268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c450845b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c45084800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45084800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c45084b50"/>
        <function-ref name="requested" scoped="" ref="0x2b6c45084cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c45084e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c45083020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c450831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c450833f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c450833f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c45083740"/>
        <function-ref name="userId" scoped="" ref="0x2b6c450838c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b6c45826780" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c45826780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c45826ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c45826c58"/>
        <function-ref name="start" scoped="" ref="0x2b6c45826de0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45825020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6c45825268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6c45825268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6c458255b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b6c45824b90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b6c45824b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45823020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c458231a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6c45825800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6c45825800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c45825b50"/>
        <function-ref name="requested" scoped="" ref="0x2b6c45825cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c45825e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c45824020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c458241a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b6c45823470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b6c45823470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c458237c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45823948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b6c45826060" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c45826060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c458263b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45826538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c458243f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c458243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c45824740"/>
        <function-ref name="userId" scoped="" ref="0x2b6c458248c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c45078020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c45078020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c45078b88"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c45077020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b6c45077860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b6c45077860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c45076458"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c450768c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c45074020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c45074020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c45074390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c45074518"/>
        <function-ref name="request" scoped="" ref="0x2b6c450746a0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c45074828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c450749b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c45764578" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c45764578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c457648c8"/>
        <function-ref name="configure" scoped="" ref="0x2b6c45764a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b6c457675f0" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b6c457675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c45766198"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c457665e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b6c45766ba0" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b6c45766ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b6c45764020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c457641a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b6c45764330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c45111d20" loc="49:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c45111d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c451100a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45110228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c451103b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c45110538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c451106c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c45110908" loc="50:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c45110908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c45110c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c45110de0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c4510f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c4510f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c4510f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c4510f578" loc="51:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c4510f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c4510f8c8"/>
        <function-ref name="source" scoped="" ref="0x2b6c4510fa50"/>
        <function-ref name="address" scoped="" ref="0x2b6c4510fbd8"/>
        <function-ref name="destination" scoped="" ref="0x2b6c4510fd60"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c4510d020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c4510d1a8"/>
        <function-ref name="type" scoped="" ref="0x2b6c4510d330"/>
        <function-ref name="setType" scoped="" ref="0x2b6c4510d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c4510d640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c4510d7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c4510d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6c4510dbd8" loc="52:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b6c4510dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c4510c020"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c4510c1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c4510c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c45869978" loc="49:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c45869978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c45869cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45869e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45867020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c458671a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c45867330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c45867578" loc="50:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c45867578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c458678c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c45867a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45867bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45867d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c45866020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c45866268" loc="51:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c45866268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c458665b8"/>
        <function-ref name="source" scoped="" ref="0x2b6c45866740"/>
        <function-ref name="address" scoped="" ref="0x2b6c458668c8"/>
        <function-ref name="destination" scoped="" ref="0x2b6c45866a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c45866bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c45866d60"/>
        <function-ref name="type" scoped="" ref="0x2b6c45865020"/>
        <function-ref name="setType" scoped="" ref="0x2b6c458651a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c45865330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c458654b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c45865640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6c458658c8" loc="52:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b6c458658c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c45865c18"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c45865da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c45864020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c4585b378" loc="44:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c4585b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c4585b6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c4585b850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c4585b9d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c4585bb60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c4585bce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b6c4585a020" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c4585a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c4585a370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c4585a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c4585a680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c4585a808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c4585a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c4585abd8" loc="47:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c4585abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c45859020"/>
        <function-ref name="source" scoped="" ref="0x2b6c458591a8"/>
        <function-ref name="address" scoped="" ref="0x2b6c45859330"/>
        <function-ref name="destination" scoped="" ref="0x2b6c458594b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c45859640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c458597c8"/>
        <function-ref name="type" scoped="" ref="0x2b6c45859950"/>
        <function-ref name="setType" scoped="" ref="0x2b6c45859ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c45859c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c45859de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c45858020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c450d74f8" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c450d74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c450d7848"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c450d79d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c450d7b58"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c450d7ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c450d7e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6c451236f8" loc="48:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c451236f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c45123a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45123bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45123d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c45122020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c451221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c45124920" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c45124920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c45124c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45124e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45123020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c451231a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c45123330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6c45121a10" loc="50:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c45121a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c45121d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c45120020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c451201a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45120330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c451204b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b6c45120780" loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b6c45120780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c45120ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c45120c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b6c4511f020" loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b6c4511f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c4511f370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c4511f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c451223f0" loc="49:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c451223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c45122740"/>
        <function-ref name="source" scoped="" ref="0x2b6c451228c8"/>
        <function-ref name="address" scoped="" ref="0x2b6c45122a50"/>
        <function-ref name="destination" scoped="" ref="0x2b6c45122bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c45122d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c45121020"/>
        <function-ref name="type" scoped="" ref="0x2b6c451211a8"/>
        <function-ref name="setType" scoped="" ref="0x2b6c45121330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c451214b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c45121640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c451217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c45104408" loc="46:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c45104408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c45104758"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c451048e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c45104a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c45104bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c45104d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c45109e38" loc="45:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c45109e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c451041c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c4514f020" loc="47:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c4514f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c4514f370"/>
        <function-ref name="source" scoped="" ref="0x2b6c4514f4f8"/>
        <function-ref name="address" scoped="" ref="0x2b6c4514f680"/>
        <function-ref name="destination" scoped="" ref="0x2b6c4514f808"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c4514f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c4514fb18"/>
        <function-ref name="type" scoped="" ref="0x2b6c4514fca0"/>
        <function-ref name="setType" scoped="" ref="0x2b6c4514fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c4514e020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c4514e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c4514e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b6c4514d770" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c4514d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b6c4514dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b6c45149560" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b6c45149560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b6c451498b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x2b6c45143e08" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x2b6c45143e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451411a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45141330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45141640"/>
        <function-ref name="get" scoped="" ref="0x2b6c451417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45141950"/>
        <function-ref name="set" scoped="" ref="0x2b6c45141ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45141c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c45149cd8" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c45149cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c45143088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c45145688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c45144470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c45144020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c45143928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c451434d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45145ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c451468b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c45144a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c45146d58"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45145238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c45147518" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c45147518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c4412c608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c4412c960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c45138768"/>
        <function-ref name="fired" scoped="" ref="0x2b6c4513ae18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c45139b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c45139728"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c45136088"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c45138bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c451392d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c4513a088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c45138198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c4513a528"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4513a9c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6c441a3be0" loc="60:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b6c441c7600" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6c441c9cd8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b6c441c7060" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c441c7370" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c441d0a68" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c441d04a0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c441d07b0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c441d2c58" loc="123:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c441c58c8" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c441c5658" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c441d1cf8" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c441d1750" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6c441d1a78" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b6c441ade40" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c441adbd0" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b6c441ab290" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c441ab020" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c441ad258" loc="104:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c441ac680" loc="130:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c441a9d10" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c441a9d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c441de760" loc="136:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c441d4110" loc="83:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6c441e0d40" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c441e07a8" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c441e0ac0" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6c441e0070" loc="98:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6c441dc6b0" loc="151:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6c441dee80" loc="144:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c441d4888" loc="92:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6c441d6820" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c441d65b0" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6c441dfd28" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c441df790" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c441dfaa8" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6c441d5290" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c441d5020" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c441d5a38" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b6c441ea5a0" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c441ea5a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b6c441eadd8" loc="55:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6c441f5a98" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c441ea5a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b6c441f5518" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b6c441f5818" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c441ea5a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b6c441cc920" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
              <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c441cc020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b6c441cc348" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c441cc658" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6c441f9070" loc="61:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6c441f97a8" loc="67:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6c441f8020" loc="72:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6c441f8e70" loc="83:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6c441f6480" loc="100:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c441f6c18" loc="117:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6c441f8738" loc="77:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44204768" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c442044f8" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6c441fb900" loc="56:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6c441f7608" loc="89:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6c441f7d20" loc="94:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x2b6c441efd58" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x2b6c441efae8" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c44242870" loc="62:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b6c44248810" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b6c442485a0" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b6c4424b020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b6c4424ba18" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c4424b7a8" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b6c4424a4d0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c4424a260" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b6c4424ad18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6c442576d0" loc="44:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6c44257d98" loc="45:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6c44259920" loc="42:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6c44256b58" loc="47:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44257020" loc="43:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6c44256480" loc="46:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c4425cbf0" loc="40:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6c44259290" loc="41:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b6c442afa78" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b6c442af290" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b6c442ae290" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c442a5aa0" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b6c442b1108" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6c442b3e68" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c442b3710" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6c442b3170" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c442b3490" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x2b6c442b1880" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x2b6c442d1328" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x2b6c442e11d8" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b6c442d0a68" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b6c442d4b78" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c442d4908" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b6c442d0290" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b6c442e18b8" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x2b6c442d1ae0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b6c442df020" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b6c442df9c0" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c442df750" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c440a8970" loc="57:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6c440aa878" loc="72:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6c440aa0d8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6c440b6608" loc="67:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6c440b6df8" loc="75:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6c44170450" loc="76:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6c4418bd28" loc="62:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6c4410c940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6c441896d8" loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6c4449c020" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444a0c60" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b6c4449b020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c4449cd58" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c44497150" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c44499b20" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c44499e30" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c44499290" loc="106:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b6c4449a3e0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c4449be00" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c4449a160" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c444baae0" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c444baae0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c444bad10" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c444bad10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b6c444af9d8" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c444bad10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444af768" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b6c444c8ab8" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444c8848" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b6c444b1870" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444b1600" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c444c6d10" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c444bad10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444c6750" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b6c444c6a90" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c444bad10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b6c444d5728" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444d5140" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b6c444d54a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b6c444d47e8" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444d4578" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b6c444bd978" loc="57:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b6c444bd020" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b6c444c0d60" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b6c444b70a8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c44496dd8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b6c444b5290" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444b5020" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b6c444b4338" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444b40c8" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b6c444a3680" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444a3410" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b6c444ac418" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444ac1a8" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b6c4449f988" loc="68:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b6c444ad418" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444ad1a8" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b6c444a8bc0" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444a8608" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6c444a8940" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b6c444ab760" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444ab1a8" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6c444ab4e0" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b6c444a6290" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444a6020" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b6c444a45a0" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444a4020" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b6c444a4320" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c441b6628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b6c444a7020" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444a9d60" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b6c444bba50" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c444bb4a0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b6c444bb7d0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b6c444b9818" loc="195:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b6c444efc40" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444ef9d0" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b6c444dad10" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444daaa0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c444ecac0" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444ec850" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c444eeb70" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444ee900" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b6c444e2370" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444e2100" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6c444fc928" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444fc398" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c444fc6a8" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c444f7c68" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444f76a0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c444f79b0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c444f9e30" loc="112:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c444faba0" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444fa930" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c444f9020" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c444f89e0" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6c444f8d08" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x2b6c4453a918" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x2b6c4453a178" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x2b6c44536108" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b6c44537e38" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x2b6c44537108" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b6c4453ce48" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44590020" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44590020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c44590250" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44590250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b6c44590ce8" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44590250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c44590a78" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44590250"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b6c44591d40" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c44591d40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b6c4458c5f8" loc="58:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6c4458b348" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c44591d40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b6c4458cd40" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b6c4458b0c8" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c44591d40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b6c44597ac0" loc="52:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b6c44597328" loc="46:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2b6c4457c580" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x2b6c4457cca8" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x2b6c44588db8" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c44588b48" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x2b6c44587578" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x2b6c44587308" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x2b6c44583650" loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x2b6c445828c8" loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x2b6c445850a8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x2b6c44587e08" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x2b6c44580290" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x2b6c44580020" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b6c44578bf0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x2b6c44580a68" loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x2b6c44584e40" loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b6c44584020" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x2b6c4457f258" loc="147:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b6c44584730" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b6c44585930" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x2b6c445820a8" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x2b6c44583de0" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6c44577700" loc="95:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44576020" loc="105:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x2b6c44575c58" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c445759e8" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2b6c44571cc8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x2b6c4456e650" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b6c4456d6f0" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x2b6c445715b0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x2b6c44570d68" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x2b6c44570af8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x2b6c445733a0" loc="32:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x2b6c44572da8" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x2b6c44572b38" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c445723e0" loc="44:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b6c445703e0" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x2b6c44573c10" loc="39:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c441ca020"/>
              <typename><typedef-ref name="message_t" ref="0x2b6c441c9570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x2b6c4456d020" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44625ab0" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44625ab0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c44622378" loc="61:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c43742608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b6c44728870" loc="120:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b6c44729960" loc="97:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b6c44729070" loc="88:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b6c44728110" loc="102:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b6c44727290" loc="128:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b6c447b0020" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b6c447b26f8" loc="59:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b6c447e8768" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b6c447c3a60" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b6c447c3db8" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b6c447e8178" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b6c447e84c8" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b6c447e53f0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c447e7368" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b6c447e7688" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b6c447e79c0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b6c447e7d70" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b6c447e5140" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b6c447c6020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b6c447c8250" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b6c447c85a8" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b6c447c8910" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b6c447c8c60" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c447c5898" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b6c447c5020" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c447c6a28" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b6c447c6d48" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b6c447fa0d8" loc="114:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b6c447dc1d8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c44129020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b6c441294d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b6c447f7338" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b6c447f70c8" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b6c447fa918" loc="122:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b6c447d9d18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b6c447dcbb0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c44129020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b6c441294d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b6c447dc940" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c44129020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b6c441294d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b6c447d8b88" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b6c447f9870" loc="133:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c447f7ad0" loc="150:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b6c447d8448" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b6c447d6a48" loc="99:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b6c447d6328" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b6c447fb1d8" loc="106:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b6c447f90d8" loc="127:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b6c447dadd0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c4412fa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b6c4412d178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b6c447dab60" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c4412fa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b6c4412d178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b6c447fb990" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b6c447da3e0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6c4412fa10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b6c4412d178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b6c447d95b8" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b6c447f6640" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c447f63d0" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6c447df020" loc="95:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c447df7f8" loc="105:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b6c4484cc98" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b6c448715c0" loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b6c4486ea78" loc="56:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b6c4486da70" loc="73:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b6c4486e258" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b6c4486d2a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b6c4486c360" loc="81:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b6c44869020" loc="90:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b6c44869810" loc="98:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b6c44887020" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c44866218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6c44861c60" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c44866218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b6c448620d8" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b6c44862b58" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c44866218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6c448628e8" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c44866218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b6c44861428" loc="70:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c44866218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b6c448f0c20" loc="62:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b6c44959020" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c44959020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b6c44959ac8" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c44959020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b6c44959858" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c44959020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c449a03f8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c449a03f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c449a0628" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449a0628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c4499e020" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449a0628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c4499d070" loc="76:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c4499e838" loc="71:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c4499d760" loc="82:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44981c10" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44981c10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c44981e40" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c4497a7a0" loc="109:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c4497c8c8" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6c4497bdc0" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c4497b820" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6c4497bb40" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c4497b070" loc="88:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6c44979020" loc="116:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c4497e930" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c4497e6c0" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44981e40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c4497c178" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b6c449a6a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44139a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44139e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6c449a1e18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44146100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44146508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6c449a3c70" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4413e980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c4413ed88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6c449a1678" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4413e980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c4413ed88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6c449a1408" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4413e980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c4413ed88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6c449ce828" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44146100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44146508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c449ce5b8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44146100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44146508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6c449a34c8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44139a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44139e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c449a3258" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44139a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44139e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b6c449c0998" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b6c449bf1d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b6c449c0290" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b6c449bf988" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b6c449c20d8" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44140118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44140520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b6c449c2a88" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44140118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44140520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c449c2818" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44140118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44140520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6c449cc020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449cc020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b6c449c8738" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c449cb9d0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c449cc8d8" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449cc020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c449c9110" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c449c7020" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c449cb290" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449cc020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c449cb020" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c449cc020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c449c9808" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c449c8020" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6c449b0418" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c449b0418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b6c449ab900" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6c449ada40" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c449b0cb8" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c449b0418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b6c449aa290" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b6c449aa020" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b6c449aaa10" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c449ae4c0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c449afd50" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c449ab1d8" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c449af630" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c449b0418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c449af3c0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c449b0418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c449aebb8" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c449ad328" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b6c44b0c648" loc="50:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b6c44b0b4d0" loc="60:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b6c44b0cda8" loc="55:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b6c44b10e38" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b6c44b10880" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c441b69d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c44b10bb8" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c441b6d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6c44b723e0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44165928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c44165d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b6c44b400a8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44150478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c44150880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c44b41dc8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44150478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c44150880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6c44b3f258" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4415b578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c4415b980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b6c44b46c18" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414cda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c4414b228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6c44b3fc18" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4415b578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c4415b980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6c44b3f9a8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4415b578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c4415b980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6c44b72da0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44165928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c44165d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c44b72b30" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44165928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c44165d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b6c44b43c20" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414e890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c4414ec98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b6c44b43470" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44150478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c44150880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b6c44b41640" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414cda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c4414b228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c44b413d0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414cda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c4414b228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b6c44b40a78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414e890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c4414ec98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c44b40808" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c4414e890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c4414ec98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6c44b44b68" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b6c44b69648" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b6c44b693d8" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6c44b6a568" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44b6e498" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6c44b6d7c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c44b6d558" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c44b6c020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c44b6acb8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44b6edd0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c44b6eb60" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44b44b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c44b6c718" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44b6ce00" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2b6c44cea178" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6c44d01e70" loc="68:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c44d01720" loc="61:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b6c44d01020" loc="54:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b6c44d02648" loc="53:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6c44d1d020" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c44d1ba48" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c44d1e8d0" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b6c44d1b290" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b6c44d1b020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b6c44d1e1d8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b6c44d1d760" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6c44d4a4e0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x2b6c44ec1a98" loc="110:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c44ec2c40" loc="97:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x2b6c44ec4dc0" loc="87:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x2b6c44ec4020" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c44ec5d50" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x2b6c44ec2540" loc="92:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b6c44ec1360" loc="102:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x2b6c44ec5698" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x2b6c44ec5428" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x2b6c44ec46f8" loc="82:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x2b6c44ee5528" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2b6c44ee5528"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b6c44ee1a30" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b6c44eb5020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c44ee5da8" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b6c44eb5020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c44ee1108" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b6c44ee1438" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c44ee1790" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b6c44eda020" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c44edb290" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c44edb5c0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b6c44edb8f0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c44edbc48" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c44ee0778" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b6c44eb5020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c44edfaf8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b6c44eb5020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c44edfe28" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b6c44ee0180" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c44ee04d8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6c44ede3e0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c44edd760" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c440af1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c44edda90" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c43741b98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b6c44edddc0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c44ede140" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b6c44f61918" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2b6c44fabdb8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2b6c44faa4c0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2b6c44fa84c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c44fa8258" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2b6c44fab6f8" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2b6c44fa6b68" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b6c44fa0700" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b6c44fa44d8" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b6c44fa4268" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b6c44f9fe18" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b6c44fac8f0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2b6c44fac680" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2b6c44fa64a0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b6c44fa6230" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b6c44fa4d10" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2b6c44fa8ba0" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b6c44fa3c50" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2b6c44faaba8" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b6c44fa0020" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c44fa2d00" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c44f9f750" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c44f9f4e0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c43741160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2b6c44fa34f8" loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b6c44fab020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2b6c44fa74b0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c44fa7240" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2b6c44fa26c0" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c44fa2450" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b6c44fa0e28" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2b6c44fa7b78" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c440a69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
