<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2509fcabc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2509d61d68"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2509d61d68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2509f9d640"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b2509fc8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a090e28"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b250a090e28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a0b8020"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b2509fc3488"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a870758"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b250a870758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a8f4728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2b2509fdc820"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b250a86d798"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b250a86d798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b250a864460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x2b2509fdd3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a86c928"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b250a86c928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a8c1180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2b2509fe7840"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a86a020"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b250a86a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a8c0d20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2b2509fef1d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b250a86ac30"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b250a86ac30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b250a8c1738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b2509fd9cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b250a08ddb8"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b250a08ddb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b250a0b7020"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b250a005020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a08a020"/></to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b250a08a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a0b61c8"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x2b250a005b98"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b250a08ab68"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b250a08ab68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b250a0b6d10"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b250a004358"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a0892a8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b250a0892a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a0b38c8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x2b250a003060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b250a088020"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b250a088020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b250a0b4340"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250a00ec38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a055440"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250a055440"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a069c38"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b250aad1e40"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b250aaccca8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250aa30120"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a8f4110"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a54ddd8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a53c6a0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250af4b8e8"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a151708"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a308c10"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b2509f9dc78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2509c65be8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b2509c65be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2509d24448"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2509fb26a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2509d69208"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2509d69208"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2509d6e298"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509fb2d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2509d68020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250abda940"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2509d68020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a7fd020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2509d68020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a3bed48"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509d711c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509f90d18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b2509d6d060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2509f906e8"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b2509d6e938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a07a020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b2509d6e938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d70720"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d70720"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d74140"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d70720"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d766b0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2509d70db0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b2509d68020"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d766b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2509dcf060"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d766b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2509df6180"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b2509d79388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b2509e28af0"/></to>
    </wire>
    <wire loc="141:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b2509e28af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509e9e740"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2509d724f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b2509d70db0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x2b2509dcd700"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b2509e26e00"/></to>
    </wire>
    <wire loc="143:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b2509e26e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509eaea50"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x2b2509dc9958"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b2509e3f7e0"/></to>
    </wire>
    <wire loc="168:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b2509e3f7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509ed0430"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x2b2509dd6ae0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b2509e3daf0"/></to>
    </wire>
    <wire loc="170:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b2509e3daf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509ece740"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x2b2509dd5c70"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b2509e3cc78"/></to>
    </wire>
    <wire loc="171:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b2509e3cc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509ecd8c8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x2b2509df59e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b2509e22348"/></to>
    </wire>
    <wire loc="147:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b2509e22348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509eb7d60"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x2b2509df4c80"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b2509e30658"/></to>
    </wire>
    <wire loc="149:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b2509e30658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509eb4020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x2b2509dfce08"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b2509e214d0"/></to>
    </wire>
    <wire loc="148:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b2509e214d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509eb6e18"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x2b2509dfa020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b2509e2ce00"/></to>
    </wire>
    <wire loc="153:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b2509e2ce00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509eaf5b8"/></to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b2509e4c7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2509f35970"/></to>
    </wire>
    <wire loc="165:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b2509e42348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509ed3020"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509ed3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad7a480"/></to>
    </wire>
    <wire loc="176:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b2509e49348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509ed7d60"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509ed7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adfc480"/></to>
    </wire>
    <wire loc="185:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b2509e51020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509ef05b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509ef05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae36480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509eaea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac43480"/></to>
    </wire>
    <wire loc="183:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b2509e43c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509ef22a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509ef22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae3c480"/></to>
    </wire>
    <wire loc="146:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b2509e231a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509ea6bd0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509ea6bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250accd3e0"/></to>
    </wire>
    <wire loc="157:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b2509e39348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509eba740"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509eba740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acf7480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509ed0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad70480"/></to>
    </wire>
    <wire loc="179:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b2509e467e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509ee7120"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509ee7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adf2480"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b2509e1b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509ea12a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509ea12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac53480"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509eb4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acc3480"/></to>
    </wire>
    <wire loc="160:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b2509e357e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509ecabd8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509ecabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad39480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509ecd8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adb5480"/></to>
    </wire>
    <wire loc="188:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b2509e4e4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509eeca50"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509eeca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae7e480"/></to>
    </wire>
    <wire loc="194:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b2509e5a1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2509f3c020"/></to>
    </wire>
    <wire loc="174:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b2509e4b020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509ed9a50"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509ed9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae02480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509e9e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac49480"/></to>
    </wire>
    <wire loc="152:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b2509e2dc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509eb0430"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509eb0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acba480"/></to>
    </wire>
    <wire loc="192:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b2509e5de00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2509f30ab0"/></to>
    </wire>
    <wire loc="155:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b2509e2a020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509ebc500"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509ebc500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acfd3e0"/></to>
    </wire>
    <wire loc="166:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b2509e414d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509ed2120"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509ed2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad77480"/></to>
    </wire>
    <wire loc="177:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b2509e484d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509ed6e18"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509ed6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adf8480"/></to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b2509e501a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509eef740"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509eef740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae33480"/></to>
    </wire>
    <wire loc="144:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b2509e24020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509eadbd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509eadbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac40480"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509eb7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acca480"/></to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b2509e374d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509eb88c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509eb88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad3f480"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b2509e3e968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509ecf5b8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509ecf5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad6d480"/></to>
    </wire>
    <wire loc="180:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b2509e45968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509ee62a8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509ee62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adef480"/></to>
    </wire>
    <wire loc="139:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b2509e1a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509ea0430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509ea0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac4f480"/></to>
    </wire>
    <wire loc="150:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b2509e2f7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509eb3120"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509eb3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acc0480"/></to>
    </wire>
    <wire loc="161:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b2509e34968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2509ec9d60"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509ec9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad36480"/></to>
    </wire>
    <wire loc="189:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b2509e4d658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509eebbd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509eebbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae7b480"/></to>
    </wire>
    <wire loc="164:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b2509e32c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509ed5e40"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509ed5e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad7d3e0"/></to>
    </wire>
    <wire loc="175:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b2509e4a1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509ed8bd8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509ed8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adff480"/></to>
    </wire>
    <wire loc="184:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b2509e53e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2509ef1430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509ef1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae39480"/></to>
    </wire>
    <wire loc="195:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b2509e59348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2509f4d180"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b2509e27c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509e9d8c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509e9d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac46480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509eaf5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acb7480"/></to>
    </wire>
    <wire loc="182:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b2509e44af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509ef31e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509ef31e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae3f3e0"/></to>
    </wire>
    <wire loc="156:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b2509e291a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2509ebb5b8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2509ebb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acfa480"/></to>
    </wire>
    <wire loc="167:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b2509e40658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509ed12a8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509ed12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad74480"/></to>
    </wire>
    <wire loc="178:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b2509e47658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509ee8020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509ee8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250adf5480"/></to>
    </wire>
    <wire loc="187:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b2509e4f348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509eee8c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509eee8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae81480"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b2509e1c410"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509ea21e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509ea21e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac563e0"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2509eb6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acc7480"/></to>
    </wire>
    <wire loc="159:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b2509e36658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2509ecba50"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2509ecba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad3c480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2509ece740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad6a480"/></to>
    </wire>
    <wire loc="193:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b2509e5b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2509f42c38"/></to>
    </wire>
    <wire loc="173:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b2509e3be00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2509eda930"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2509eda930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ae053e0"/></to>
    </wire>
    <wire loc="162:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b2509e33af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2509ec8e18"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2509ec8e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ad33480"/></to>
    </wire>
    <wire loc="140:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b2509e19968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2509e9f5b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2509e9f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250ac4c480"/></to>
    </wire>
    <wire loc="151:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b2509e2eaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2509eb22a8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2509eb22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b250acbd480"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509d222b0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b2509d2b758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b2509d47660"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2509d422b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b250a60f268"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x2b250a009d28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x2b250a008b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a07a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a069670"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b250a0673b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b250a06aaf8"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b250a06aaf8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b2509e1a7e0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b250a066648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b250a07dca8"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b250a07dca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b2509e1b658"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b250a0657d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b250a07ce30"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b250a07ce30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b2509e1c410"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b250a0b8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a0d4ce8"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b250a0b7020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b250a0d3718"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b250a0b6d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b250a0d1498"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b250a0b38c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a10ea10"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a0abe48"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a0b0218"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a0b0218"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a121060"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a0a1848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a0c2830"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a0c2830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a1251a0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b250a0b61c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a0d2928"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a086020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a0b2658"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a0b2658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a1271d0"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b250a0b4340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b250a0d1a88"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a085020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a0c6130"/></to>
    </wire>
    <wire loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a0c6130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a11d020"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b250a0d4ce8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a151d20"/></to>
    </wire>
    <wire loc="133:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a11d020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a1fe130"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b250a10ea10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a206888"/></to>
    </wire>
    <wire loc="132:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a121060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a202218"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a0bbd18"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a136ac8"/></to>
    </wire>
    <wire loc="134:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a136ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a21bbd0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a1251a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a14f7f0"/></to>
    </wire>
    <wire loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a1271d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a204e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a0ae7b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a127b30"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a127b30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a2037b8"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b250a0e06e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b250a10f7b0"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b250a10f7b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b250a2075a8"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b250a0cd4e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a10e438"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b250a10e438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a2062b0"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b250a0cccd8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b250a7096f0"/></to>
    </wire>
    <wire loc="88:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b250a0cdb38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b250a10ea10"/></to>
    </wire>
    <wire loc="101:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x2b250a126c30"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x2b250a1507f0"/></to>
    </wire>
    <wire loc="102:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x2b250a1229a8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x2b250a14f020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b250a171770"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b250a345620"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b250a16cdf0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b250a53f208"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b250a53f208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b250a53a080"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a170080"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a3322f0"/></to>
    </wire>
    <wire loc="110:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x2b250a180c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a53da60"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a53da60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b250a5523c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x2b250a15e9d8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x2b250a2055d8"/></to>
    </wire>
    <wire loc="112:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x2b250a14e3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a208818"/></to>
    </wire>
    <wire loc="113:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x2b250a149540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b250a208e18"/></to>
    </wire>
    <wire loc="115:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b250a21a828"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b250a345620"/></to>
    </wire>
    <wire loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b250a2183e8"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b250a398908"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b250a398908"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b2509dfe630"/></to>
    </wire>
    <wire loc="117:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b250a215cf0"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b250a7096f0"/></to>
    </wire>
    <wire loc="118:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x2b250a2162a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b250a3066d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a217788"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a3322f0"/></to>
    </wire>
    <wire loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b250a175e80"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b250a3066d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b250a177808"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b250a3066d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b250a190060"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b250a3066d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x2b250a18fa48"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x2b250a3031d8"/></to>
    </wire>
    <wire loc="125:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b250a179748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b250a72b568"/></to>
    </wire>
    <wire loc="127:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x2b250a3024b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x2b250a39a4e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x2b250a39a4e0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b250a51d680"/></to>
    </wire>
    <wire loc="128:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b250a2fd620"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x2b250a399b80"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b250a399b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b250a393980"/></to>
    </wire>
    <wire loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x2b250a343118"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b250a397bf8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x2b250a397bf8"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b2509dca130"/></to>
    </wire>
    <wire loc="130:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b250a343e48"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b250a72b568"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250a856e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250a71c638"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250a71c638"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250a83ec50"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b250a20f660"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b250a71dc38"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b250a212870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b250a572c48"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b250a572c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b250a6ee128"/></to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x2b250a189508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x2b250a1aed78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x2b250a1b8190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x2b250a1b3770"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x2b250a2743f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x2b250a2a8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b250a51d680"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b250a3ab620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b250a393980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b250a3a6af8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a51cc70"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x2b2509dd7c08"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a3a9208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a51cc70"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a3c8890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a51b578"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b250a3aca00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b250a513680"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b250a3ab620"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b250a4e1428"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b250a525720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b250a3a8050"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a4de9a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a3a9208"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b250a526060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b250a4e36a0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a4e0b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a3c4cb8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a3c4cb8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a3ba488"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b250a3bf9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b250a3bade0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b250a3a6af8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b250a4b1840"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b250a4b1840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b250af48060"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a4ae3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a3c8890"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a3d1940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a417020"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a417020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a4111e8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b250a3ded30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509d711c8"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250a4d6060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250a3b8c10"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4d6d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4b0dd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4b0dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250af474c0"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b250a40f640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b2509d44a80"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b250a4b0698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b250af48d58"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250a4af9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250af460e0"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250af46980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a4ae3c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b250af45130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b250af4a020"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b250af422e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250af6a020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250a4d6060"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b250af6a740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b250a4d6780"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250af6acd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4d6d18"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250af69908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250a4ec908"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b250a4fa4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b250a5421a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b250a53b020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a543310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a53c6a0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b250a5523c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b250a549b18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b250a549b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a6ca5e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a54ddd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a56c2c0"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a56c2c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a6781f0"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b250a6f8858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a6afab0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b250a6aac70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b250a564ac8"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b250a564ac8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b250a678998"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250a6e5330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b250a589e40"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b250a589e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250a674a90"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250a674a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250afa3020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a6781f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250afa8600"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b250a678998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b250afa8da8"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250afa0168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a5fade8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a5fade8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a6190f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b250af9b020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a5f2020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a5f2020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a614160"/></to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250af9a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b250a5f1020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250a5f1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b250a613190"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b250af960a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b250a5ed228"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b250a5ed228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b250a60f968"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b250a6a6cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b250a6f3930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b250a85be20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250a74c3a0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250a74c3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250a8215a8"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a80f6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a746098"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a746098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a75a020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a740140"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a755020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b250a765b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b250a754680"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250a7629c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b250a750e60"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250a7629c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b250a7812b8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250a7629c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b250a77d698"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b250a779a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a5f2020"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a7fd740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250a746098"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250a851e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b250a5523c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b250a8f4728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b250a8ebd00"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a868348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a8bf908"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b250a8f4110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b250a8eb6e8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250a8f08f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a868c80"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b250a8be308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b250a8f2208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b250a8bd020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a8f3760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b250a8f0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b250ac002b8"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b250a8f2208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b250a9ef020"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b250a8f3760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b250a9f0868"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b250a9efdb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b250a8f0020"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250a8e1bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a8f08f8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250aa2da50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a8f08f8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b250aa24420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b250a8f08f8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b250a9ee6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b250a8dfb48"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b250aa2d020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b250a8e3898"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b250a8d9b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b250aa28b38"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b250a914398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b250aa278b8"/></to>
    </wire>
    <wire loc="48:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b250aa278b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b250aa3d340"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b250aa18448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b250aa3f0c0"/></to>
    </wire>
    <wire loc="49:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b250aa3f0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b250aa37310"/></to>
    </wire>
    <wire loc="332:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b250a93b830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b250a8f8d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b250a93d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b250a937918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b250aa2a100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b250aa2a8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b250aa38290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b250aa3daf8"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b250aa3daf8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b250aa30e58"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b250aa37310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b250aa725f8"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b250aa3d340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b250aa306f8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250aa36598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250ab33020"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250ab33020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250abc7610"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250aa6fc60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250aa36598"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b250aa715f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b250aa93700"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b250aa93700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b250aace580"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b250aa71d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b250aa92020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b250aa92020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b250aacee18"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b250aa705c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b250aa92860"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b250aa92860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b250aacd6d8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b250aad2020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b250aaca550"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b250aa91e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b250aacb3e0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b250aa906f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b250aacbc78"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b250aac9ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509d711c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b250aac87c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b2509d44a80"/></to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b250ac0c7f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250ab31d38"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b250ab31d38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b250abd2950"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250abd0a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250ab2b9a8"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250ab2b9a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250ab19ca8"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b250ab24aa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b250ab57c90"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b250ab22190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b250ab54350"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250ab1d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b250ab51c48"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250ab1d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b250ab4b020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b250ab1d020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b250ab48360"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b250abd9098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b250ab2b9a8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rahul/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rahul/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b250a588c50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b2509d1d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b2509d1d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b2509d1c020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TThree" ref="0x2b2509d1daa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TThree" ref="0x2b2509d1daa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b2509d1c470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2509e55568" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2509e558b0" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2509e55bf8" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2509e6de08" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2509e6a198" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2509e6a500" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b2509e6a830" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2509ef7020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2509ef7388" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2509ef76f0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b2509ef7a20" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b250a458b08" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b250a445748" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b250a47b5c0" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b250a5121d0" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b250a5121d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b250a588c50" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b250a588c50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b250a584020" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b250a57a410" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b250a57a410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b250a57a700" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a56dc60" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a56dc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a6a4cd0" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a6a4cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b250a6a0020" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a6f09f8" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a6f09f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b250a7ffe50" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a7ffe50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b250a7fc1e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b250a800740" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b250a800740"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b250a820020" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a820020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b250a83d550" loc="55:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b250a83d550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b250a83dcb8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b250a83dcb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b250a83c0a8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b250a83c0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b250a83c820" loc="58:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b250a83c820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b250a83cbc8" loc="59:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b250a83a380" loc="60:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b250a83a380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b2509d6a1b0" loc="58:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509d6a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d6a500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2509d61d68" loc="57:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2509d61d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2509d600f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2509d68020" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2509d68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d68370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2509d69208" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2509d69208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d69558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b2509d711c8" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509d711c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2509d71518"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2509d716a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2509d71828"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2509d719b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2509d71b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b2509d6e938" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b2509d6e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d6ec88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2509d6e298" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2509d6e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d6e5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b2509d6d060" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b2509d6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d6d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2509d70db0" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2509d70db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d77170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2509d70720" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d70720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d70a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2509d724f8" loc="19:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2509d724f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d72848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b2509d79388" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b2509d79388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509d796d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509d79860"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509d799e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509d79b70"/>
        <function-ref name="get" scoped="" ref="0x2b2509d79cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509d79e80"/>
        <function-ref name="set" scoped="" ref="0x2b2509d72030"/>
        <function-ref name="clr" scoped="" ref="0x2b2509d721b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2509d74140" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d74140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d74490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2509d766b0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509d766b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d76a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x2b2509dd6ae0" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x2b2509dd6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dd6e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dd5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dd51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dd5330"/>
        <function-ref name="get" scoped="" ref="0x2b2509dd54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dd5640"/>
        <function-ref name="set" scoped="" ref="0x2b2509dd57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dd5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x2b2509dcd700" loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x2b2509dcd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dcda50"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dcdbd8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dcdd60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dc9020"/>
        <function-ref name="get" scoped="" ref="0x2b2509dc91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dc9330"/>
        <function-ref name="set" scoped="" ref="0x2b2509dc94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dc9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x2b2509dd7c08" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x2b2509dd7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b2509dcd020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2509dcd1a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b2509dcd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x2b2509dc9958" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x2b2509dc9958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dc9ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dc9e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dd6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dd61a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509dd6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dd64b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509dd6640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dd67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2509dcf060" loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509dcf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509dcf3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x2b2509dd5c70" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x2b2509dd5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dd4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dd41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dd4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dd44b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509dd4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dd47c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509dd4950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dd4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b2509dca130" loc="55:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b2509dca130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509dca480"/>
        <function-ref name="read" scoped="" ref="0x2b2509dca608"/>
        <function-ref name="write" scoped="" ref="0x2b2509dca790"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b2509dca918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b2509dfe630" loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b2509dfe630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b2509dfe980"/>
        <function-ref name="initSlave" scoped="" ref="0x2b2509dfeb08"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b2509dfec90"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2509dfee18"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b2509df5020"/>
        <function-ref name="txMode" scoped="" ref="0x2b2509df51a8"/>
        <function-ref name="readByte" scoped="" ref="0x2b2509df5330"/>
        <function-ref name="rxMode" scoped="" ref="0x2b2509df54b8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2509df5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x2b2509df59e8" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x2b2509df59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509df5d38"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509df4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509df41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509df4330"/>
        <function-ref name="get" scoped="" ref="0x2b2509df44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509df4640"/>
        <function-ref name="set" scoped="" ref="0x2b2509df47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509df4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2509df6180" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509df6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509df64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x2b2509df4c80" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x2b2509df4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dfc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dfc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dfc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dfc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509dfc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dfc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509dfc950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dfcad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x2b2509dfce08" loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x2b2509dfce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dfb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dfb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dfb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dfb640"/>
        <function-ref name="get" scoped="" ref="0x2b2509dfb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dfb950"/>
        <function-ref name="set" scoped="" ref="0x2b2509dfbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dfbc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x2b2509dfa020" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x2b2509dfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509dfa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509dfa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509dfa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509dfa808"/>
        <function-ref name="get" scoped="" ref="0x2b2509dfa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509dfab18"/>
        <function-ref name="set" scoped="" ref="0x2b2509dfaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509dfae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b2509e4c7e0" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b2509e4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e5d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e5d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e5d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e5d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e5d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e5d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e5d950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e5dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b2509e42348" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b2509e42348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e42698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e42820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e429a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e42b30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e42cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e42e40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e41020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b2509e49348" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b2509e49348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e49698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e49820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e499a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e49b30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e49cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e49e40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e48020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b2509e51020" loc="94:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b2509e51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e51370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e514f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e51680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e51808"/>
        <function-ref name="get" scoped="" ref="0x2b2509e51990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e51b18"/>
        <function-ref name="set" scoped="" ref="0x2b2509e51ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e51e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b2509e26e00" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b2509e26e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e251a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e25330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e254b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e25640"/>
        <function-ref name="get" scoped="" ref="0x2b2509e257c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e25950"/>
        <function-ref name="set" scoped="" ref="0x2b2509e25ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e25c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b2509e43c78" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b2509e43c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e53020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e531a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e53330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e534b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e53640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e537c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e53950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e53ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b2509e231a0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b2509e231a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e234f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e23678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e23800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e23988"/>
        <function-ref name="get" scoped="" ref="0x2b2509e23b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e23c98"/>
        <function-ref name="set" scoped="" ref="0x2b2509e23e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b2509e39348" loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b2509e39348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e39698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e39820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e399a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e39b30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e39cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e39e40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e37020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b2509e3f7e0" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b2509e3f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e3fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e3fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e3fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e3e020"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3e330"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b2509e467e0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b2509e467e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e46b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e46cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e46e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e45020"/>
        <function-ref name="get" scoped="" ref="0x2b2509e451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e45330"/>
        <function-ref name="set" scoped="" ref="0x2b2509e454b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e45640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b2509e1b658" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b2509e1b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e1b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e1bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e1bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e1be40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e1a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e1a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e1a330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b2509e30658" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b2509e30658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e309a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e30b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e30cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e30e40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2f330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b2509e357e0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b2509e357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e35b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e35cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e35e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e34020"/>
        <function-ref name="get" scoped="" ref="0x2b2509e341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e34330"/>
        <function-ref name="set" scoped="" ref="0x2b2509e344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b2509e3cc78" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b2509e3cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e3b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e3b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e3b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e3b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3b950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b2509e4e4d0" loc="97:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b2509e4e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e4e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e4e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e4eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e4ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e4ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e4d020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b2509e5a1a0" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b2509e5a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e5a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e5a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e5a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e5a988"/>
        <function-ref name="get" scoped="" ref="0x2b2509e5ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e5ac98"/>
        <function-ref name="set" scoped="" ref="0x2b2509e5ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b2509e4b020" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b2509e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e4b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e4b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e4b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e4b808"/>
        <function-ref name="get" scoped="" ref="0x2b2509e4b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e4bb18"/>
        <function-ref name="set" scoped="" ref="0x2b2509e4bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e4be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b2509e28af0" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b2509e28af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e28e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e27020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e27330"/>
        <function-ref name="get" scoped="" ref="0x2b2509e274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e27640"/>
        <function-ref name="set" scoped="" ref="0x2b2509e277c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e27950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b2509e2dc78" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b2509e2dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e2c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e2c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e2c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e2c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2c950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b2509e5de00" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b2509e5de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e5c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e5c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e5c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e5c640"/>
        <function-ref name="get" scoped="" ref="0x2b2509e5c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e5c950"/>
        <function-ref name="set" scoped="" ref="0x2b2509e5cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e5cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b2509e2a020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b2509e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e2a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e2a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e2a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e2a808"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2ab18"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b2509e414d0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b2509e414d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e41820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e419a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e41b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e41cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e41e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e40020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e40330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b2509e484d0" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b2509e484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e48820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e489a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e48b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e48cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e48e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e47020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e471a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e47330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b2509e501a0" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b2509e501a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e504f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e50678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e50800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e50988"/>
        <function-ref name="get" scoped="" ref="0x2b2509e50b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e50c98"/>
        <function-ref name="set" scoped="" ref="0x2b2509e50e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b2509e24020" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b2509e24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e24370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e244f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e24680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e24808"/>
        <function-ref name="get" scoped="" ref="0x2b2509e24990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e24b18"/>
        <function-ref name="set" scoped="" ref="0x2b2509e24ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e24e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b2509e22348" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b2509e22348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e22698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e22820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e229a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e22b30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e22cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e22e40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e21020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b2509e374d0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b2509e374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e37820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e379a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e37b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e37cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e37e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e36020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b2509e3e968" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b2509e3e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e3ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e3ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e3d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3d640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b2509e45968" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b2509e45968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e45cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e45e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e44020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e441a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e44330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e444b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e44640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b2509e1a7e0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b2509e1a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e1ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e1acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e1ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e19020"/>
        <function-ref name="get" scoped="" ref="0x2b2509e191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e19330"/>
        <function-ref name="set" scoped="" ref="0x2b2509e194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e19640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b2509e2f7e0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b2509e2f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e2fc30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e2fdb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e2e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2e640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b2509e34968" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b2509e34968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e34cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e34e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e33020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e331a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e33330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e334b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e33640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e337c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b2509e4d658" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b2509e4d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e4d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e4db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e4dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e4de40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e4c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e4c330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b2509e32c78" loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b2509e32c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e313e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e31570"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e316f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e31880"/>
        <function-ref name="get" scoped="" ref="0x2b2509e31a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e31b90"/>
        <function-ref name="set" scoped="" ref="0x2b2509e31d18"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b2509e4a1a0" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b2509e4a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e4a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e4a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e4a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e4a988"/>
        <function-ref name="get" scoped="" ref="0x2b2509e4ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e4ac98"/>
        <function-ref name="set" scoped="" ref="0x2b2509e4ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b2509e53e00" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b2509e53e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e521a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e52330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e52640"/>
        <function-ref name="get" scoped="" ref="0x2b2509e527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e52950"/>
        <function-ref name="set" scoped="" ref="0x2b2509e52ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e52c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b2509e59348" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b2509e59348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e59698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e59820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e599a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e59b30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e59cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e59e40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e58020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b2509e27c78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b2509e27c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e26020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e261a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e26330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e264b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e26640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e267c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e26950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e26ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b2509e2ce00" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b2509e2ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e2b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e2b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e2b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e2b640"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2b950"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b2509e44af0" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b2509e44af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e44e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e43020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e43330"/>
        <function-ref name="get" scoped="" ref="0x2b2509e434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e43640"/>
        <function-ref name="set" scoped="" ref="0x2b2509e437c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e43950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b2509e291a0" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b2509e291a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e294f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e29678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e29800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e29988"/>
        <function-ref name="get" scoped="" ref="0x2b2509e29b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e29c98"/>
        <function-ref name="set" scoped="" ref="0x2b2509e29e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b2509e40658" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b2509e40658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e409a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e40b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e40cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e40e40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3f330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b2509e47658" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b2509e47658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e479a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e47b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e47cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e47e40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e46020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e461a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e46330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b2509e4f348" loc="96:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b2509e4f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e4f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e4f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e4f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e4fb30"/>
        <function-ref name="get" scoped="" ref="0x2b2509e4fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e4fe40"/>
        <function-ref name="set" scoped="" ref="0x2b2509e4e020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b2509e1c410" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b2509e1c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e1c760"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e1c8e8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e1ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e1cbf8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e1cd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e1b020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e1b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e1b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b2509e214d0" loc="57:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b2509e214d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e21820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e219a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e21b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e21cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e21e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e30020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e30330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b2509e36658" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b2509e36658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e369a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e36b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e36cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e36e40"/>
        <function-ref name="get" scoped="" ref="0x2b2509e35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e351a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e35330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b2509e3daf0" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b2509e3daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e3de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e3c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e3c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e3c330"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3c640"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b2509e5b020" loc="102:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b2509e5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e5b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e5b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e5b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e5b808"/>
        <function-ref name="get" scoped="" ref="0x2b2509e5b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e5bb18"/>
        <function-ref name="set" scoped="" ref="0x2b2509e5bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e5be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b2509e3be00" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b2509e3be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e3a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e3a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e3a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e3a640"/>
        <function-ref name="get" scoped="" ref="0x2b2509e3a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e3a950"/>
        <function-ref name="set" scoped="" ref="0x2b2509e3aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e3ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b2509e33af0" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b2509e33af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e33e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e32020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e321a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e32330"/>
        <function-ref name="get" scoped="" ref="0x2b2509e324b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e32640"/>
        <function-ref name="set" scoped="" ref="0x2b2509e327c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e32950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b2509e19968" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b2509e19968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e19cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e19e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e28020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e281a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509e28330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e284b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e28640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b2509e2eaf0" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b2509e2eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e2ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e2d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e2d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e2d330"/>
        <function-ref name="get" scoped="" ref="0x2b2509e2d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e2d640"/>
        <function-ref name="set" scoped="" ref="0x2b2509e2d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e2d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509ea0430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509ea0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ea0780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ea0908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ea0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ea0c18"/>
        <function-ref name="get" scoped="" ref="0x2b2509ea0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e9f020"/>
        <function-ref name="set" scoped="" ref="0x2b2509e9f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e9f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509e9d8c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509e9d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e9dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e9dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eae020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509eae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eae4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eae640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509ea21e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509ea21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ea2538"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ea26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ea2848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ea29d0"/>
        <function-ref name="get" scoped="" ref="0x2b2509ea2b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ea2ce0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ea2e68"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509e9f5b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509e9f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e9f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e9fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e9fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e9fda0"/>
        <function-ref name="get" scoped="" ref="0x2b2509e9e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e9e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509e9e330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e9e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509eaea50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509eaea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eaeda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ead020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ead1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ead330"/>
        <function-ref name="get" scoped="" ref="0x2b2509ead4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ead640"/>
        <function-ref name="set" scoped="" ref="0x2b2509ead7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ead950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509ea12a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509ea12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ea15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ea1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ea1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ea1a90"/>
        <function-ref name="get" scoped="" ref="0x2b2509ea1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ea1da0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ea0020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ea01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509e9e740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509e9e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509e9ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509e9ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509e9eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509e9d020"/>
        <function-ref name="get" scoped="" ref="0x2b2509e9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509e9d330"/>
        <function-ref name="set" scoped="" ref="0x2b2509e9d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509e9d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509eadbd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509eadbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eac020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eac330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eac4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509eac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eac7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eac950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eacad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac563e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac56730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac568b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac56a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac56bc8"/>
        <function-ref name="get" scoped="" ref="0x2b250ac56d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac55020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac551a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac55330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac53480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac537d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac53958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac53ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac53c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac53df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac51020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac511a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac51330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac4f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac4f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac4f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac4f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac4fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac4fc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac4fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac4e020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac4e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac4e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac4c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac4c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac4c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac4c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac4cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac4cc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac4cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac4b020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac4b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac4b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac49480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac49480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac497d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac49958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac49ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac49c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac49df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac48020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac481a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac48330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac46480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac46480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac467d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac46958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac46ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac46c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac46df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac45020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac451a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac45330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac43480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac43480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac437d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac43958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac43ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac43c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac43df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac42020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ac40480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ac40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ac407d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ac40958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ac40ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ac40c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ac40df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ac3f020"/>
        <function-ref name="set" scoped="" ref="0x2b250ac3f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ac3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509eb6e18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509eb6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb5640"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb5950"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509eb22a8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509eb22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb2a90"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb2da0"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb0020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509ea6bd0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509ea6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb74b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb77c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb7950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509eb4020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509eb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb4808"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb4b18"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509eb0430" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509eb0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb0780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb0908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb0c18"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eaf020"/>
        <function-ref name="set" scoped="" ref="0x2b2509eaf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eaf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509eb7d60" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509eb7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb6570"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb6880"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509eb3120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509eb3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eb3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb3908"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb3c18"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509eaf5b8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509eaf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eaf908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eafa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eafc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eafda0"/>
        <function-ref name="get" scoped="" ref="0x2b2509ec1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ec11a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ec1330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ec14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250accd3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250accd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250accd730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250accd8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250accda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250accdbc8"/>
        <function-ref name="get" scoped="" ref="0x2b250accdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250accc020"/>
        <function-ref name="set" scoped="" ref="0x2b250accc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250accc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acca480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acca958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250accaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250accac68"/>
        <function-ref name="get" scoped="" ref="0x2b250accadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acc9020"/>
        <function-ref name="set" scoped="" ref="0x2b250acc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acc7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acc7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acc77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acc7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acc7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acc7c68"/>
        <function-ref name="get" scoped="" ref="0x2b250acc7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acc5020"/>
        <function-ref name="set" scoped="" ref="0x2b250acc51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acc5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acc3480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acc37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acc3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acc3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acc3c68"/>
        <function-ref name="get" scoped="" ref="0x2b250acc3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acc2020"/>
        <function-ref name="set" scoped="" ref="0x2b250acc21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acc2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acc0480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acc0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acc07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acc0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acc0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acc0c68"/>
        <function-ref name="get" scoped="" ref="0x2b250acc0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acbf020"/>
        <function-ref name="set" scoped="" ref="0x2b250acbf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acbf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acbd480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acbd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acbd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acbd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acbdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acbdc68"/>
        <function-ref name="get" scoped="" ref="0x2b250acbddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acbc020"/>
        <function-ref name="set" scoped="" ref="0x2b250acbc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acba480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acba7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acba958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acbaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acbac68"/>
        <function-ref name="get" scoped="" ref="0x2b250acbadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acb9020"/>
        <function-ref name="set" scoped="" ref="0x2b250acb91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acb9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acb7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acb7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acb77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acb7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acb7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acb7c68"/>
        <function-ref name="get" scoped="" ref="0x2b250acb7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acb6020"/>
        <function-ref name="set" scoped="" ref="0x2b250acb61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acb6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509eba740" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509eba740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ebaa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ebac18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ebada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eb8020"/>
        <function-ref name="get" scoped="" ref="0x2b2509eb81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eb8330"/>
        <function-ref name="set" scoped="" ref="0x2b2509eb84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eb8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509ecabd8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509ecabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ec9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ec91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ec9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ec94b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ec9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ec97c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ec9950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ec9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509ebc500" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509ebc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ebc850"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ebc9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ebcb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ebcce8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ebce70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ebb020"/>
        <function-ref name="set" scoped="" ref="0x2b2509ebb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ebb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509eb88c8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509eb88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eb8c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eb8da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ecb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ecb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ecb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ecb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ecb640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ecb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509ec9d60" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509ec9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ec80d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ec8260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ec83e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ec8570"/>
        <function-ref name="get" scoped="" ref="0x2b2509ec86f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ec8880"/>
        <function-ref name="set" scoped="" ref="0x2b2509ec8a08"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ec8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509ebb5b8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509ebb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ebb908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ebba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ebbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ebbda0"/>
        <function-ref name="get" scoped="" ref="0x2b2509eba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eba1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eba330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509ecba50" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509ecba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ecbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eca020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eca1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eca330"/>
        <function-ref name="get" scoped="" ref="0x2b2509eca4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eca640"/>
        <function-ref name="set" scoped="" ref="0x2b2509eca7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509ec8e18" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509ec8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ec71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ec7330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ec74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ec7640"/>
        <function-ref name="get" scoped="" ref="0x2b2509ec77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ec7950"/>
        <function-ref name="set" scoped="" ref="0x2b2509ec7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ec7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acfd3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acfd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acfd730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acfd8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acfda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acfdbc8"/>
        <function-ref name="get" scoped="" ref="0x2b250acfdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acfc020"/>
        <function-ref name="set" scoped="" ref="0x2b250acfc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acfc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acfa480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acfa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acfa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acfa958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acfaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acfac68"/>
        <function-ref name="get" scoped="" ref="0x2b250acfadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acf9020"/>
        <function-ref name="set" scoped="" ref="0x2b250acf91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acf9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250acf7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250acf7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250acf77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250acf7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250acf7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250acf7c68"/>
        <function-ref name="get" scoped="" ref="0x2b250acf7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250acf5020"/>
        <function-ref name="set" scoped="" ref="0x2b250acf51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250acf5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad3f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad3f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad3f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad3fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad3fc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad3fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad3e020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad3c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad3c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad3c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad3cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad3cc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad3cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad3b020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad3b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad3b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad39480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad397d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad39958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad39ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad39c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad39df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad38020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad38330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad36480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad36958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad36ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad36c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad36df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad35020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad33480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad33958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad33ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad33c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad32020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509ed2120" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509ed2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed2470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed25f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed2780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed2908"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed2c18"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed2da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509ecf5b8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509ecf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ecf908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ecfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ecfc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ecfda0"/>
        <function-ref name="get" scoped="" ref="0x2b2509ece020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ece1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ece330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ece4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509ed5e40" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509ed5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed41c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed4348"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed44d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed4658"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed47e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed4968"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed4af0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed4c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509ed12a8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509ed12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed1a90"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed1da0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed0020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509ece740" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509ece740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ecea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ecec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eceda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ecd020"/>
        <function-ref name="get" scoped="" ref="0x2b2509ecd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ecd330"/>
        <function-ref name="set" scoped="" ref="0x2b2509ecd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ecd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509ed3020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509ed3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed3808"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed3b18"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509ed0430" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509ed0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed0780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed0908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed0c18"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ecf020"/>
        <function-ref name="set" scoped="" ref="0x2b2509ecf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ecf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509ecd8c8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509ecd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ecdc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ecdda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ecc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ecc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ecc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ecc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ecc640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ecc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad7d3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad7d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad7d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad7d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad7da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad7dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b250ad7dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad7c020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad7a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad7a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad7a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad7aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad7ac68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad7adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad79020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad791a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad77480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad77480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad777d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad77958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad77ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad77c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad77df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad76020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad74480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad747d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad74958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad74ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad74c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad74df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad72020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad721a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad72330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad70480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad707d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad70958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad70ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad70c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad70df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad6f020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad6d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad6d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad6d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad6dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad6dc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad6ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad6c020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ad6a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ad6a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ad6a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ad6a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ad6aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ad6ac68"/>
        <function-ref name="get" scoped="" ref="0x2b250ad6adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ad69020"/>
        <function-ref name="set" scoped="" ref="0x2b250ad691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ad69330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adb5480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adb5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adb57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adb5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adb5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adb5c68"/>
        <function-ref name="get" scoped="" ref="0x2b250adb5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adb4020"/>
        <function-ref name="set" scoped="" ref="0x2b250adb41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adb4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509ed8bd8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509ed8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed74b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed77c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed7950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509ee8020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509ee8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ee8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ee84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ee8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ee8808"/>
        <function-ref name="get" scoped="" ref="0x2b2509ee8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ee8b18"/>
        <function-ref name="set" scoped="" ref="0x2b2509ee8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ee8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509eda930" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509eda930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509edac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509edae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed91a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed94b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed9640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509ed7d60" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509ed7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed6570"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed6880"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509ee7120" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509ee7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ee7470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ee75f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ee7780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ee7908"/>
        <function-ref name="get" scoped="" ref="0x2b2509ee7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ee7c18"/>
        <function-ref name="set" scoped="" ref="0x2b2509ee7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ee6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509ed9a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509ed9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ed9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ed8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ed81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ed8330"/>
        <function-ref name="get" scoped="" ref="0x2b2509ed84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ed8640"/>
        <function-ref name="set" scoped="" ref="0x2b2509ed87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ed8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509ed6e18" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509ed6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ee91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ee9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ee94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ee9640"/>
        <function-ref name="get" scoped="" ref="0x2b2509ee97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ee9950"/>
        <function-ref name="set" scoped="" ref="0x2b2509ee9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ee9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509ee62a8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509ee62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ee65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ee6780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ee6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ee6a90"/>
        <function-ref name="get" scoped="" ref="0x2b2509ee6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ee6da0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ee5020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ee51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae053e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae053e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae05730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae058b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae05a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae05bc8"/>
        <function-ref name="get" scoped="" ref="0x2b250ae05d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae04020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae02480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae027d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae02958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae02ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae02c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae02df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae01020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adff480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adff958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adffc68"/>
        <function-ref name="get" scoped="" ref="0x2b250adffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adfe020"/>
        <function-ref name="set" scoped="" ref="0x2b250adfe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adfe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adfc480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adfc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adfc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adfc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adfcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adfcc68"/>
        <function-ref name="get" scoped="" ref="0x2b250adfcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adfa020"/>
        <function-ref name="set" scoped="" ref="0x2b250adfa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adfa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adf8480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adf8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adf87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adf8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adf8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adf8c68"/>
        <function-ref name="get" scoped="" ref="0x2b250adf8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adf7020"/>
        <function-ref name="set" scoped="" ref="0x2b250adf71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adf7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adf5480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adf5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adf57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adf5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adf5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adf5c68"/>
        <function-ref name="get" scoped="" ref="0x2b250adf5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adf4020"/>
        <function-ref name="set" scoped="" ref="0x2b250adf41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adf4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adf2480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adf2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adf27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adf2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adf2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adf2c68"/>
        <function-ref name="get" scoped="" ref="0x2b250adf2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adf1020"/>
        <function-ref name="set" scoped="" ref="0x2b250adf11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adf1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250adef480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250adef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250adef7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250adef958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250adefae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250adefc68"/>
        <function-ref name="get" scoped="" ref="0x2b250adefdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250adee020"/>
        <function-ref name="set" scoped="" ref="0x2b250adee1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250adee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2509ef1430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2509ef1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ef1780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ef1908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ef1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ef1c18"/>
        <function-ref name="get" scoped="" ref="0x2b2509ef1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ef0020"/>
        <function-ref name="set" scoped="" ref="0x2b2509ef01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ef0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2509eee8c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2509eee8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eeec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eeeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eec1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509eec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eec4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eec640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2509ef31e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2509ef31e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ef3538"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ef36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ef3848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ef39d0"/>
        <function-ref name="get" scoped="" ref="0x2b2509ef3b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ef3ce0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ef3e68"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ef2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2509ef05b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2509ef05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ef0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ef0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ef0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ef0da0"/>
        <function-ref name="get" scoped="" ref="0x2b2509eef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eef1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eef330"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2509eeca50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2509eeca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eecda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eeb020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eeb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eeb330"/>
        <function-ref name="get" scoped="" ref="0x2b2509eeb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eeb640"/>
        <function-ref name="set" scoped="" ref="0x2b2509eeb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eeb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2509ef22a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2509ef22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ef25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509ef2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509ef2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509ef2a90"/>
        <function-ref name="get" scoped="" ref="0x2b2509ef2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509ef2da0"/>
        <function-ref name="set" scoped="" ref="0x2b2509ef1020"/>
        <function-ref name="clr" scoped="" ref="0x2b2509ef11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2509eef740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2509eef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eefa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eefc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eefda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eee020"/>
        <function-ref name="get" scoped="" ref="0x2b2509eee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eee330"/>
        <function-ref name="set" scoped="" ref="0x2b2509eee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2509eebbd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2509eebbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509eea020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509eea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509eea330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509eea4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509eea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509eea7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509eea950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509eeaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae3f3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae3f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae3f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae3f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae3fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae3fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b250ae3fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae3e020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae3c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae3c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae3c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae3cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae3cc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae3cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae3b020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae3b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae3b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae39480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae397d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae39958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae39ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae39c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae39df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae38020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae38330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae36480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae36958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae36ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae36c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae36df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae35020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae33480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae33958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae33ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae33c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae31020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae311a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae81480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae81480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae817d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae81958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae81ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae81c68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae81df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae80020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae7e480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae7e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae7e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae7e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae7eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae7ec68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae7edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae7d020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b250ae7b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b250ae7b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250ae7b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b250ae7b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b250ae7bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250ae7bc68"/>
        <function-ref name="get" scoped="" ref="0x2b250ae7bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250ae7a020"/>
        <function-ref name="set" scoped="" ref="0x2b250ae7a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250ae7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509ef8ac0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509ef8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509ef8e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f0a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f0a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f0a330"/>
        <function-ref name="get" scoped="" ref="0x2b2509f0a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f0a640"/>
        <function-ref name="set" scoped="" ref="0x2b2509f0a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f0a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f1adb8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f1adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f19170"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f192f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f19480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f19608"/>
        <function-ref name="get" scoped="" ref="0x2b2509f19790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f19918"/>
        <function-ref name="set" scoped="" ref="0x2b2509f19aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f19c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f153e0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f153e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f15730"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f158b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f15a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f15bc8"/>
        <function-ref name="get" scoped="" ref="0x2b2509f15d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f14020"/>
        <function-ref name="set" scoped="" ref="0x2b2509f141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f247e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f247e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f24b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f24cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f24e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f23020"/>
        <function-ref name="get" scoped="" ref="0x2b2509f231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f23330"/>
        <function-ref name="set" scoped="" ref="0x2b2509f234b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f1fc38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f1fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f1e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f1e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f1e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f1e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509f1e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f1e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509f1e950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f1ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f2e020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f2e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f2e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f2e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f2e808"/>
        <function-ref name="get" scoped="" ref="0x2b2509f2e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f2eb18"/>
        <function-ref name="set" scoped="" ref="0x2b2509f2eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f2ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f29480" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f29480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f297d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f29958"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f29ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f29c68"/>
        <function-ref name="get" scoped="" ref="0x2b2509f29df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f28020"/>
        <function-ref name="set" scoped="" ref="0x2b2509f281a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f28330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f397e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f397e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f39b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f39cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f39e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f38020"/>
        <function-ref name="get" scoped="" ref="0x2b2509f381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f38330"/>
        <function-ref name="set" scoped="" ref="0x2b2509f384b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f38640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f35970" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f35970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f35cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f35e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f34020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f341a8"/>
        <function-ref name="get" scoped="" ref="0x2b2509f34330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f344b8"/>
        <function-ref name="set" scoped="" ref="0x2b2509f34640"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f30ab0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f30ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f30e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f45020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f45330"/>
        <function-ref name="get" scoped="" ref="0x2b2509f454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f45640"/>
        <function-ref name="set" scoped="" ref="0x2b2509f457c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f45950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f42c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f42c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f40020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f401a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f40330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f404b8"/>
        <function-ref name="get" scoped="" ref="0x2b2509f40640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f407c8"/>
        <function-ref name="set" scoped="" ref="0x2b2509f40950"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f40ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f3c020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f3c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f3c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f3c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f3c808"/>
        <function-ref name="get" scoped="" ref="0x2b2509f3c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f3cb18"/>
        <function-ref name="set" scoped="" ref="0x2b2509f3cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f3ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2509f4d180" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2509f4d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2509f4d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2509f4d658"/>
        <function-ref name="toggle" scoped="" ref="0x2b2509f4d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2509f4d968"/>
        <function-ref name="get" scoped="" ref="0x2b2509f4daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2509f4dc78"/>
        <function-ref name="set" scoped="" ref="0x2b2509f4de00"/>
        <function-ref name="clr" scoped="" ref="0x2b2509f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2509f906e8" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2509f906e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b2509c686f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b2509c686f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509f90a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b2509f90d18" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2509f90d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2509f8f0a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2509f8f228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2509f8f3b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2509f8f538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2509f8f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b2509fb2d70" loc="60:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2509fb2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509fb10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2509f9d640" loc="57:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2509f9d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2509f9d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b2509fb26a8" loc="59:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2509fb26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509fb29f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b2509f9dc78" loc="58:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2509f9dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509fb2020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2509fb21a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2509fb2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b2509c70728" loc="48:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b2509c70728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2509c70a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b2509c70c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2509c65be8" loc="47:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2509c65be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509c67020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2509c671a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2509c67330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b2509d222b0" loc="56:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b2509d222b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2509d22600"/>
        <function-ref name="runTask" scoped="" ref="0x2b2509d22788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b2509d2b758" loc="57:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2509d2b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b2509d2baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2509d24448" loc="55:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2509d24448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2509d24798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2509d24920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2509d24aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b2509d422b0" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2509d422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2509d42600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b2509d47660" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2509d47660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b2509d479b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b2509d44a80" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2509d44a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2509d44dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b2509fcabc0" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2509fcabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2509fc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b2509fc3488" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b2509fc3488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2509fc37d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2509fc3960"/>
        <function-ref name="start" scoped="" ref="0x2b2509fc3ae8"/>
        <function-ref name="stop" scoped="" ref="0x2b2509fc3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x2b2509fdd3c8" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x2b2509fdd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2509fdd718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x2b250a003060" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x2b250a003060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a0033b0"/>
        <function-ref name="source" scoped="" ref="0x2b250a003538"/>
        <function-ref name="address" scoped="" ref="0x2b250a0036c0"/>
        <function-ref name="destination" scoped="" ref="0x2b250a003848"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a0039d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a003b58"/>
        <function-ref name="type" scoped="" ref="0x2b250a003ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b250a003e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a002020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a0021a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a002330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x2b250a009d28" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x2b250a009d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a0080a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a008228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b2509fc8020" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b2509fc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2509fc8370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2509fc84f8"/>
        <function-ref name="start" scoped="" ref="0x2b2509fc8680"/>
        <function-ref name="stop" scoped="" ref="0x2b2509fc8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b250a004358" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b250a004358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a0046a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a004830"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0049b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a004b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a004cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b250a005020" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b250a005020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a005370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x2b250a008b80" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x2b250a008b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a007020"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a0071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250a00ec38" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a00ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a0010d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a001260"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a0013e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a001570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a0016f8"/>
        <function-ref name="get" scoped="" ref="0x2b250a001880"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a001a08"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a0001a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a001b90"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a001d18"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a000020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2b2509fe7840" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x2b2509fe7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2509fe7b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2509fe7d18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2509fdb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2509fdb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2509fdb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b2509fd9cd0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b2509fd9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2509fe80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2509fe8228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2509fe83b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2509fe8538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2509fe86c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2b2509fdc820" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x2b2509fdc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2509fdcb70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2509fdccf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2509fdce80"/>
        <function-ref name="cancel" scoped="" ref="0x2b2509fc7030"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2509fc71b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2b2509fef1d0" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x2b2509fef1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2509fef520"/>
        <function-ref name="source" scoped="" ref="0x2b2509fef6a8"/>
        <function-ref name="address" scoped="" ref="0x2b2509fef830"/>
        <function-ref name="destination" scoped="" ref="0x2b2509fef9b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b2509fefb40"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2509fefcc8"/>
        <function-ref name="type" scoped="" ref="0x2b2509fefe50"/>
        <function-ref name="setType" scoped="" ref="0x2b2509fd9020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2509fd91a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2509fd9330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2509fd94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x2b250a005b98" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x2b250a005b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b250a055440" loc="46:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a055440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a055790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a055918"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a055aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a055c28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a055db0"/>
        <function-ref name="get" scoped="" ref="0x2b250a052020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a0521a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a0527c8"/>
        <function-ref name="set" scoped="" ref="0x2b250a052330"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a0524b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a052640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b250a0673b8" loc="50:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b250a0673b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a067708"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a067890"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a067a18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a067ba0"/>
        <function-ref name="get" scoped="" ref="0x2b250a067d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a066020"/>
        <function-ref name="set" scoped="" ref="0x2b250a0661a8"/>
        <function-ref name="clr" scoped="" ref="0x2b250a066330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a069670" loc="46:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a069670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a0699c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b250a066648" loc="51:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b250a066648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a066998"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a066b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a066ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a066e30"/>
        <function-ref name="get" scoped="" ref="0x2b250a065020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a0651a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a065330"/>
        <function-ref name="clr" scoped="" ref="0x2b250a0654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b250a069c38" loc="47:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a069c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a068020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a0681a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a068330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a0684b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a068640"/>
        <function-ref name="get" scoped="" ref="0x2b250a0687c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a068950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a067020"/>
        <function-ref name="set" scoped="" ref="0x2b250a068ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a068c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a068de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b250a0657d0" loc="52:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b250a0657d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a065b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a065ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a065e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a064020"/>
        <function-ref name="get" scoped="" ref="0x2b250a0641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a064330"/>
        <function-ref name="set" scoped="" ref="0x2b250a0644b8"/>
        <function-ref name="clr" scoped="" ref="0x2b250a064640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b250a06aaf8" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b250a06aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a06ae48"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a07d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a07d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a07d330"/>
        <function-ref name="get" scoped="" ref="0x2b250a07d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a07d640"/>
        <function-ref name="set" scoped="" ref="0x2b250a07d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b250a07d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b250a07dca8" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b250a07dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a07c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a07c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a07c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a07c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b250a07c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a07c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b250a07c950"/>
        <function-ref name="clr" scoped="" ref="0x2b250a07cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b250a07a020" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a07a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a07a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b250a07ce30" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b250a07ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b250a07b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b250a07b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b250a07b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b250a07b640"/>
        <function-ref name="get" scoped="" ref="0x2b250a07b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b250a07b950"/>
        <function-ref name="set" scoped="" ref="0x2b250a07bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b250a07bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a090e28" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a090e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a08d1a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a08d330"/>
        <function-ref name="start" scoped="" ref="0x2b250a08d4b8"/>
        <function-ref name="stop" scoped="" ref="0x2b250a08d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b250a08ddb8" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b250a08ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a08c170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a08c2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a08c480"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a08c608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a08c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b250a08ab68" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b250a08ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a089020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a0892a8" loc="65:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a0892a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a0895f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a089780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a089908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a089a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a089c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b250a0abe48" loc="69:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a0abe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a0a9300"/>
        <function-ref name="clear" scoped="" ref="0x2b250a0a99e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a0aabe8"/>
        <function-ref name="set" scoped="" ref="0x2b250a0a70f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b250a0a1848" loc="70:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a0a1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b250a0a1b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b250a0a1d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b250a0a6020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b250a0a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a08a020" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a08a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a08a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a086020" loc="67:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a086020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a086370"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a0864f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a086680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b250a088020" loc="66:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b250a088020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a088370"/>
        <function-ref name="source" scoped="" ref="0x2b250a0884f8"/>
        <function-ref name="address" scoped="" ref="0x2b250a088680"/>
        <function-ref name="destination" scoped="" ref="0x2b250a088808"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a088990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a088b18"/>
        <function-ref name="type" scoped="" ref="0x2b250a088ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b250a088e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a087020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a0871a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a087330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b250a085020" loc="68:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a085020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a09a478"/>
        <function-ref name="clear" scoped="" ref="0x2b250a09ab58"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a085d70"/>
        <function-ref name="set" scoped="" ref="0x2b250a0ab278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a0b8020" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a0b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a0b8370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a0b84f8"/>
        <function-ref name="start" scoped="" ref="0x2b250a0b8680"/>
        <function-ref name="stop" scoped="" ref="0x2b250a0b8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b250a0c6130" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a0c6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a0c5588"/>
        <function-ref name="clear" scoped="" ref="0x2b250a0c5c68"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a0c6e80"/>
        <function-ref name="set" scoped="" ref="0x2b250a0c3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b250a0b7020" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b250a0b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a0b7370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0b74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a0b7680"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a0b7808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a0b7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b250a0b6d10" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b250a0b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a0b40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a0b38c8" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a0b38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a0b3c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a0b3da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0b2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a0b21a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a0b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b250a0b0218" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a0b0218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a0af700"/>
        <function-ref name="clear" scoped="" ref="0x2b250a0afde0"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a0af020"/>
        <function-ref name="set" scoped="" ref="0x2b250a0ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b250a0bbd18" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a0bbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a0c20a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b250a0c2228"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a0c23b0"/>
        <function-ref name="set" scoped="" ref="0x2b250a0c2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a0b61c8" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a0b61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a0b6518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b250a0c2830" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a0c2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b250a0c2b80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b250a0c2d08"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b250a0c1020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b250a0c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a0b2658" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a0b2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a0b29a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a0b2b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a0b2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b250a0b4340" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b250a0b4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a0b4690"/>
        <function-ref name="source" scoped="" ref="0x2b250a0b4818"/>
        <function-ref name="address" scoped="" ref="0x2b250a0b49a0"/>
        <function-ref name="destination" scoped="" ref="0x2b250a0b4b28"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a0b4cb0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a0b4e38"/>
        <function-ref name="type" scoped="" ref="0x2b250a0b3020"/>
        <function-ref name="setType" scoped="" ref="0x2b250a0b31a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a0b3330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a0b34b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a0b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b250a0ae7b0" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a0ae7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b250a0aeb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b250a0e06e8" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b250a0e06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a0e0a38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0e0bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a0e0d48"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a0cd020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a0cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b250a0cd4e0" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b250a0cd4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a0cd830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b250a0d3718" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b250a0d3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a0d3a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0d3bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a0d3d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a0d2020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a0d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b250a0d1498" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b250a0d1498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a0d17e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b250a0cdb38" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a0cdb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a0cc020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a0cc1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a0cc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a0cc4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a0cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a0d2928" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a0d2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a0d2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b250a0d1a88" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b250a0d1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a0d1dd8"/>
        <function-ref name="source" scoped="" ref="0x2b250a0d0020"/>
        <function-ref name="address" scoped="" ref="0x2b250a0d01a8"/>
        <function-ref name="destination" scoped="" ref="0x2b250a0d0330"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a0d04b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a0d0640"/>
        <function-ref name="type" scoped="" ref="0x2b250a0d07c8"/>
        <function-ref name="setType" scoped="" ref="0x2b250a0d0950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a0d0ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a0d0c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a0d0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a0d4ce8" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a0d4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a10f0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a10f228"/>
        <function-ref name="start" scoped="" ref="0x2b250a10f3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a10f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a10ea10" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a10ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a10ed60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a10d020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a10d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a10d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a10d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b250a10f7b0" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b250a10f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a10fb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a10fc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a10fe10"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a10e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a10e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b250a1251a0" loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a1251a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b250a1254f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b250a125678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b250a125800"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b250a125988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b250a126c30" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b250a126c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b250a128020"/>
        <function-ref name="enableCca" scoped="" ref="0x2b250a1281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b250a121060" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a121060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a11f4b8"/>
        <function-ref name="clear" scoped="" ref="0x2b250a11fb98"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a121db0"/>
        <function-ref name="set" scoped="" ref="0x2b250a11e2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a10e438" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a10e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a10e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b250a136ac8" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a136ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a136e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b250a135020"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a1351a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a135330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a1271d0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a1271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a127520"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a1276a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a127830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b250a1229a8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b250a1229a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b250a122cf8"/>
        <function-ref name="initial" scoped="" ref="0x2b250a122e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b250a11d020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a11d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a11b478"/>
        <function-ref name="clear" scoped="" ref="0x2b250a11bb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a11dd70"/>
        <function-ref name="set" scoped="" ref="0x2b250a136278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b250a127b30" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a127b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b250a127e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a151d20" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a151d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a1500a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a150228"/>
        <function-ref name="start" scoped="" ref="0x2b250a1503b0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a150538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b250a179748" loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b250a179748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b250a17c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x2b250a189508" loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x2b250a189508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a189858"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a1899e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x2b250a1aed78" loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x2b250a1aed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a1ad0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a1ad278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x2b250a175e80" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b250a175e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a17ba28"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a177020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b250a16cdf0" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b250a16cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b250a16f170"/>
        <function-ref name="rand32" scoped="" ref="0x2b250a16f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b250a14f7f0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b250a14f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b250a14fb40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b250a14fcc8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b250a14fe50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b250a14e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b250a1507f0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b250a1507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b250a150b40"/>
        <function-ref name="enableCca" scoped="" ref="0x2b250a150cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a151708" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a151708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a151a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x2b250a177808" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b250a177808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a1733c8"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a173850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b250a170080" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a170080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a1703d0"/>
        <function-ref name="settled" scoped="" ref="0x2b250a170558"/>
        <function-ref name="adjust" scoped="" ref="0x2b250a1706e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x2b250a1b8190" loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x2b250a1b8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a1b84e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a1b8668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x2b250a180c38" loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x2b250a180c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a17ee78"/>
        <function-ref name="fired" scoped="" ref="0x2b250a16b5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a17e2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a16be48"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a17d748"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a17d2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a16b9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a16d7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a17e8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a16dc88"/>
        <function-ref name="stop" scoped="" ref="0x2b250a16b158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x2b250a14e3e0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x2b250a14e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a14e730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x2b250a1b3770" loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x2b250a1b3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a1b3ac0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a1b3c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b250a171770" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b250a171770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b250a171ac0"/>
        <function-ref name="biasOn" scoped="" ref="0x2b250a171c48"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b250a171dd0"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b250a15d020"/>
        <function-ref name="selectLock" scoped="" ref="0x2b250a15d1a8"/>
        <function-ref name="init" scoped="" ref="0x2b250a15d330"/>
        <function-ref name="getLock" scoped="" ref="0x2b250a15d4b8"/>
        <function-ref name="coreOn" scoped="" ref="0x2b250a15d640"/>
        <function-ref name="txMode" scoped="" ref="0x2b250a15d7c8"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b250a15d950"/>
        <function-ref name="rxMode" scoped="" ref="0x2b250a15dad8"/>
        <function-ref name="off" scoped="" ref="0x2b250a15dc60"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b250a15dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x2b250a149540" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x2b250a149540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250a149890"/>
        <function-ref name="stop" scoped="" ref="0x2b250a149a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x2b250a190060" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b250a190060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a190be0"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a18f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b250a14f020" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b250a14f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b250a14f370"/>
        <function-ref name="initial" scoped="" ref="0x2b250a14f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x2b250a15e9d8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b250a15e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b250a15ed28"/>
        <function-ref name="listen" scoped="" ref="0x2b250a14c020"/>
        <function-ref name="syncing" scoped="" ref="0x2b250a14c1a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250a14c330"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b250a14c4b8"/>
        <function-ref name="idleByte" scoped="" ref="0x2b250a14c640"/>
        <function-ref name="cts" scoped="" ref="0x2b250a14c7c8"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b250a14c950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a14cad8"/>
        <function-ref name="off" scoped="" ref="0x2b250a14cc60"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b250a14cde8"/>
        <function-ref name="rx" scoped="" ref="0x2b250a14b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a206888" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a206888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a206bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a206d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a205020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a2051a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a205330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x2b250a2183e8" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b250a2183e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b250a218838"/>
        <function-ref name="initSlave" scoped="" ref="0x2b250a2189c0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b250a218b48"/>
        <function-ref name="writeByte" scoped="" ref="0x2b250a218cd0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b250a218e58"/>
        <function-ref name="txMode" scoped="" ref="0x2b250a217020"/>
        <function-ref name="readByte" scoped="" ref="0x2b250a2171a8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b250a217330"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a2174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b250a2075a8" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b250a2075a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a2078f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a207a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a207c08"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a207d90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a206020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b250a202218" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b250a202218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a201700"/>
        <function-ref name="clear" scoped="" ref="0x2b250a201de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a201020"/>
        <function-ref name="set" scoped="" ref="0x2b250a1ff4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a208818" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a208818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a208b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b250a21bbd0" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b250a21bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a21a020"/>
        <function-ref name="isSet" scoped="" ref="0x2b250a21a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a21a330"/>
        <function-ref name="set" scoped="" ref="0x2b250a21a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a2062b0" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a2062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a206600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b250a217788" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a217788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a217ad8"/>
        <function-ref name="settled" scoped="" ref="0x2b250a217c60"/>
        <function-ref name="adjust" scoped="" ref="0x2b250a217de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x2b250a2162a0" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x2b250a2162a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a216e20"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a215310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b250a20f660" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b250a20f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a212220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x2b250a2743f0" loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x2b250a2743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a274740"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a2748c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a204e00" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a204e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a2031a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a203330"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a2034b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b250a21a828" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b250a21a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b250a21ab78"/>
        <function-ref name="biasOn" scoped="" ref="0x2b250a21ad00"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b250a219020"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b250a2191a8"/>
        <function-ref name="selectLock" scoped="" ref="0x2b250a219330"/>
        <function-ref name="init" scoped="" ref="0x2b250a2194b8"/>
        <function-ref name="getLock" scoped="" ref="0x2b250a219640"/>
        <function-ref name="coreOn" scoped="" ref="0x2b250a2197c8"/>
        <function-ref name="txMode" scoped="" ref="0x2b250a219950"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b250a219ad8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b250a219c60"/>
        <function-ref name="off" scoped="" ref="0x2b250a219de8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b250a218020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b250a212870" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b250a212870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a211490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x2b250a2a8020" loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x2b250a2a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a2a8370"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a2a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b250a1fe130" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b250a1fe130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b250a21d588"/>
        <function-ref name="clear" scoped="" ref="0x2b250a21dc68"/>
        <function-ref name="isValid" scoped="" ref="0x2b250a1fee80"/>
        <function-ref name="set" scoped="" ref="0x2b250a21b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b250a208e18" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b250a208e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250a2071a8"/>
        <function-ref name="stop" scoped="" ref="0x2b250a207330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b250a2037b8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b250a2037b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b250a203b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x2b250a2055d8" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b250a2055d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b250a205928"/>
        <function-ref name="listen" scoped="" ref="0x2b250a205ab0"/>
        <function-ref name="syncing" scoped="" ref="0x2b250a205c38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250a205dc0"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b250a204020"/>
        <function-ref name="idleByte" scoped="" ref="0x2b250a2041a8"/>
        <function-ref name="cts" scoped="" ref="0x2b250a204330"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b250a2044b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a204640"/>
        <function-ref name="off" scoped="" ref="0x2b250a2047c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b250a204950"/>
        <function-ref name="rx" scoped="" ref="0x2b250a204ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x2b250a3024b8" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x2b250a3024b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a301088"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a301510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b250a2fd620" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a2fd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a2fd970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a2fdaf8"/>
        <function-ref name="request" scoped="" ref="0x2b250a2fdc80"/>
        <function-ref name="granted" scoped="" ref="0x2b250a2fde08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a302020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x2b250a3066d8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x2b250a3066d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a3043a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a304830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a308c10" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a308c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a332020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x2b250a3322f0" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b250a3322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a332640"/>
        <function-ref name="settled" scoped="" ref="0x2b250a3327c8"/>
        <function-ref name="adjust" scoped="" ref="0x2b250a332950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b250a343e48" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b250a343e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b250a341be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x2b250a343118" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x2b250a343118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a343468"/>
        <function-ref name="read" scoped="" ref="0x2b250a3435f0"/>
        <function-ref name="write" scoped="" ref="0x2b250a343778"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b250a343900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x2b250a345620" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b250a345620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b250a345970"/>
        <function-ref name="biasOn" scoped="" ref="0x2b250a345af8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b250a345c80"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b250a345e08"/>
        <function-ref name="selectLock" scoped="" ref="0x2b250a344020"/>
        <function-ref name="init" scoped="" ref="0x2b250a3441a8"/>
        <function-ref name="getLock" scoped="" ref="0x2b250a344330"/>
        <function-ref name="coreOn" scoped="" ref="0x2b250a3444b8"/>
        <function-ref name="txMode" scoped="" ref="0x2b250a344640"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b250a3447c8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b250a344950"/>
        <function-ref name="off" scoped="" ref="0x2b250a344ad8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b250a344c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b250a398908" loc="50:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b250a398908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b250a398c58"/>
        <function-ref name="initSlave" scoped="" ref="0x2b250a398de0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b250a397020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b250a3971a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b250a397330"/>
        <function-ref name="txMode" scoped="" ref="0x2b250a3974b8"/>
        <function-ref name="readByte" scoped="" ref="0x2b250a397640"/>
        <function-ref name="rxMode" scoped="" ref="0x2b250a3977c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a397950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x2b250a39a4e0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x2b250a39a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a399088"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a399510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x2b250a399b80" loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b250a399b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a398020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a3981a8"/>
        <function-ref name="request" scoped="" ref="0x2b250a398330"/>
        <function-ref name="granted" scoped="" ref="0x2b250a3984b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a398640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b250a397bf8" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b250a397bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a396020"/>
        <function-ref name="read" scoped="" ref="0x2b250a3961a8"/>
        <function-ref name="write" scoped="" ref="0x2b250a396330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b250a3964b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b250a51b578" loc="28:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a51b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b250a51b8c8"/>
        <function-ref name="configure" scoped="" ref="0x2b250a51ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b250a51d680" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b250a51d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a51c230"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a51c6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b250a51cc70" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a51cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b250a51b020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b250a51b1a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b250a51b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b250a393980" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a393980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a393cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a393e58"/>
        <function-ref name="request" scoped="" ref="0x2b250a51d020"/>
        <function-ref name="granted" scoped="" ref="0x2b250a51d1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a51d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b250a3aca00" loc="18:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b250a3aca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a3af578"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a3af9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b250a3ab620" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b250a3ab620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a3aa1d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a3aa658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b250a3a9208" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a3a9208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b250a3a9558"/>
        <function-ref name="getChannel" scoped="" ref="0x2b250a3a96e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b250a3a9868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b250a3a8050" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a3a8050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a3a83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a3a8528"/>
        <function-ref name="request" scoped="" ref="0x2b250a3a86b0"/>
        <function-ref name="granted" scoped="" ref="0x2b250a3a8838"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a3a89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b250a3c8890" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a3c8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b250a3c8be0"/>
        <function-ref name="configure" scoped="" ref="0x2b250a3c8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b250a3bf9b0" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b250a3bf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b250a3bfd00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a3c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b250a3c4cb8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a3c4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b250a3c90a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a3c9228"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a3c93b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b250a3a6af8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a3a6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a3a6e48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a3ca020"/>
        <function-ref name="request" scoped="" ref="0x2b250a3ca1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b250a3ca330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a3ca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a3bed48" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a3bed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a3bb0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b250a3bade0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b250a3bade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b250a3b9170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a3b92f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b250a3ba488" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a3ba488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b250a3ba7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a3ba960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a3baae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b250a3d1940" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a3d1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b250a3d1c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b250a3d1e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b250a3df020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b250a3df1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b250a3df330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b250a3df4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b250a3df640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b250a3df7c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a3df950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b250a3dfad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b250a3dfc60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b250a3dfde8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b250a3de020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b250a3de2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b250a3de430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b250a3de5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b250a3de740"/>
        <function-ref name="getValue" scoped="" ref="0x2b250a3de8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a3dea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b250a3b8c10" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250a3b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250a3ba020"/>
        <function-ref name="stop" scoped="" ref="0x2b250a3ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b250a3ded30" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b250a3ded30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b250a3d00d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b250a3d0260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b250a3d03e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b250a3d0570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b250a3d06f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b250a417020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b250a417370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b250a4174f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b250a417680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b250a417808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b250a417990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b250a417b18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b250a417ca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b250a417e28"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a416020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b250a4161a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b250a416330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b250a4164b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b250a416640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b250a4168c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b250a416a50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b250a416bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b250a416d60"/>
        <function-ref name="getValue" scoped="" ref="0x2b250a415020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a4151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b250a4111e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b250a4111e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b250a411538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b250a4116c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b250a411848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b250a4119d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b250a411b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b250a411ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b250a411e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b250a410020"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a4101a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b250a410330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b250a4104b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b250a410640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b250a4107c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b250a410a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b250a410bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b250a410d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b250a40f020"/>
        <function-ref name="getValue" scoped="" ref="0x2b250a40f1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a40f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b250a40f640" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b250a40f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b250a40f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b250a4b0698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b250a4b0698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b250a4b0a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250a4b0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b250a4ae3c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250a4ae3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b250a4ae738"/>
        <function-ref name="configure" scoped="" ref="0x2b250a4ae8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b250a4b0dd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4b0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a4af170"/>
        <function-ref name="requested" scoped="" ref="0x2b250a4af2f8"/>
        <function-ref name="granted" scoped="" ref="0x2b250a4af480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a4af608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250a4af790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b250a4b1840" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a4b1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a4b1bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a4b1d38"/>
        <function-ref name="request" scoped="" ref="0x2b250a4b0020"/>
        <function-ref name="granted" scoped="" ref="0x2b250a4b01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a4b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b250a4af9d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250a4af9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b250a4afd28"/>
        <function-ref name="userId" scoped="" ref="0x2b250a4ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250af4b8e8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250af4b8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250af4bc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b250af4a020" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b250af4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b250af4a370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b250af4a4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b250af4a680"/>
        <function-ref name="dequeue" scoped="" ref="0x2b250af4a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b250af48d58" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b250af48d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b250af470f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250af47278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b250af46980" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b250af46980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b250af46cf0"/>
        <function-ref name="configure" scoped="" ref="0x2b250af46e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b250af45130" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b250af45130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b250af45480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b250af45608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b250af45790"/>
        <function-ref name="dequeue" scoped="" ref="0x2b250af45918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b250af474c0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250af474c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250af47810"/>
        <function-ref name="requested" scoped="" ref="0x2b250af47998"/>
        <function-ref name="granted" scoped="" ref="0x2b250af47b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250af47ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250af47e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250af45b60" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250af45b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250af43020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250af431a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b250af43330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250af434b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250af43640"/>
        <function-ref name="get" scoped="" ref="0x2b250af437c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250af43950"/>
        <function-ref name="led0On" scoped="" ref="0x2b250af42020"/>
        <function-ref name="set" scoped="" ref="0x2b250af43c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b250af43ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250af43de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b250af48060" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250af48060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250af483d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250af48558"/>
        <function-ref name="request" scoped="" ref="0x2b250af486e0"/>
        <function-ref name="granted" scoped="" ref="0x2b250af48868"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250af489f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b250af460e0" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250af460e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b250af46430"/>
        <function-ref name="userId" scoped="" ref="0x2b250af465b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b250af422e8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b250af422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250af42638"/>
        <function-ref name="runTask" scoped="" ref="0x2b250af427c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b250a4d6780" loc="72:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b250a4d6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b250a4d6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b250a4d6d18" loc="73:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250a4d6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a4ec0a0"/>
        <function-ref name="requested" scoped="" ref="0x2b250a4ec228"/>
        <function-ref name="granted" scoped="" ref="0x2b250a4ec3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a4ec538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250a4ec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b250a4d6060" loc="70:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250a4d6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250a4d63b0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a4d6538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b250a4ec908" loc="74:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250a4ec908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b250a4ecc58"/>
        <function-ref name="userId" scoped="" ref="0x2b250a4ecde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b250af6a740" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b250af6a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b250af6aa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b250af6acd8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b250af6acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250af690a0"/>
        <function-ref name="requested" scoped="" ref="0x2b250af69228"/>
        <function-ref name="granted" scoped="" ref="0x2b250af693b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250af69538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b250af696c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b250af6a020" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b250af6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250af6a370"/>
        <function-ref name="stop" scoped="" ref="0x2b250af6a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b250af69908" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b250af69908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b250af69c58"/>
        <function-ref name="userId" scoped="" ref="0x2b250af69de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b250a4e36a0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b250a4e36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a4e2370"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a4e27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b250a4e1428" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b250a4e1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a4e0020"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a4e04a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b250a4de9a0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b250a4de9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b250a4decf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b250a4dee78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b250a4dd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b250a4e0b18" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b250a4e0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b250a4e0e68"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a4de020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b250a4de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b250a4fa4d8" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b250a4fa4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a4fa828"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a4fa9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b250a513680" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b250a513680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a528370"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a5287e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b250a526060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b250a526060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b250a526bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b250a525088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b250a525720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b250a525720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b250a525a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b250a525c18"/>
        <function-ref name="request" scoped="" ref="0x2b250a525da0"/>
        <function-ref name="granted" scoped="" ref="0x2b250a524020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b250a5241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b250a53f208" loc="46:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b250a53f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b250a53f558"/>
        <function-ref name="rand32" scoped="" ref="0x2b250a53f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b250a5421a0" loc="45:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b250a5421a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a542ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a543310" loc="44:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a543310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a543660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b250a53a080" loc="48:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b250a53a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b250a53a3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b250a53a558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b250a53b020" loc="47:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b250a53b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a53bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a53c6a0" loc="46:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a53c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a53c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a53da60" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a53da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a70fd60"/>
        <function-ref name="fired" scoped="" ref="0x2b250a711470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a70f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a711d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a70e648"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a70e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a7118c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a712620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a70f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a712ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a711020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b250a5523c8" loc="49:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b250a5523c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a54e6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b250a551db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a54fad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a54f688"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a54d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a54eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a54f238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a551020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a54e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a5514c0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a551960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b250a549b18" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b250a549b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a573d98"/>
        <function-ref name="fired" scoped="" ref="0x2b250a5754d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a5731f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a575d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a572688"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a572238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a575928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a5486f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a5737c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a548b90"/>
        <function-ref name="stop" scoped="" ref="0x2b250a575088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b250a572c48" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b250a572c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a570820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a54ddd8" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a54ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a549170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b250a589e40" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b250a589e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a561be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a55f548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a55f0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a55f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a56c2c0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a56c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a56c610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b250a564ac8" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b250a564ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a562150"/>
        <function-ref name="fired" scoped="" ref="0x2b250a5631f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b250a563b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a563680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b250a5625d8"/>
        <function-ref name="start" scoped="" ref="0x2b250a56b860"/>
        <function-ref name="stop" scoped="" ref="0x2b250a56bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b250a678998" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b250a678998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a674020"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6750c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b250a6759d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a675548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b250a6744a8"/>
        <function-ref name="start" scoped="" ref="0x2b250a676730"/>
        <function-ref name="stop" scoped="" ref="0x2b250a676c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a6781f0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a6781f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b2509c68388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b2509c68388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a678540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250a674a90" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a674a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a673828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a671190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a673cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a671618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b250af9b020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250af9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b250af9b370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250af9b4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250af9b680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250af9b808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250af9b990"/>
        <function-ref name="setControl" scoped="" ref="0x2b250af9bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b250afa8da8" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b250afa8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250afa4470"/>
        <function-ref name="fired" scoped="" ref="0x2b250afa5510"/>
        <function-ref name="startAt" scoped="" ref="0x2b250afa5e20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250afa5998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b250afa48f8"/>
        <function-ref name="start" scoped="" ref="0x2b250afa6b38"/>
        <function-ref name="stop" scoped="" ref="0x2b250afa5088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250afa8600" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250afa8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250afa8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250afa3020" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250afa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250afa3d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250afa26b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250afa2230"/>
        <function-ref name="overflow" scoped="" ref="0x2b250afa2b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b250af960a0" loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b250af960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b250af963f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b250af96578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b250af96700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b250af96888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b250af96a10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b250af96b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b250af9a020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b250af9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250af987a8"/>
        <function-ref name="fired" scoped="" ref="0x2b250af99560"/>
        <function-ref name="get" scoped="" ref="0x2b250af9aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b250af999e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250af98c30"/>
        <function-ref name="set" scoped="" ref="0x2b250af99088"/>
        <function-ref name="start" scoped="" ref="0x2b250af99e70"/>
        <function-ref name="stop" scoped="" ref="0x2b250af98320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b250afa0168" loc="30:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250afa0168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250af9c270"/>
        <function-ref name="test" scoped="" ref="0x2b250af9e930"/>
        <function-ref name="get" scoped="" ref="0x2b250afa0ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b250af9c6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250af9cbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b250af9fb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b250af9f6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b250af9edb8"/>
        <function-ref name="set" scoped="" ref="0x2b250af9f1f8"/>
        <function-ref name="start" scoped="" ref="0x2b250af9e020"/>
        <function-ref name="stop" scoped="" ref="0x2b250af9e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250a5f2020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a5f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b250a5f2370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250a5f24f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250a5f2680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250a5f2808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250a5f2990"/>
        <function-ref name="setControl" scoped="" ref="0x2b250a5f2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b250a5ed228" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b250a5ed228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b250a5ed578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b250a5ed700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b250a5ed888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b250a5eda10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b250a5edb98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b250a5edd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b250a5f1020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b250a5f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a5ee7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b250a5f0560"/>
        <function-ref name="get" scoped="" ref="0x2b250a5f1ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a5f09e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a5eec30"/>
        <function-ref name="set" scoped="" ref="0x2b250a5f0088"/>
        <function-ref name="start" scoped="" ref="0x2b250a5f0e70"/>
        <function-ref name="stop" scoped="" ref="0x2b250a5ee320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a5fade8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a5fade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a5f30f8"/>
        <function-ref name="test" scoped="" ref="0x2b250a5f4798"/>
        <function-ref name="get" scoped="" ref="0x2b250a5f7a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a5f3580"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a5f3a58"/>
        <function-ref name="reset" scoped="" ref="0x2b250a5f6980"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a5f64f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a5f4c20"/>
        <function-ref name="set" scoped="" ref="0x2b250a5f6020"/>
        <function-ref name="start" scoped="" ref="0x2b250a5f6e08"/>
        <function-ref name="stop" scoped="" ref="0x2b250a5f4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250a614160" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a614160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b250a6144b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250a614638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250a6147c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250a614948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250a614ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b250a614c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b250a60f268" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b250a60f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b250a60f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b250a60f968" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b250a60f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b250a60fcb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b250a60fe40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b250a60e020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b250a60e1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b250a60e330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b250a60e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b250a613190" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b250a613190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a610930"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6116d0"/>
        <function-ref name="get" scoped="" ref="0x2b250a613d10"/>
        <function-ref name="reset" scoped="" ref="0x2b250a611b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a610db8"/>
        <function-ref name="set" scoped="" ref="0x2b250a6111f8"/>
        <function-ref name="start" scoped="" ref="0x2b250a610020"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6104a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a6190f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a6190f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a615270"/>
        <function-ref name="test" scoped="" ref="0x2b250a616930"/>
        <function-ref name="get" scoped="" ref="0x2b250a619c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a6156f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a615bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a618a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a618608"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a616db8"/>
        <function-ref name="set" scoped="" ref="0x2b250a618130"/>
        <function-ref name="start" scoped="" ref="0x2b250a616020"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6164a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b250a6a6cf0" loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b250a6a6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a6a50a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a6a5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b250a6aac70" loc="49:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b250a6aac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a6a6410"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6a74a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b250a6a7db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a6a7930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b250a6a6898"/>
        <function-ref name="start" scoped="" ref="0x2b250a6a89f0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a6afab0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a6afab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a6abd60"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6ac470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a6ab1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a6acd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a6aa648"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a6aa1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a6ac8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a6ad620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a6ab790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a6adac0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b250a6f3930" loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b250a6f3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a6f3c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a6f3e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b250a6f8858" loc="49:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b250a6f8858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a6f4bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6f51c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a6f4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a6f5a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a6f34d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a6f3088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a6f5610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a6f63d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a6f45f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a6f6878"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6f6d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a6ca5e0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a6ca5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a6f9988"/>
        <function-ref name="fired" scoped="" ref="0x2b250a6fb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a6fbd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a6fb900"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a6f82d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a6f9df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a6fb490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a6fc198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a6f9398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a6fc658"/>
        <function-ref name="stop" scoped="" ref="0x2b250a6fcb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b250a6ee128" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b250a6ee128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a6eeca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b250a6e5330" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a6e5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a6e40c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a6e49d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a6e4548"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a6e4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b250a7057e8" loc="54:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b250a7057e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b250a705b38"/>
        <function-ref name="changed" scoped="" ref="0x2b250a705cc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b250a705e48"/>
        <function-ref name="setAddress" scoped="" ref="0x2b250a709020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b250a72b568" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b250a72b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b250a72a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250a71c638" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a71c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a71b3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a71bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a71b878"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a71a1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250a74c3a0" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a74c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b2509d1d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a74b130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a74ba40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a74b5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a749020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250a740140" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a740140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250a740490"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b250a740618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250a7407a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b250a740928"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250a740ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250a740c38"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b250a740dc0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b250a73f020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b250a73f1a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b250a73f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b250a765b68" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b250a765b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b250a763db8"/>
        <function-ref name="test" scoped="" ref="0x2b250a7634a8"/>
        <function-ref name="get" scoped="" ref="0x2b250a736728"/>
        <function-ref name="captured" scoped="" ref="0x2b250a7350c0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a735598"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a763930"/>
        <function-ref name="set" scoped="" ref="0x2b250a736bb0"/>
        <function-ref name="start" scoped="" ref="0x2b250a735a20"/>
        <function-ref name="stop" scoped="" ref="0x2b250a763020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b250a7629c0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b250a7629c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a75e270"/>
        <function-ref name="fired" scoped="" ref="0x2b250a760020"/>
        <function-ref name="get" scoped="" ref="0x2b250a761598"/>
        <function-ref name="reset" scoped="" ref="0x2b250a7604a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a75e6f8"/>
        <function-ref name="set" scoped="" ref="0x2b250a761a20"/>
        <function-ref name="start" scoped="" ref="0x2b250a760930"/>
        <function-ref name="stop" scoped="" ref="0x2b250a760db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a746098" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a746098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a742270"/>
        <function-ref name="test" scoped="" ref="0x2b250a744930"/>
        <function-ref name="get" scoped="" ref="0x2b250a746c18"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a7426f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a742bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a745a58"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a7455d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a744db8"/>
        <function-ref name="set" scoped="" ref="0x2b250a7450f8"/>
        <function-ref name="start" scoped="" ref="0x2b250a744020"/>
        <function-ref name="stop" scoped="" ref="0x2b250a7444a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250a755020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250a755020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250a755370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b250a7554f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250a755680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b250a755808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250a755990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250a755b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b250a755ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b250a755e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b250a754020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b250a7541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b250a779a48" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b250a779a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b250a779d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250a778020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250a7781a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250a778330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250a7784b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b250a778640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b250a750e60" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b250a750e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a782798"/>
        <function-ref name="fired" scoped="" ref="0x2b250a74d4f8"/>
        <function-ref name="get" scoped="" ref="0x2b250a74ea18"/>
        <function-ref name="reset" scoped="" ref="0x2b250a74d980"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a782c20"/>
        <function-ref name="set" scoped="" ref="0x2b250a74d020"/>
        <function-ref name="start" scoped="" ref="0x2b250a74de08"/>
        <function-ref name="stop" scoped="" ref="0x2b250a782310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b250a754680" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b250a754680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b250a750798"/>
        <function-ref name="test" scoped="" ref="0x2b250a751e58"/>
        <function-ref name="get" scoped="" ref="0x2b250a752230"/>
        <function-ref name="captured" scoped="" ref="0x2b250a752b90"/>
        <function-ref name="reset" scoped="" ref="0x2b250a7510c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a750310"/>
        <function-ref name="set" scoped="" ref="0x2b250a7526b8"/>
        <function-ref name="start" scoped="" ref="0x2b250a751548"/>
        <function-ref name="stop" scoped="" ref="0x2b250a7519d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b250a7812b8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b250a7812b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a77ea40"/>
        <function-ref name="fired" scoped="" ref="0x2b250a77f7e8"/>
        <function-ref name="get" scoped="" ref="0x2b250a781e38"/>
        <function-ref name="reset" scoped="" ref="0x2b250a77fc70"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a77d020"/>
        <function-ref name="set" scoped="" ref="0x2b250a77f310"/>
        <function-ref name="start" scoped="" ref="0x2b250a77e130"/>
        <function-ref name="stop" scoped="" ref="0x2b250a77e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b250a77d698" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b250a77d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250a779020"/>
        <function-ref name="fired" scoped="" ref="0x2b250a77cd08"/>
        <function-ref name="get" scoped="" ref="0x2b250a77c3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b250a77a1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a7794a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a77c830"/>
        <function-ref name="start" scoped="" ref="0x2b250a77a680"/>
        <function-ref name="stop" scoped="" ref="0x2b250a77ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a75a020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a75a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a7560f8"/>
        <function-ref name="test" scoped="" ref="0x2b250a7577a8"/>
        <function-ref name="get" scoped="" ref="0x2b250a75aba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a756580"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a756a58"/>
        <function-ref name="reset" scoped="" ref="0x2b250a7589e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a758560"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a757c30"/>
        <function-ref name="set" scoped="" ref="0x2b250a758088"/>
        <function-ref name="start" scoped="" ref="0x2b250a758e70"/>
        <function-ref name="stop" scoped="" ref="0x2b250a757320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a7fd020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a7fd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b2509c68388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b2509c68388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a7fd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b250a7fd740" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a7fd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a825930"/>
        <function-ref name="test" scoped="" ref="0x2b250a825020"/>
        <function-ref name="get" scoped="" ref="0x2b250a8283a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a825db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a8242f0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a8271f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a828d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a8254a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a828830"/>
        <function-ref name="start" scoped="" ref="0x2b250a827680"/>
        <function-ref name="stop" scoped="" ref="0x2b250a827b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250a8215a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a8215a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b2509d1d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a8103a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a810cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a810830"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a80f190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b250a80f6f0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a80f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250a843930"/>
        <function-ref name="test" scoped="" ref="0x2b250a843020"/>
        <function-ref name="get" scoped="" ref="0x2b250a80d3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b250a843db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250a8412f0"/>
        <function-ref name="reset" scoped="" ref="0x2b250a8441f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a80dd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b250a8434a8"/>
        <function-ref name="set" scoped="" ref="0x2b250a80d830"/>
        <function-ref name="start" scoped="" ref="0x2b250a844680"/>
        <function-ref name="stop" scoped="" ref="0x2b250a844b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b250a85be20" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b250a85be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b2509d1d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a85abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a859548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a8590c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a8599d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250a83ec50" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a83ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a85d9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a85b330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a85de78"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a85b7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b250a71dc38" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b250a71dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a856820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b250a856e48" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250a856e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b2509ce6178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250a855be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250a854548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250a8540c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b250a8549d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250a851e10" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250a851e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce7608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2509ce7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b250a84d0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b250a84f798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b250a84e4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b250a84e088"/>
        <function-ref name="getdt" scoped="" ref="0x2b250a84d960"/>
        <function-ref name="gett0" scoped="" ref="0x2b250a84d510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b250a84fbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b250a8509e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b250a84eaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b250a850e80"/>
        <function-ref name="stop" scoped="" ref="0x2b250a84f348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a870758" loc="46:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a870758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a870aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a870c30"/>
        <function-ref name="start" scoped="" ref="0x2b250a870db8"/>
        <function-ref name="stop" scoped="" ref="0x2b250a86d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b250a86d798" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b250a86d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a86dae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a86dc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a86ddf8"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a86c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a86c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a86a020" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a86a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a86a370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a86a4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a86a680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a86a808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a86a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a86c928" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a86c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a86cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250a868c80" loc="53:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a868c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a867020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a8671a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a867330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a8674b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a867640"/>
        <function-ref name="get" scoped="" ref="0x2b250a8677c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a867950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a866020"/>
        <function-ref name="set" scoped="" ref="0x2b250a867ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a867c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a867de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a868348" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a868348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a868698"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a868820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a8689a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b250a86ac30" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b250a86ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a869020"/>
        <function-ref name="source" scoped="" ref="0x2b250a8691a8"/>
        <function-ref name="address" scoped="" ref="0x2b250a869330"/>
        <function-ref name="destination" scoped="" ref="0x2b250a8694b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a869640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a8697c8"/>
        <function-ref name="type" scoped="" ref="0x2b250a869950"/>
        <function-ref name="setType" scoped="" ref="0x2b250a869ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a869c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a869de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a868020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b250a8be308" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b250a8be308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a8be658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a8be7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a8be968"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a8beaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a8bec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b250a8bd020" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b250a8bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a8bd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b250a864460" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b250a864460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a8647d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a864958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a864ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a864c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a864df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b250a8c0d20" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b250a8c0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b250a8bf0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b250a8bf228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a8bf3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a8bf538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b250a8bf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a8c1180" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a8c1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a8c14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b250a8bf908" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b250a8bf908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b250a8bfc58"/>
        <function-ref name="noAck" scoped="" ref="0x2b250a8bfde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b250a8be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b250a8c1738" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b250a8c1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b250a8c1a88"/>
        <function-ref name="source" scoped="" ref="0x2b250a8c1c10"/>
        <function-ref name="address" scoped="" ref="0x2b250a8c1d98"/>
        <function-ref name="destination" scoped="" ref="0x2b250a8c0020"/>
        <function-ref name="setSource" scoped="" ref="0x2b250a8c01a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b250a8c0330"/>
        <function-ref name="type" scoped="" ref="0x2b250a8c04b8"/>
        <function-ref name="setType" scoped="" ref="0x2b250a8c0640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b250a8c07c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b250a8c0950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b250a8c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a8f4728" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a8f4728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a8f4a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a8f4c00"/>
        <function-ref name="start" scoped="" ref="0x2b250a8f4d88"/>
        <function-ref name="stop" scoped="" ref="0x2b250a8f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b250a8f2208" loc="52:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b250a8f2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a8f2558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a8f26e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a8f2868"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a8f29f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a8f2b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a8f4110" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a8f4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a8f4460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a8f3760" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a8f3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a8f3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250a8f08f8" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a8f08f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a8f0c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a8f0dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a8ef020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a8ef1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a8ef330"/>
        <function-ref name="get" scoped="" ref="0x2b250a8ef4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a8ef640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a8efc60"/>
        <function-ref name="set" scoped="" ref="0x2b250a8ef7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a8ef950"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a8efad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b250a8f0020" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b250a8f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b250a8f0370"/>
        <function-ref name="offset" scoped="" ref="0x2b250a8f04f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b250a8f0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b250a8ebd00" loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b250a8ebd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b250a8e80a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b250a8e8228"/>
        <function-ref name="start" scoped="" ref="0x2b250a8e83b0"/>
        <function-ref name="stop" scoped="" ref="0x2b250a8e8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b250a93b830" loc="332:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b250a93b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a93bb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a93bd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b250a914398" loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b250a914398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250a9146e8"/>
        <function-ref name="stop" scoped="" ref="0x2b250a914870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b250a8f8d70" loc="191:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b250a8f8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a8f70f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a8f7278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250a8eb6e8" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250a8eb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250a8eba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b250a911e40" loc="75:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b250a911e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b250a9131c0"/>
        <function-ref name="flush" scoped="" ref="0x2b250a913348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b250a93d020" loc="322:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b250a93d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a93d370"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a93d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b250a8d9b38" loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b250a8d9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b250a8e1020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b250a8e11a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b250a8e1330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b250a8e14b8"/>
        <function-ref name="putData" scoped="" ref="0x2b250a8e1640"/>
        <function-ref name="putDone" scoped="" ref="0x2b250a8e17c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b250a8e1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250a8e1bc8" loc="73:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250a8e1bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250a8de020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250a8de1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b250a8de330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250a8de4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250a8de640"/>
        <function-ref name="get" scoped="" ref="0x2b250a8de7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250a8de950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250a914020"/>
        <function-ref name="set" scoped="" ref="0x2b250a8dead8"/>
        <function-ref name="led0On" scoped="" ref="0x2b250a8dec60"/>
        <function-ref name="led2On" scoped="" ref="0x2b250a8dede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b250a937918" loc="341:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b250a937918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250a937c68"/>
        <function-ref name="runTask" scoped="" ref="0x2b250a937df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b250a8e3898" loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b250a8e3898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b250a8e3be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b250a8e3d70"/>
        <function-ref name="startSend" scoped="" ref="0x2b250a8e7020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b250a8e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b250a8dfb48" loc="68:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b250a8dfb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b250a8e6020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b250a8e61a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b250a8e6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b250aa2a100" loc="275:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b250aa2a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250aa2a450"/>
        <function-ref name="runTask" scoped="" ref="0x2b250aa2a5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b250a9ef020" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b250a9ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250a9ef390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b250a9ef518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b250a9ef6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b250a9ef828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250a9ef9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b250aa2a8a0" loc="158:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b250aa2a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b250aa2abf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b250aa2ad78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b250a9f0868" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b250a9f0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b250a9f0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b250a9efdb8" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b250a9efdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b2509fbb808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b250a9ee170"/>
        <function-ref name="offset" scoped="" ref="0x2b250a9ee2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b250a9ee480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250aa2da50" loc="57:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250aa2da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250aa2dda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250aa2b020"/>
        <function-ref name="led1On" scoped="" ref="0x2b250aa2b1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250aa2b330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250aa2b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b250aa2b640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250aa2b7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b250aa2bde8"/>
        <function-ref name="set" scoped="" ref="0x2b250aa2bad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250aa2b950"/>
        <function-ref name="led0On" scoped="" ref="0x2b250aa2bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b250aa2d020" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b250aa2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b250aa2d370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b250aa2d4f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b250aa2d680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b250aa2d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b250a9ee6c8" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b250a9ee6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b250a9eea18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b250a9eeba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b250a9eed28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b250aa18448" loc="50:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b250aa18448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa18798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b250aa18920"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa18aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b250aa18c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b250aa18db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b250aa24020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250aa241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b250aa28b38" loc="48:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b250aa28b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b250aa25020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b250aa251a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b250aa25330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b250aa254b8"/>
        <function-ref name="putData" scoped="" ref="0x2b250aa25640"/>
        <function-ref name="putDone" scoped="" ref="0x2b250aa257c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b250aa25950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b250aa24420" loc="51:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b250aa24420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b250aa24770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b250aa248f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b250aa24a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b250aa24c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b250aa24d90"/>
        <function-ref name="get" scoped="" ref="0x2b250aa23020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b250aa231a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b250aa237c8"/>
        <function-ref name="set" scoped="" ref="0x2b250aa23330"/>
        <function-ref name="led0On" scoped="" ref="0x2b250aa234b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b250aa23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b250aa38290" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b250aa38290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa385e0"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa38768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b250aa3f0c0" loc="41:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b250aa3f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa3f410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b250aa3f598"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa3f720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b250aa3f8a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b250aa3fa30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b250aa3fbb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250aa3fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b250aa278b8" loc="40:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b250aa278b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa27c08"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa27d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b250aa3daf8" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b250aa3daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa3de48"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b250aa37310" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b250aa37310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa37660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b250aa377e8"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa37970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b250aa37af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b250aa37c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b250aa37e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250aa36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b250aa36598" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250aa36598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250aa353a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250aa35cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250aa35830"/>
        <function-ref name="overflow" scoped="" ref="0x2b250aa34190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b250aa3d340" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b250aa3d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa3d690"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa3d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b250aa30e58" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b250aa30e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa721e8"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa72370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b250aa715f8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b250aa715f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa71948"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa71ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250aa30120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250aa30120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250aa30470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b250aa725f8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b250aa725f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b250aa72948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b250aa72ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b250aa72c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b250aa72de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b250aa71020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b250aa711a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b250aa71330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b250aa6fc60" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250aa6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250aab09f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250aaaf330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250aab0e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b250aaaf7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b250aa705c0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b250aa705c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b250aa70910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b250aa70a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250aa70c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b250aa70da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b250aa6f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b250aa6f1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b250aa6f330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b250aa6f4b8"/>
        <function-ref name="tx" scoped="" ref="0x2b250aa6f640"/>
        <function-ref name="rx" scoped="" ref="0x2b250aa6f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b250aa306f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b250aa306f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa30a48"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa30bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b250aa71d98" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b250aa71d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa70170"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa702f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b250aa92860" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b250aa92860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b250aa92bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b250aa92d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250aa91020"/>
        <function-ref name="txDone" scoped="" ref="0x2b250aa911a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b250aa91330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b250aa914b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b250aa91640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b250aa917c8"/>
        <function-ref name="tx" scoped="" ref="0x2b250aa91950"/>
        <function-ref name="rx" scoped="" ref="0x2b250aa91ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b250aad2020" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b250aad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b250aad2370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b250aad24f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250aad2680"/>
        <function-ref name="txDone" scoped="" ref="0x2b250aad2808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b250aad2990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b250aad2b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b250aad2ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b250aad2e28"/>
        <function-ref name="tx" scoped="" ref="0x2b250aad1020"/>
        <function-ref name="rx" scoped="" ref="0x2b250aad11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b250aa92020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b250aa92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa92370"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa924f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b250aa91e58" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b250aa91e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa901e8"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa90370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b250aa906f0" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b250aa906f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa90a40"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa90bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b250aa93700" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b250aa93700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aa93a50"/>
        <function-ref name="stop" scoped="" ref="0x2b250aa93bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b250aad1e40" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b250aad1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250aace1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b250aacd6d8" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b250aacd6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b250aacda28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b250aacdbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250aacdd38"/>
        <function-ref name="txDone" scoped="" ref="0x2b250aacc020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b250aacc1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b250aacc330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b250aacc4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b250aacc640"/>
        <function-ref name="tx" scoped="" ref="0x2b250aacc7c8"/>
        <function-ref name="rx" scoped="" ref="0x2b250aacc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b250aaccca8" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b250aaccca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250aacb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b250aaca550" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b250aaca550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b250aaca8a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b250aacaa28"/>
        <function-ref name="rxDone" scoped="" ref="0x2b250aacabb0"/>
        <function-ref name="txDone" scoped="" ref="0x2b250aacad38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b250aac9020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b250aac91a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b250aac9330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b250aac94b8"/>
        <function-ref name="tx" scoped="" ref="0x2b250aac9640"/>
        <function-ref name="rx" scoped="" ref="0x2b250aac97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b250aacee18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b250aacee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aacd1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b250aacd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b250aacb3e0" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b250aacb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aacb730"/>
        <function-ref name="stop" scoped="" ref="0x2b250aacb8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b250aacbc78" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b250aacbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aaca020"/>
        <function-ref name="stop" scoped="" ref="0x2b250aaca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b250aac9ae8" loc="90:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b250aac9ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b250aac9e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b250aac8020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b250aac81a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b250aac8330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b250aac84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b250aac87c8" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b250aac87c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b250aac8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b250aace580" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b250aace580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b250aace8d0"/>
        <function-ref name="stop" scoped="" ref="0x2b250aacea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250ab33020" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250ab33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250ab33d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250ab326b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250ab32230"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ab32b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250ab31d38" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250ab31d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TThree" ref="0x2b2509d1daa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250ab2eac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250ab2d4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250ab2d020"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ab2d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250ab24aa8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250ab24aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250ab24df8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b250ab23020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250ab231a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b250ab23330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250ab234b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250ab23640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b250ab237c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b250ab23950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b250ab23ad8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b250ab23c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b250ab22190" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b250ab22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b250ab1e310"/>
        <function-ref name="test" scoped="" ref="0x2b250ab1f998"/>
        <function-ref name="get" scoped="" ref="0x2b250ab22d10"/>
        <function-ref name="captured" scoped="" ref="0x2b250ab216d0"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab21ba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab1fe20"/>
        <function-ref name="set" scoped="" ref="0x2b250ab211f8"/>
        <function-ref name="start" scoped="" ref="0x2b250ab1f088"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab1f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b250ab1d020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b250ab1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250ab1a7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b250ab1c560"/>
        <function-ref name="get" scoped="" ref="0x2b250ab1dba0"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab1c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab1ac30"/>
        <function-ref name="set" scoped="" ref="0x2b250ab1c088"/>
        <function-ref name="start" scoped="" ref="0x2b250ab1ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab1a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250ab2b9a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250ab2b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250ab26b80"/>
        <function-ref name="test" scoped="" ref="0x2b250ab26270"/>
        <function-ref name="get" scoped="" ref="0x2b250ab28560"/>
        <function-ref name="setScale" scoped="" ref="0x2b250ab24088"/>
        <function-ref name="getScale" scoped="" ref="0x2b250ab24560"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab274a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ab27020"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab266f8"/>
        <function-ref name="set" scoped="" ref="0x2b250ab289e8"/>
        <function-ref name="start" scoped="" ref="0x2b250ab27930"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab27db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b250ab57c90" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b250ab57c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b250ab55020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b250ab551a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b250ab55330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b250ab554b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b250ab55640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b250ab557c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b250ab55950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b250ab55ad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b250ab55c60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b250ab55de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b250ab51c48" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b250ab51c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250ab4d4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b250ab4e1d0"/>
        <function-ref name="get" scoped="" ref="0x2b250ab4f820"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab4e658"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab4d930"/>
        <function-ref name="set" scoped="" ref="0x2b250ab4fca8"/>
        <function-ref name="start" scoped="" ref="0x2b250ab4eae0"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b250ab54350" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b250ab54350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b250ab51580"/>
        <function-ref name="test" scoped="" ref="0x2b250ab52c20"/>
        <function-ref name="get" scoped="" ref="0x2b250ab53020"/>
        <function-ref name="captured" scoped="" ref="0x2b250ab53980"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab53e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab510f8"/>
        <function-ref name="set" scoped="" ref="0x2b250ab534a8"/>
        <function-ref name="start" scoped="" ref="0x2b250ab52310"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab52798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b250ab4b020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b250ab4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250ab497a8"/>
        <function-ref name="fired" scoped="" ref="0x2b250ab4a560"/>
        <function-ref name="get" scoped="" ref="0x2b250ab4bba0"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab4a9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab49c30"/>
        <function-ref name="set" scoped="" ref="0x2b250ab4a088"/>
        <function-ref name="start" scoped="" ref="0x2b250ab4ae70"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab49320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b250ab48360" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b250ab48360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b250ab45c20"/>
        <function-ref name="fired" scoped="" ref="0x2b250ab46980"/>
        <function-ref name="get" scoped="" ref="0x2b250ab46020"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab46e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab440f8"/>
        <function-ref name="set" scoped="" ref="0x2b250ab464a8"/>
        <function-ref name="start" scoped="" ref="0x2b250ab45310"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab45798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b250ab19ca8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250ab19ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250ab58db8"/>
        <function-ref name="test" scoped="" ref="0x2b250ab584a8"/>
        <function-ref name="get" scoped="" ref="0x2b250ab5b858"/>
        <function-ref name="setScale" scoped="" ref="0x2b250ab57270"/>
        <function-ref name="getScale" scoped="" ref="0x2b250ab57748"/>
        <function-ref name="reset" scoped="" ref="0x2b250ab596c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ab59238"/>
        <function-ref name="isOn" scoped="" ref="0x2b250ab58930"/>
        <function-ref name="set" scoped="" ref="0x2b250ab5bce0"/>
        <function-ref name="start" scoped="" ref="0x2b250ab59b48"/>
        <function-ref name="stop" scoped="" ref="0x2b250ab58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b250abda940" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b250abda940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b2509c68388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b2509c68388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b250abdac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b250abd9098" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250abd9098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250abd5270"/>
        <function-ref name="test" scoped="" ref="0x2b250abd6930"/>
        <function-ref name="get" scoped="" ref="0x2b250abd9c18"/>
        <function-ref name="setScale" scoped="" ref="0x2b250abd56f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b250abd5bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b250abd7a58"/>
        <function-ref name="overflow" scoped="" ref="0x2b250abd75d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b250abd6db8"/>
        <function-ref name="set" scoped="" ref="0x2b250abd70f8"/>
        <function-ref name="start" scoped="" ref="0x2b250abd6020"/>
        <function-ref name="stop" scoped="" ref="0x2b250abd64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250abd2950" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250abd2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TThree" ref="0x2b2509d1daa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250abd1730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250abd0088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250abd1bb8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250abd0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b250abd0a70" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b250abd0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b250abccb80"/>
        <function-ref name="test" scoped="" ref="0x2b250abcc270"/>
        <function-ref name="get" scoped="" ref="0x2b250abce658"/>
        <function-ref name="setScale" scoped="" ref="0x2b250abca088"/>
        <function-ref name="getScale" scoped="" ref="0x2b250abca560"/>
        <function-ref name="reset" scoped="" ref="0x2b250abcd4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b250abcd020"/>
        <function-ref name="isOn" scoped="" ref="0x2b250abcc6f8"/>
        <function-ref name="set" scoped="" ref="0x2b250abceae0"/>
        <function-ref name="start" scoped="" ref="0x2b250abcd930"/>
        <function-ref name="stop" scoped="" ref="0x2b250abcddb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b250ac0c7f8" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b250ac0c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TThree" ref="0x2b2509d1daa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250ac0b578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250ac09020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250ac0ba00"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ac094a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b250abc7610" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b250abc7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2509ce6588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b2509ce68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b250abc53a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b250abc5cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b250abc5830"/>
        <function-ref name="overflow" scoped="" ref="0x2b250ac0c190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b250ac002b8" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b250ac002b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b250ac00608"/>
        <function-ref name="offset" scoped="" ref="0x2b250ac00790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b250ac00918"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b2509d60cc0" loc="62:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b2509d619a8" loc="60:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b2509d64de8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b2509d64b78" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b2509d664a8" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b2509d65020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b2509d66c30" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b2509d65aa8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b2509d65838" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b2509d64328" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b2509d7cab0" loc="44:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b2509d7b1d8" loc="45:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b2509d7dd20" loc="42:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b2509d79020" loc="47:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2509d7c400" loc="43:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b2509d7b890" loc="46:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2509d7d020" loc="40:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b2509d7d690" loc="41:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b2509dd7020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b2509dd86e0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b2509dd7800" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b2509dcc020" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b2509dcb660" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b2509dcb3f0" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b2509dccc60" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b2509dcc6c0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b2509dcc9e0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x2b2509dcbdd8" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x2b2509df3b90" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x2b2509e00a48" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b2509e00328" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b2509df3428" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2509df31b8" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b2509df1ad8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b2509dff178" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x2b2509df1378" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b2509dff8a8" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b2509dfe290" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2509dfe020" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b2509c63970" loc="57:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b2509c65878" loc="72:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b2509c650d8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b2509c71608" loc="67:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b2509c71df8" loc="75:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b2509d2b450" loc="76:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b2509d46d28" loc="62:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b2509cc7940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b2509d446d8" loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b2509fc6a90" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2509fc6820" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b2509fc3020" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2509fc4c18" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2509fc9e78" loc="104:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2509fc42a8" loc="130:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b2509fda718" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
              <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fc7dd0" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b2509fda140" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2509fda450" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b2509ff1b08" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff1898" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b2509fe3b80" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509fe3910" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b2509fe5110" loc="68:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b2509fe5b68" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509fe58f8" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b2509ff8450" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ffae60" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b2509ff81d0" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b2509ffa020" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff9900" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b2509ff9c38" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b2509ff5768" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff54f8" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b2509ff49d8" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff4458" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b2509ff4758" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b2509fbeb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b2509ff7600" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff7390" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b2509ff2020" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b2509ff0920" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b2509ff0c50" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b2509ff2d88" loc="195:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b2509fee5b8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fee348" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b2509fed5b8" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fed348" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b2509fea6c8" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fea100" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2509fea410" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2509fe9828" loc="106:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b2509fec950" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fec3c0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2509fec6d0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b2509ffb070" loc="61:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b2509ffb7a8" loc="67:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b250a012020" loc="72:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b250a012e70" loc="83:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b250a010480" loc="100:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b250a010c18" loc="117:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b250a012738" loc="77:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a00e768" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b250a00e4f8" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b2509ffd900" loc="56:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b250a011608" loc="89:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b250a011d20" loc="94:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b2509fcc0c8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b2509fcd788" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b2509fcdae8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2509fcddf8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b2509fde3c0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fe0dc8" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2509fde108" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2509fe05c0" loc="123:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2509fe2370" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fe2100" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b2509fe17a0" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2509fe11f8" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b2509fe1520" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a086db0" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a086db0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b250a099020" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a099020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b250a097cb8" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a099020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a097a48" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b250a095020" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a098ca8" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b250a099b40" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0998d0" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a0932a0" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a099020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a095c48" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b250a093020" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a099020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b250a0a3d88" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0a37a0" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b250a0a3b08" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b250a0a1020" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0a2c48" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b250a0a3020" loc="57:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b250a0a45c0" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b250a0a4350" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b250a09e3b0" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a09e140" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b250a09d4e8" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a09d278" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b250a09b5b8" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a09b348" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b250a0bf6c8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0bf458" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b250a0c0780" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0c0510" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b250a0bb4e8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0bb278" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a0bc5b8" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0bc348" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b250a0b1d08" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0b1a98" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b250a0cb428" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0cee48" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250a0cb1a8" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b250a0c76c8" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0c7100" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250a0c7410" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b250a0e28a8" loc="112:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b250a0ca670" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0ca400" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b250a0c9a70" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a0c94c8" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b250a0c97f0" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x2b250a126918" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x2b250a126178" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x2b250a122108" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b250a124e38" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x2b250a124108" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b250a128e48" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a17a420" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a17a420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b250a17a650" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a17a650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b250a179118" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a17a650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b250a17ae78" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a17a650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b250a176378" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a176378"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b250a176be8" loc="58:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b250a1758e8" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a176378"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b250a175368" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b250a175668" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a176378"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b250a16cac0" loc="52:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b250a16c328" loc="46:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2b250a16e580" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x2b250a16eca8" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x2b250a15cdb8" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a15cb48" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a16fc98" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a16fc98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b250a181760" loc="136:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b250a167110" loc="83:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b250a166d40" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b250a1667a8" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b250a166ac0" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b250a166070" loc="98:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b250a1806b0" loc="151:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b250a181e80" loc="144:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b250a167888" loc="92:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b250a1697a0" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b250a169530" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b250a164d28" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b250a164790" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b250a164aa8" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b250a168290" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b250a168020" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a168a38" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x2b250a15b578" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x2b250a15b308" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x2b250a157650" loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x2b250a1568c8" loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x2b250a15a0a8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x2b250a15be08" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x2b250a155290" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x2b250a155020" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b250a14bbf0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x2b250a155a68" loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x2b250a158e40" loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b250a158020" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x2b250a171258" loc="147:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b250a158730" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b250a15a930" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x2b250a1560a8" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x2b250a157de0" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b250a14a700" loc="95:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a149020" loc="105:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x2b250a148c58" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a1489e8" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2b250a162cc8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x2b250a160650" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b250a15e6f0" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x2b250a1625b0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x2b250a161d68" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x2b250a161af8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x2b250a1473a0" loc="32:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x2b250a146da8" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x2b250a146b38" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b250a1463e0" loc="44:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b250a1613e0" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x2b250a147c10" loc="39:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
              <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x2b250a15e020" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a2137d8" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a2137d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b250a20f0d8" loc="61:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b25092fd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b250a2ff870" loc="120:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b250a300960" loc="97:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b250a300070" loc="88:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b250a2ff110" loc="102:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b250a2fd290" loc="128:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b250a3b1020" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b250a3b26f8" loc="59:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b250a3b49a0" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a3b49a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b250a3ad258" loc="55:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b250a3ac020" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a3b49a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b250a3ad968" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b250a3adc68" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b250a3b49a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b250a3c1768" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b250a3c2a60" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b250a3c2db8" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b250a3c1178" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b250a3c14c8" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b250a3bf3f0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a3c0368" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b250a3c0688" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b250a3c09c0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b250a3c0d70" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b250a3bf140" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b250a3c6020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b250a3c7250" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b250a3c75a8" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b250a3c7910" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b250a3c7c60" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b250a3c4898" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b250a3c4020" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a3c6a28" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b250a3c6d48" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b250a3d50d8" loc="114:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b250a3dd1d8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ce4020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b2509ce44d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b250a3d3338" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b250a3d30c8" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b250a3d5918" loc="122:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b250a3dad18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b250a3ddbb0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ce4020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b2509ce44d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b250a3dd940" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ce4020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b2509ce44d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b250a3d9b88" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b250a3d4870" loc="133:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b250a3d3ad0" loc="150:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b250a3d9448" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b250a3d8a48" loc="99:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b250a3d8328" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b250a3d61d8" loc="106:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b250a3d40d8" loc="127:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b250a3dcdd0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ceaa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b2509ce8178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b250a3dcb60" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ceaa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b2509ce8178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b250a3d6990" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b250a3dc3e0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2509ceaa10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b2509ce8178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b250a3da5b8" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b250a3d1640" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a3d13d0" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b250a3b8020" loc="95:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a3b87f8" loc="105:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b250a453c98" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b250a4505c0" loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b250a44ea78" loc="56:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b250a44ca70" loc="73:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b250a44e258" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b250a44c2a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b250a44b360" loc="81:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b250a449020" loc="90:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b250a449810" loc="98:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b250a469020" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b250a445218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b250a46ac60" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b250a445218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b250a46b0d8" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b250a46bb58" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b250a445218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b250a46b8e8" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b250a445218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b250a46a428" loc="70:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b250a445218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b250a4d4c20" loc="62:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b250a540020" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b250a540020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b250a540ac8" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b250a540020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b250a540858" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b250a540020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a58c3f8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a58c3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b250a58c628" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a58c628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b250a58b020" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a58c628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b250a589070" loc="76:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b250a58b838" loc="71:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b250a589760" loc="82:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b250a5690f0" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b250a5690f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b250a569320" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b250a565bd8" loc="109:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b250a568d78" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b250a5652a0" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b250a566cc8" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b250a565020" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b250a566518" loc="88:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b250a5643a0" loc="116:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b250a569de0" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b250a569b70" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a569320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a568628" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b250a592a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf4a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2509cf4e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b250a58ee18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d01100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2509d01508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b250a58fc70" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf9980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2509cf9d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b250a58e678" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf9980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2509cf9d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b250a58e408" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf9980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2509cf9d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b250a5ba828" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d01100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2509d01508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b250a5ba5b8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d01100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2509d01508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b250a58f4c8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf4a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2509cf4e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b250a58f258" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cf4a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2509cf4e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b250a5ad998" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b250a5ab1d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b250a5ad290" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b250a5ab988" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b250a5ae0d8" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cfb118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2509cfb520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b250a5aea88" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cfb118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2509cfb520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b250a5ae818" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509cfb118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2509cfb520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b250a5b8020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a5b8020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b250a5b4738" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b250a5b79d0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b250a5b88d8" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a5b8020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b250a5b6110" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b250a5b3020" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a5b7290" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a5b8020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b250a5b7020" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a5b8020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b250a5b6808" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a5b4020" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b250a59d418" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a59d418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b250a598900" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b250a599a40" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b250a59dcb8" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a59d418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b250a596290" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b250a596020" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b250a596a10" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b250a59a4c0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b250a59cd50" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b250a5981d8" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a59c630" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a59d418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b250a59c3c0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b250a59d418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b250a59abb8" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a599328" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b250a707648" loc="50:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b250a7054d0" loc="60:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b250a707da8" loc="55:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b250a70ae38" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b250a70a880" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b2509fbc020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b250a70abb8" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b2509fbc3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b250a7383e0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d20928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b2509d20d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b250a73a0a8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d0b478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b2509d0b880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b250a73cdc8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d0b478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b2509d0b880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b250a739258" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d16578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b2509d16980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b250a741c18" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d07da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b2509d06228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b250a739c18" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d16578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b2509d16980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b250a7399a8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d16578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b2509d16980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b250a738da0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d20928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b2509d20d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b250a738b30" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d20928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b2509d20d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b250a73dc20" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d09890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b2509d09c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b250a73d470" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d0b478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b2509d0b880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b250a73c640" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d07da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b2509d06228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b250a73c3d0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d07da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b2509d06228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b250a73aa78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d09890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b2509d09c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b250a73a808" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2509d09890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b2509d09c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b250a73fb68" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b250a765648" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b250a7653d8" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b250a767568" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b250a734498" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b250a7337c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b250a733558" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b250a732020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b250a767cb8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b250a734dd0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b250a734b60" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b250a73fb68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b250a732718" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b250a732e00" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b250a8ed640" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a8ed060" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b250a8ed3c0" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b250a8f1950" loc="15:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b250a8ee760" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b250a8ee198" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b2509fd09e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b2509fcd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b250a8ee4e0" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b250a911b60" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b250a911450" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b250a8dd1d8" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b250a8db528" loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b250a8d9020" loc="94:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a8dad60" loc="94:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b250a8dbd40" loc="79:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b250a8ddcc8" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a8dda58" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b250a8d9818" loc="100:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b250a8da5b8" loc="85:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b250a8e4020" loc="71:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b250a8e48d8" loc="81:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b250a8e56c8" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b250a8e5458" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b250a8e3430" loc="91:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b250a8e31c0" loc="91:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b250a8e0020" loc="62:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b250a8e0bc8" loc="69:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250a8e0958" loc="69:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b250a8df640" loc="80:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b250a8df3d0" loc="80:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b250aa22b50" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b250aa225b0" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250aa228d0" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b250aa1d4e0" loc="79:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b250aa1d270" loc="79:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b250aa1c2a0" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b250aa1dc58" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250aa1c020" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b250aa1e258" loc="65:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b250aa1ba38" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b250aa1b160" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250aa1b480" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b250aa1b7a8" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b250aa1ead0" loc="72:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b250aa21358" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b250aa209f8" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b250aa20d18" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b25092fcb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b250aa210c8" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b250aa3ebb8" loc="46:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b250aa3e948" loc="46:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b250aa3b9b0" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b250aa3b3f8" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b250aa3b730" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b250aa68578" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b250aa69738" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b250aa65c08" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250aa65998" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b250aa66c08" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b250aa6c800" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b250aa69020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b250aa69e58" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2509c6a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b250aa68c58" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2509c619b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b250aa66578" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b250aa66308" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b250aa65328" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b25092fc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
