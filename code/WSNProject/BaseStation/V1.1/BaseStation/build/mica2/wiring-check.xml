<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b72100cebc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b720fde4d68"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b720fde4d68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b72100a1640"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b72100cc020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7210194e28"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7210194e28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72101bc020"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b72100c7488"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7210974758"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7210974758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72109f8728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2b72100e0820"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7210971798"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7210971798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7210968460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x2b72100e13c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7210970928"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7210970928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72109c5180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2b72100eb840"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b721096e020"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b721096e020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b72109c4d20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2b72100f31d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b721096ec30"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b721096ec30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b72109c5738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b72100ddcd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7210191db8"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7210191db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b72101bb020"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7210109020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b721018e020"/></to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b721018e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72101ba1c8"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x2b7210109b98"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b721018eb68"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b721018eb68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b72101bad10"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7210108358"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b721018d2a8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b721018d2a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b72101b78c8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x2b7210107060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b721018c020"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b721018c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b72101b8340"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b7210112c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b7210159440"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b7210159440"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b721016dc38"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b7210bd5e40"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b7210bd0ca8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7210b34120"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72109f8110"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7210651dd8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72106406a0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721104f8e8"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7210255708"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721040cc10"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b72100a1c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b720fce8be8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b720fce8be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b720fda7448"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b72100b66a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b720fdec208"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b720fdec208"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b720fdf1298"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72100b6d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b720fdeb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7210cde940"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b720fdeb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7210901020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b720fdeb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72104c2d48"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b720fdf41c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7210094d18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b720fdf0060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72100946e8"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b720fdf1938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721017e020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b720fdf1938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf3720"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf3720"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf7140"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf3720"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf96b0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b720fdf3db0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b720fdeb020"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf96b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b720fe52060"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf96b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b720fe79180"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b720fdfc388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b720feabaf0"/></to>
    </wire>
    <wire loc="141:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b720feabaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff21740"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b720fdf54f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b720fdf3db0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x2b720fe50700"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b720fea9e00"/></to>
    </wire>
    <wire loc="143:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b720fea9e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff31a50"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x2b720fe4c958"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b720fec27e0"/></to>
    </wire>
    <wire loc="168:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b720fec27e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff53430"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x2b720fe59ae0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b720fec0af0"/></to>
    </wire>
    <wire loc="170:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b720fec0af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff51740"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x2b720fe58c70"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b720febfc78"/></to>
    </wire>
    <wire loc="171:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b720febfc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff508c8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x2b720fe789e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b720fea5348"/></to>
    </wire>
    <wire loc="147:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b720fea5348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff3ad60"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x2b720fe77c80"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b720feb3658"/></to>
    </wire>
    <wire loc="149:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b720feb3658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff37020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x2b720fe7fe08"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b720fea44d0"/></to>
    </wire>
    <wire loc="148:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b720fea44d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff39e18"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x2b720fe7d020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b720feafe00"/></to>
    </wire>
    <wire loc="153:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b720feafe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff325b8"/></to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b720fecf7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b720ffb8970"/></to>
    </wire>
    <wire loc="165:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b720fec5348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff56020"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff56020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e7e480"/></to>
    </wire>
    <wire loc="176:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b720fecc348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff5ad60"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff5ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f00480"/></to>
    </wire>
    <wire loc="185:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b720fed4020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff735b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff735b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f3a480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff31a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d47480"/></to>
    </wire>
    <wire loc="183:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b720fec6c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff752a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff752a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f40480"/></to>
    </wire>
    <wire loc="146:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b720fea61a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff29bd0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff29bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dd13e0"/></to>
    </wire>
    <wire loc="157:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b720febc348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff3d740"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff3d740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dfb480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff53430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e74480"/></to>
    </wire>
    <wire loc="179:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b720fec97e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff6a120"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff6a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210ef6480"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b720fe9e658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff242a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff242a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d57480"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff37020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dc7480"/></to>
    </wire>
    <wire loc="160:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b720feb87e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff4dbd8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff4dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e3d480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff508c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210eb9480"/></to>
    </wire>
    <wire loc="188:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b720fed14d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff6fa50"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff6fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f82480"/></to>
    </wire>
    <wire loc="194:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b720fedd1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b720ffbf020"/></to>
    </wire>
    <wire loc="174:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b720fece020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff5ca50"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff5ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f06480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff21740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d4d480"/></to>
    </wire>
    <wire loc="152:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b720feb0c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff33430"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff33430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dbe480"/></to>
    </wire>
    <wire loc="192:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b720fee0e00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b720ffb3ab0"/></to>
    </wire>
    <wire loc="155:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b720fead020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff3f500"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff3f500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e013e0"/></to>
    </wire>
    <wire loc="166:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b720fec44d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff55120"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff55120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e7b480"/></to>
    </wire>
    <wire loc="177:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b720fecb4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff59e18"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff59e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210efc480"/></to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b720fed31a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff72740"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff72740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f37480"/></to>
    </wire>
    <wire loc="144:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b720fea7020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff30bd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff30bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d44480"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff3ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dce480"/></to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b720feba4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff3b8c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff3b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e43480"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b720fec1968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff525b8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff525b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e71480"/></to>
    </wire>
    <wire loc="180:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b720fec8968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff692a8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff692a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210ef3480"/></to>
    </wire>
    <wire loc="139:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b720fe9d7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff23430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff23430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d53480"/></to>
    </wire>
    <wire loc="150:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b720feb27e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff36120"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff36120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dc4480"/></to>
    </wire>
    <wire loc="161:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b720feb7968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b720ff4cd60"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff4cd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e3a480"/></to>
    </wire>
    <wire loc="189:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b720fed0658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff6ebd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff6ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f7f480"/></to>
    </wire>
    <wire loc="164:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b720feb5c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff58e40"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff58e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e813e0"/></to>
    </wire>
    <wire loc="175:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b720fecd1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff5bbd8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff5bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f03480"/></to>
    </wire>
    <wire loc="184:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b720fed6e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b720ff74430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff74430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f3d480"/></to>
    </wire>
    <wire loc="195:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b720fedc348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b720ffd0180"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b720feaac78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff208c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff208c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d4a480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff325b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dbb480"/></to>
    </wire>
    <wire loc="182:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b720fec7af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff761e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff761e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f433e0"/></to>
    </wire>
    <wire loc="156:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b720feac1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b720ff3e5b8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b720ff3e5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dfe480"/></to>
    </wire>
    <wire loc="167:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b720fec3658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff542a8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff542a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e78480"/></to>
    </wire>
    <wire loc="178:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b720feca658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff6b020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff6b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210ef9480"/></to>
    </wire>
    <wire loc="187:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b720fed2348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff718c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff718c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f85480"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b720fe9f410"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff251e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff251e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d5a3e0"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b720ff39e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dcb480"/></to>
    </wire>
    <wire loc="159:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b720feb9658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b720ff4ea50"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b720ff4ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e40480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b720ff51740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e6e480"/></to>
    </wire>
    <wire loc="193:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b720fede020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b720ffc5c38"/></to>
    </wire>
    <wire loc="173:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b720febee00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b720ff5d930"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b720ff5d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210f093e0"/></to>
    </wire>
    <wire loc="162:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b720feb6af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b720ff4be18"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b720ff4be18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210e37480"/></to>
    </wire>
    <wire loc="140:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b720fe9c968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b720ff225b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b720ff225b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210d50480"/></to>
    </wire>
    <wire loc="151:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b720feb1af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b720ff352a8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b720ff352a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7210dc1480"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fda52b0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b720fdae758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b720fdca660"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b720fdc52b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7210713268"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x2b721010dd28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x2b721010cb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b721017e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721016d670"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b721016b3b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b721016eaf8"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b721016eaf8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b720fe9d7e0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b721016a648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b7210181ca8"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b7210181ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b720fe9e658"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b72101697d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b7210180e30"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b7210180e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b720fe9f410"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72101bc020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72101d8ce8"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b72101bb020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b72101d7718"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b72101bad10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b72101d5498"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b72101b78c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7210212a10"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b72101afe48"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b72101b4218"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b72101b4218"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b7210225060"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b72101a5848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b72101c6830"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b72101c6830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b72102291a0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b72101ba1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72101d6928"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721018a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72101b6658"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72101b6658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721022b1d0"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b72101b8340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b72101d5a88"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210189020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72101ca130"/></to>
    </wire>
    <wire loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72101ca130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210221020"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72101d8ce8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7210255d20"/></to>
    </wire>
    <wire loc="133:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210221020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210302130"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7210212a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b721030a888"/></to>
    </wire>
    <wire loc="132:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b7210225060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b7210306218"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b72101bfd18"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b721023aac8"/></to>
    </wire>
    <wire loc="134:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b721023aac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b721031fbd0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b72102291a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b72102537f0"/></to>
    </wire>
    <wire loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721022b1d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7210308e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72101b27b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b721022bb30"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b721022bb30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72103077b8"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b72101e46e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b72102137b0"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b72102137b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b721030b5a8"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b72101d14e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7210212438"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7210212438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b721030a2b0"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b72101d0cd8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b721080d6f0"/></to>
    </wire>
    <wire loc="88:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b72101d1b38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7210212a10"/></to>
    </wire>
    <wire loc="101:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x2b721022ac30"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x2b72102547f0"/></to>
    </wire>
    <wire loc="102:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x2b72102269a8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x2b7210253020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b7210275770"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b7210449620"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b7210270df0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b7210643208"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b7210643208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b721063e080"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b7210274080"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b72104362f0"/></to>
    </wire>
    <wire loc="110:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x2b7210284c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7210641a60"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210641a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b72106563c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x2b72102629d8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x2b72103095d8"/></to>
    </wire>
    <wire loc="112:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x2b72102523e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721030c818"/></to>
    </wire>
    <wire loc="113:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x2b721024d540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b721030ce18"/></to>
    </wire>
    <wire loc="115:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b721031e828"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b7210449620"/></to>
    </wire>
    <wire loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b721031c3e8"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b721049c908"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b721049c908"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b720fe81630"/></to>
    </wire>
    <wire loc="117:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b7210319cf0"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b721080d6f0"/></to>
    </wire>
    <wire loc="118:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x2b721031a2a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b721040a6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b721031b788"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b72104362f0"/></to>
    </wire>
    <wire loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b7210279e80"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b721040a6d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b721027b808"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b721040a6d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b7210294060"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b721040a6d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x2b7210293a48"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x2b72104071d8"/></to>
    </wire>
    <wire loc="125:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b721027d748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b721082f568"/></to>
    </wire>
    <wire loc="127:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x2b72104064b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x2b721049e4e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x2b721049e4e0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b7210621680"/></to>
    </wire>
    <wire loc="128:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7210401620"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x2b721049db80"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b721049db80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7210497980"/></to>
    </wire>
    <wire loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x2b7210447118"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b721049bbf8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x2b721049bbf8"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b720fe4d130"/></to>
    </wire>
    <wire loc="130:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b7210447e48"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b721082f568"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b721095ae48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210820638"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210820638"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210942c50"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b7210313660"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7210821c38"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b7210316870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7210676c48"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7210676c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b72107f2128"/></to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x2b721028d508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x2b72102b2d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x2b72102bc190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x2b72102b7770"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x2b72103783f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x2b72103ac020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b7210621680"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b72104af620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7210497980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b72104aaaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b7210620c70"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x2b720fe5ac08"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b72104ad208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b7210620c70"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72104cc890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b721061f578"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b72104b0a00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b7210617680"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b72104af620"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b72105e5428"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7210629720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b72104ac050"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b72105e29a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b72104ad208"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b721062a060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b72105e76a0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72105e4b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72104c8cb8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72104c8cb8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72104be488"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b72104c39b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b72104bede0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b72104aaaf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b72105b5840"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b72105b5840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b721104c060"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72105b23c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72104cc890"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b72104d5940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b721051b020"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b721051b020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b72105151e8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b72104e2d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b720fdf41c8"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b72105da060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b72104bcc10"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105dad18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105b4dd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105b4dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b721104b4c0"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b7210513640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b720fdc7a80"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b72105b4698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b721104cd58"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72105b39d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b721104a0e0"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b721104a980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72105b23c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b7211049130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b721104e020"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b72110462e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b721106e020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b72105da060"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b721106e740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b72105da780"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b721106ecd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105dad18"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b721106d908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72105f0908"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b72105fe4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b72106461a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b721063f020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7210647310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72106406a0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b72106563c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b721064db18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b721064db18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72107ce5e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7210651dd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72106702c0"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b72106702c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b721077c1f0"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b72107fc858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72107b3ab0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b72107aec70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7210668ac8"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7210668ac8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b721077c998"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72107e9330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b721068de40"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b721068de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210778a90"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210778a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72110a7020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b721077c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72110ac600"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b721077c998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b72110acda8"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b72110a4168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72106fede8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b72106fede8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b721071d0f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b721109f020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b72106f6020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b72106f6020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210718160"/></to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b721109e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b72106f5020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72106f5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7210717190"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b721109a0a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b72106f1228"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b72106f1228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b7210713968"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b72107aacf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b72107f7930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b721095fe20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72108503a0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72108503a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72109255a8"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b72109136f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b721084a098"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b721084a098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b721085e020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210844140"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210859020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b7210869b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b7210858680"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72108669c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b7210854e60"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72108669c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b72108852b8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72108669c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b7210881698"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b721087da48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b72106f6020"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210901740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b721084a098"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210955e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b72106563c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72109f8728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72109efd00"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721096c348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72109c3908"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b72109f8110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72109ef6e8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b72109f48f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b721096cc80"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b72109c2308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b72109f6208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b72109c1020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72109f7760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b72109f4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b7210d042b8"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b72109f6208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7210af3020"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b72109f7760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7210af4868"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b7210af3db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b72109f4020"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b72109e5bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b72109f48f8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b7210b31a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b72109f48f8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b7210b28420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b72109f48f8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b7210af26c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b72109e3b48"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b7210b31020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b72109e7898"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b72109ddb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b7210b2cb38"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b7210a18398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b7210b2b8b8"/></to>
    </wire>
    <wire loc="48:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b7210b2b8b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b7210b41340"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b7210b1c448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b7210b430c0"/></to>
    </wire>
    <wire loc="49:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b7210b430c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b7210b3b310"/></to>
    </wire>
    <wire loc="332:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b7210a3f830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b72109fcd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b7210a41020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b7210a3b918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b7210b2e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b7210b2e8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b7210b3c290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b7210b41af8"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b7210b41af8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b7210b34e58"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b7210b3b310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b7210b765f8"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b7210b41340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b7210b346f8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210b3a598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210c37020"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210c37020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210ccb610"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210b73c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210b3a598"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b7210b755f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7210b97700"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7210b97700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7210bd2580"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b7210b75d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b7210b96020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b7210b96020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b7210bd2e18"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b7210b745c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b7210b96860"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b7210b96860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b7210bd16d8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b7210bd6020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b7210bce550"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7210b95e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7210bcf3e0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7210b946f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7210bcfc78"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7210bcdae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b720fdf41c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b7210bcc7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b720fdc7a80"/></to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b7210d107f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210c35d38"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7210c35d38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7210cd6950"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210cd4a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7210c2f9a8"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210c2f9a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7210c1dca8"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210c28aa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210c5bc90"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b7210c26190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b7210c58350"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7210c21020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b7210c55c48"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7210c21020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b7210c4f020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7210c21020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b7210c4c360"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7210cdd098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7210c2f9a8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rahul/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rahul/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b721068cc50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b720fda0720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b720fda0720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b720fd9f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TThree" ref="0x2b720fda0aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TThree" ref="0x2b720fda0aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b720fd9f470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b720fed8568" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b720fed88b0" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b720fed8bf8" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b720fef0e08" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b720feed198" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b720feed500" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b720feed830" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b720ff7a020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b720ff7a388" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b720ff7a6f0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b720ff7aa20" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b721055cb08" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b7210549748" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b721057f5c0" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b72106161d0" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b72106161d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b721068cc50" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b721068cc50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b7210688020" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b721067e410" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b721067e410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b721067e700" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7210671c60" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7210671c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72107a8cd0" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72107a8cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b72107a4020" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72107f49f8" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72107f49f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b7210903e50" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7210903e50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b72109001e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b7210904740" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b7210904740"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b7210924020" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7210924020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b7210941550" loc="55:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b7210941550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b7210941cb8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b7210941cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b72109400a8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b72109400a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b7210940820" loc="58:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b7210940820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b7210940bc8" loc="59:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b721093e380" loc="60:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b721093e380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/rahul/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b720fded1b0" loc="58:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b720fded1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fded500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b720fde4d68" loc="57:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b720fde4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b720fde30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b720fdeb020" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b720fdeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdeb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b720fdec208" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b720fdec208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdec558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b720fdf41c8" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b720fdf41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b720fdf4518"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b720fdf46a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b720fdf4828"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b720fdf49b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b720fdf4b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b720fdf1938" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b720fdf1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf1c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b720fdf1298" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b720fdf1298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf15e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b720fdf0060" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b720fdf0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b720fdf3db0" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b720fdf3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdfa170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b720fdf3720" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf3a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b720fdf54f8" loc="19:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b720fdf54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf5848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b720fdfc388" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b720fdfc388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fdfc6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fdfc860"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fdfc9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fdfcb70"/>
        <function-ref name="get" scoped="" ref="0x2b720fdfccf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fdfce80"/>
        <function-ref name="set" scoped="" ref="0x2b720fdf5030"/>
        <function-ref name="clr" scoped="" ref="0x2b720fdf51b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b720fdf7140" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf7490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b720fdf96b0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b720fdf96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fdf9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x2b720fe59ae0" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x2b720fe59ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe59e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe58020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe581a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe58330"/>
        <function-ref name="get" scoped="" ref="0x2b720fe584b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe58640"/>
        <function-ref name="set" scoped="" ref="0x2b720fe587c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe58950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x2b720fe50700" loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x2b720fe50700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe50a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe50bd8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe50d60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe4c020"/>
        <function-ref name="get" scoped="" ref="0x2b720fe4c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe4c330"/>
        <function-ref name="set" scoped="" ref="0x2b720fe4c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe4c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x2b720fe5ac08" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x2b720fe5ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b720fe50020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b720fe501a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b720fe50330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x2b720fe4c958" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x2b720fe4c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe4cca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe4ce30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe59020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe591a8"/>
        <function-ref name="get" scoped="" ref="0x2b720fe59330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe594b8"/>
        <function-ref name="set" scoped="" ref="0x2b720fe59640"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b720fe52060" loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b720fe52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fe523b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x2b720fe58c70" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x2b720fe58c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe57020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe571a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe57330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe574b8"/>
        <function-ref name="get" scoped="" ref="0x2b720fe57640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe577c8"/>
        <function-ref name="set" scoped="" ref="0x2b720fe57950"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe57ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b720fe4d130" loc="55:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b720fe4d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fe4d480"/>
        <function-ref name="read" scoped="" ref="0x2b720fe4d608"/>
        <function-ref name="write" scoped="" ref="0x2b720fe4d790"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b720fe4d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b720fe81630" loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b720fe81630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b720fe81980"/>
        <function-ref name="initSlave" scoped="" ref="0x2b720fe81b08"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b720fe81c90"/>
        <function-ref name="writeByte" scoped="" ref="0x2b720fe81e18"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b720fe78020"/>
        <function-ref name="txMode" scoped="" ref="0x2b720fe781a8"/>
        <function-ref name="readByte" scoped="" ref="0x2b720fe78330"/>
        <function-ref name="rxMode" scoped="" ref="0x2b720fe784b8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b720fe78640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x2b720fe789e8" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x2b720fe789e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe78d38"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe77020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe77330"/>
        <function-ref name="get" scoped="" ref="0x2b720fe774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe77640"/>
        <function-ref name="set" scoped="" ref="0x2b720fe777c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b720fe79180" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b720fe79180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fe794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x2b720fe77c80" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x2b720fe77c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe7f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe7f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe7f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe7f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720fe7f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe7f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720fe7f950"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe7fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x2b720fe7fe08" loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x2b720fe7fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe7e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe7e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe7e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe7e640"/>
        <function-ref name="get" scoped="" ref="0x2b720fe7e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe7e950"/>
        <function-ref name="set" scoped="" ref="0x2b720fe7ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe7ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x2b720fe7d020" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x2b720fe7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe7d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe7d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe7d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe7d808"/>
        <function-ref name="get" scoped="" ref="0x2b720fe7d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe7db18"/>
        <function-ref name="set" scoped="" ref="0x2b720fe7dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe7de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b720fecf7e0" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b720fecf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fee0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fee01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fee0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fee04b8"/>
        <function-ref name="get" scoped="" ref="0x2b720fee0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fee07c8"/>
        <function-ref name="set" scoped="" ref="0x2b720fee0950"/>
        <function-ref name="clr" scoped="" ref="0x2b720fee0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b720fec5348" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b720fec5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec5698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec5820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec5b30"/>
        <function-ref name="get" scoped="" ref="0x2b720fec5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec5e40"/>
        <function-ref name="set" scoped="" ref="0x2b720fec4020"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b720fecc348" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b720fecc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fecc698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fecc820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fecc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feccb30"/>
        <function-ref name="get" scoped="" ref="0x2b720fecccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fecce40"/>
        <function-ref name="set" scoped="" ref="0x2b720fecb020"/>
        <function-ref name="clr" scoped="" ref="0x2b720fecb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b720fed4020" loc="94:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b720fed4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed4808"/>
        <function-ref name="get" scoped="" ref="0x2b720fed4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed4b18"/>
        <function-ref name="set" scoped="" ref="0x2b720fed4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b720fea9e00" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b720fea9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea8640"/>
        <function-ref name="get" scoped="" ref="0x2b720fea87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fea8950"/>
        <function-ref name="set" scoped="" ref="0x2b720fea8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fea8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b720fec6c78" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b720fec6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed64b8"/>
        <function-ref name="get" scoped="" ref="0x2b720fed6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed67c8"/>
        <function-ref name="set" scoped="" ref="0x2b720fed6950"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b720fea61a0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b720fea61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea64f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea6678"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea6800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea6988"/>
        <function-ref name="get" scoped="" ref="0x2b720fea6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fea6c98"/>
        <function-ref name="set" scoped="" ref="0x2b720fea6e20"/>
        <function-ref name="clr" scoped="" ref="0x2b720fea5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b720febc348" loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b720febc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720febc698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720febc820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720febc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720febcb30"/>
        <function-ref name="get" scoped="" ref="0x2b720febccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720febce40"/>
        <function-ref name="set" scoped="" ref="0x2b720feba020"/>
        <function-ref name="clr" scoped="" ref="0x2b720feba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b720fec27e0" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b720fec27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec1020"/>
        <function-ref name="get" scoped="" ref="0x2b720fec11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec1330"/>
        <function-ref name="set" scoped="" ref="0x2b720fec14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b720fec97e0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b720fec97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec9b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec8020"/>
        <function-ref name="get" scoped="" ref="0x2b720fec81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec8330"/>
        <function-ref name="set" scoped="" ref="0x2b720fec84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b720fe9e658" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b720fe9e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe9e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe9eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe9ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe9ee40"/>
        <function-ref name="get" scoped="" ref="0x2b720fe9d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe9d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b720fe9d330"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe9d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b720feb3658" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b720feb3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb3e40"/>
        <function-ref name="get" scoped="" ref="0x2b720feb2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb21a8"/>
        <function-ref name="set" scoped="" ref="0x2b720feb2330"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b720feb87e0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b720feb87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb7020"/>
        <function-ref name="get" scoped="" ref="0x2b720feb71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb7330"/>
        <function-ref name="set" scoped="" ref="0x2b720feb74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b720febfc78" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b720febfc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720febe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720febe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720febe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720febe4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720febe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720febe7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720febe950"/>
        <function-ref name="clr" scoped="" ref="0x2b720febead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b720fed14d0" loc="97:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b720fed14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed1820"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed1cb8"/>
        <function-ref name="get" scoped="" ref="0x2b720fed1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed0020"/>
        <function-ref name="set" scoped="" ref="0x2b720fed01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b720fedd1a0" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b720fedd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fedd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fedd678"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fedd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fedd988"/>
        <function-ref name="get" scoped="" ref="0x2b720feddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feddc98"/>
        <function-ref name="set" scoped="" ref="0x2b720fedde20"/>
        <function-ref name="clr" scoped="" ref="0x2b720fedc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b720fece020" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b720fece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fece370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fece4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fece680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fece808"/>
        <function-ref name="get" scoped="" ref="0x2b720fece990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feceb18"/>
        <function-ref name="set" scoped="" ref="0x2b720fececa0"/>
        <function-ref name="clr" scoped="" ref="0x2b720fecee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b720feabaf0" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b720feabaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feabe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feaa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feaa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feaa330"/>
        <function-ref name="get" scoped="" ref="0x2b720feaa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feaa640"/>
        <function-ref name="set" scoped="" ref="0x2b720feaa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feaa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b720feb0c78" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b720feb0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feaf020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feaf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feaf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feaf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720feaf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feaf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720feaf950"/>
        <function-ref name="clr" scoped="" ref="0x2b720feafad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b720fee0e00" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b720fee0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fedf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fedf330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fedf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fedf640"/>
        <function-ref name="get" scoped="" ref="0x2b720fedf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fedf950"/>
        <function-ref name="set" scoped="" ref="0x2b720fedfad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fedfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b720fead020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b720fead020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fead370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fead4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fead680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fead808"/>
        <function-ref name="get" scoped="" ref="0x2b720fead990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feadb18"/>
        <function-ref name="set" scoped="" ref="0x2b720feadca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720feade28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b720fec44d0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b720fec44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec4820"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec4cb8"/>
        <function-ref name="get" scoped="" ref="0x2b720fec4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec3020"/>
        <function-ref name="set" scoped="" ref="0x2b720fec31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b720fecb4d0" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b720fecb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fecb820"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fecb9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fecbb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fecbcb8"/>
        <function-ref name="get" scoped="" ref="0x2b720fecbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feca020"/>
        <function-ref name="set" scoped="" ref="0x2b720feca1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b720fed31a0" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b720fed31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed34f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed3678"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed3800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed3988"/>
        <function-ref name="get" scoped="" ref="0x2b720fed3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed3c98"/>
        <function-ref name="set" scoped="" ref="0x2b720fed3e20"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b720fea7020" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b720fea7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea7808"/>
        <function-ref name="get" scoped="" ref="0x2b720fea7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fea7b18"/>
        <function-ref name="set" scoped="" ref="0x2b720fea7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720fea7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b720fea5348" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b720fea5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea5698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea5820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea5b30"/>
        <function-ref name="get" scoped="" ref="0x2b720fea5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fea5e40"/>
        <function-ref name="set" scoped="" ref="0x2b720fea4020"/>
        <function-ref name="clr" scoped="" ref="0x2b720fea41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b720feba4d0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b720feba4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feba820"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feba9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720febab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720febacb8"/>
        <function-ref name="get" scoped="" ref="0x2b720febae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb9020"/>
        <function-ref name="set" scoped="" ref="0x2b720feb91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b720fec1968" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b720fec1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec1e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec01a8"/>
        <function-ref name="get" scoped="" ref="0x2b720fec0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec04b8"/>
        <function-ref name="set" scoped="" ref="0x2b720fec0640"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b720fec8968" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b720fec8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec8cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec8e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec71a8"/>
        <function-ref name="get" scoped="" ref="0x2b720fec7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec74b8"/>
        <function-ref name="set" scoped="" ref="0x2b720fec7640"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b720fe9d7e0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b720fe9d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe9db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe9dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe9de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe9c020"/>
        <function-ref name="get" scoped="" ref="0x2b720fe9c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe9c330"/>
        <function-ref name="set" scoped="" ref="0x2b720fe9c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe9c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b720feb27e0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b720feb27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb2c30"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb2db8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb11a8"/>
        <function-ref name="get" scoped="" ref="0x2b720feb1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb14b8"/>
        <function-ref name="set" scoped="" ref="0x2b720feb1640"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b720feb7968" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b720feb7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb61a8"/>
        <function-ref name="get" scoped="" ref="0x2b720feb6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb64b8"/>
        <function-ref name="set" scoped="" ref="0x2b720feb6640"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b720fed0658" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b720fed0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed0e40"/>
        <function-ref name="get" scoped="" ref="0x2b720fecf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fecf1a8"/>
        <function-ref name="set" scoped="" ref="0x2b720fecf330"/>
        <function-ref name="clr" scoped="" ref="0x2b720fecf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b720feb5c78" loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b720feb5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb43e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb4570"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb46f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb4880"/>
        <function-ref name="get" scoped="" ref="0x2b720feb4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb4b90"/>
        <function-ref name="set" scoped="" ref="0x2b720feb4d18"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b720fecd1a0" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b720fecd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fecd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fecd678"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fecd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fecd988"/>
        <function-ref name="get" scoped="" ref="0x2b720fecdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fecdc98"/>
        <function-ref name="set" scoped="" ref="0x2b720fecde20"/>
        <function-ref name="clr" scoped="" ref="0x2b720fecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b720fed6e00" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b720fed6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed5640"/>
        <function-ref name="get" scoped="" ref="0x2b720fed57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed5950"/>
        <function-ref name="set" scoped="" ref="0x2b720fed5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b720fedc348" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b720fedc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fedc698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fedc820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fedc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fedcb30"/>
        <function-ref name="get" scoped="" ref="0x2b720fedccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fedce40"/>
        <function-ref name="set" scoped="" ref="0x2b720fedb020"/>
        <function-ref name="clr" scoped="" ref="0x2b720fedb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b720feaac78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b720feaac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea94b8"/>
        <function-ref name="get" scoped="" ref="0x2b720fea9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fea97c8"/>
        <function-ref name="set" scoped="" ref="0x2b720fea9950"/>
        <function-ref name="clr" scoped="" ref="0x2b720fea9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b720feafe00" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b720feafe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feae1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feae330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feae4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feae640"/>
        <function-ref name="get" scoped="" ref="0x2b720feae7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feae950"/>
        <function-ref name="set" scoped="" ref="0x2b720feaead8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feaec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b720fec7af0" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b720fec7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec7e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec6330"/>
        <function-ref name="get" scoped="" ref="0x2b720fec64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec6640"/>
        <function-ref name="set" scoped="" ref="0x2b720fec67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b720feac1a0" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b720feac1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feac4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feac678"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feac800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feac988"/>
        <function-ref name="get" scoped="" ref="0x2b720feacb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feacc98"/>
        <function-ref name="set" scoped="" ref="0x2b720feace20"/>
        <function-ref name="clr" scoped="" ref="0x2b720febc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b720fec3658" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b720fec3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fec3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fec3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fec3e40"/>
        <function-ref name="get" scoped="" ref="0x2b720fec2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec21a8"/>
        <function-ref name="set" scoped="" ref="0x2b720fec2330"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b720feca658" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b720feca658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feca9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fecab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fecacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fecae40"/>
        <function-ref name="get" scoped="" ref="0x2b720fec9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fec91a8"/>
        <function-ref name="set" scoped="" ref="0x2b720fec9330"/>
        <function-ref name="clr" scoped="" ref="0x2b720fec94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b720fed2348" loc="96:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b720fed2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fed2698"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fed2820"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fed29a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fed2b30"/>
        <function-ref name="get" scoped="" ref="0x2b720fed2cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fed2e40"/>
        <function-ref name="set" scoped="" ref="0x2b720fed1020"/>
        <function-ref name="clr" scoped="" ref="0x2b720fed11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b720fe9f410" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b720fe9f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe9f760"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe9f8e8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fe9fa70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fe9fbf8"/>
        <function-ref name="get" scoped="" ref="0x2b720fe9fd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fe9e020"/>
        <function-ref name="set" scoped="" ref="0x2b720fe9e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720fe9e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b720fea44d0" loc="57:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b720fea44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fea4820"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fea49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fea4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fea4cb8"/>
        <function-ref name="get" scoped="" ref="0x2b720fea4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb3020"/>
        <function-ref name="set" scoped="" ref="0x2b720feb31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b720feb9658" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b720feb9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb9e40"/>
        <function-ref name="get" scoped="" ref="0x2b720feb8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb81a8"/>
        <function-ref name="set" scoped="" ref="0x2b720feb8330"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b720fec0af0" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b720fec0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fec0e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b720febf020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720febf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720febf330"/>
        <function-ref name="get" scoped="" ref="0x2b720febf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720febf640"/>
        <function-ref name="set" scoped="" ref="0x2b720febf7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720febf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b720fede020" loc="102:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b720fede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fede370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fede4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720fede680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720fede808"/>
        <function-ref name="get" scoped="" ref="0x2b720fede990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720fedeb18"/>
        <function-ref name="set" scoped="" ref="0x2b720fedeca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720fedee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b720febee00" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b720febee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720febd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720febd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720febd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720febd640"/>
        <function-ref name="get" scoped="" ref="0x2b720febd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720febd950"/>
        <function-ref name="set" scoped="" ref="0x2b720febdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720febdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b720feb6af0" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b720feb6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb5330"/>
        <function-ref name="get" scoped="" ref="0x2b720feb54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb5640"/>
        <function-ref name="set" scoped="" ref="0x2b720feb57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b720fe9c968" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b720fe9c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720fe9ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720fe9ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feab020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feab1a8"/>
        <function-ref name="get" scoped="" ref="0x2b720feab330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feab4b8"/>
        <function-ref name="set" scoped="" ref="0x2b720feab640"/>
        <function-ref name="clr" scoped="" ref="0x2b720feab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b720feb1af0" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b720feb1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720feb1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b720feb0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720feb01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720feb0330"/>
        <function-ref name="get" scoped="" ref="0x2b720feb04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720feb0640"/>
        <function-ref name="set" scoped="" ref="0x2b720feb07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720feb0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff23430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff23430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff23780"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff23908"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff23a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff23c18"/>
        <function-ref name="get" scoped="" ref="0x2b720ff23da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff22020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff221a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff208c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff208c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff20c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff20da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff31020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff311a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff31330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff314b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff31640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff251e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff251e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff25538"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff256c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff25848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff259d0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff25b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff25ce0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff25e68"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff225b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff225b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff22908"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff22a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff22c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff22da0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff21020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff211a8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff21330"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff31a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff31a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff31da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff30020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff301a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff30330"/>
        <function-ref name="get" scoped="" ref="0x2b720ff304b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff30640"/>
        <function-ref name="set" scoped="" ref="0x2b720ff307c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff30950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff242a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff242a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff245f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff24780"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff24908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff24a90"/>
        <function-ref name="get" scoped="" ref="0x2b720ff24c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff24da0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff23020"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff21740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff21740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff21a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff21c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff21da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff20020"/>
        <function-ref name="get" scoped="" ref="0x2b720ff201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff20330"/>
        <function-ref name="set" scoped="" ref="0x2b720ff204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff30bd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff30bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff2f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff2f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff2f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff2f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff2f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff2f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff2f950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff2fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d5a3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d5a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d5a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d5a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d5aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d5abc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210d5ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d59020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d591a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d59330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d57480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d577d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d57958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d57ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d57c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d57df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d55020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d551a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d55330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d53480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d537d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d53958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d53ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d53c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d53df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d52020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d521a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d50480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d50480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d507d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d50958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d50ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d50c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d50df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d4f020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d4f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d4f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d4d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d4d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d4d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d4d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d4dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d4dc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d4ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d4c020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d4c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d4a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d4a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d4a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d4aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d4ac68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d4adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d49020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d491a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d47480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d47480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d477d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d47958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d47ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d47c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d47df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d46020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d461a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d46330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210d44480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210d44480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210d447d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210d44958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210d44ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210d44c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210d44df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210d43020"/>
        <function-ref name="set" scoped="" ref="0x2b7210d431a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210d43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff39e18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff39e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff381a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff38330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff38640"/>
        <function-ref name="get" scoped="" ref="0x2b720ff387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff38950"/>
        <function-ref name="set" scoped="" ref="0x2b720ff38ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff38c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff352a8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff352a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff355f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff35780"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff35908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff35a90"/>
        <function-ref name="get" scoped="" ref="0x2b720ff35c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff35da0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff33020"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff29bd0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff29bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff3a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff3a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff3a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff3a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff3a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff3a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff3a950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff3aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff37020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff37370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff374f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff37680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff37808"/>
        <function-ref name="get" scoped="" ref="0x2b720ff37990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff37b18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff37ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff37e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff33430" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff33430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff33780"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff33908"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff33a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff33c18"/>
        <function-ref name="get" scoped="" ref="0x2b720ff33da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff32020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff3ad60" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff3ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff390d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff39260"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff393e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff39570"/>
        <function-ref name="get" scoped="" ref="0x2b720ff396f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff39880"/>
        <function-ref name="set" scoped="" ref="0x2b720ff39a08"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff36120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff36120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff36470"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff365f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff36780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff36908"/>
        <function-ref name="get" scoped="" ref="0x2b720ff36a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff36c18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff36da0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff325b8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff32908"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff32a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff32c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff32da0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff44020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff441a8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff44330"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dd13e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dd13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dd1730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dd18b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dd1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dd1bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210dd1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dd0020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dd01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dd0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dce480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dce7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dce958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dceae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dcec68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dcedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dcd020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dcd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dcd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dcb480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dcb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dcb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dcb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dcbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dcbc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dcbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dc9020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dc7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dc7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dc77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dc7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dc7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dc7c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dc7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dc6020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dc61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dc6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dc4480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dc4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dc47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dc4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dc4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dc4c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dc4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dc3020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dc31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dc3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dc1480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dc1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dc17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dc1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dc1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dc1c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dc1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dc0020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dc01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dc0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dbe480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dbe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dbe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dbe958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dbeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dbec68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dbedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dbd020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dbd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dbd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dbb480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dbb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dbb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dbb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dbbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dbbc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dbbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dba020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dba1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff3d740" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff3da90"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff3dc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff3dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff3b020"/>
        <function-ref name="get" scoped="" ref="0x2b720ff3b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff3b330"/>
        <function-ref name="set" scoped="" ref="0x2b720ff3b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff3b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff4dbd8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff4dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff4c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff4c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4c950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff3f500" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff3f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff3f850"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff3f9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff3fb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff3fce8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff3fe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff3e020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff3b8c8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff3b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff3bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff3bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4e640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff4cd60" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff4cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff4b0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff4b260"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4b570"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4b6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4b880"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4ba08"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff3e5b8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff3e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff3e908"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff3ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff3ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff3eda0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff3d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff3d330"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff3d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff4ea50" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff4ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff4eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff4d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4d330"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4d640"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff4be18" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff4be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff4a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff4a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4a640"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4a950"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e013e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e013e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e01730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e018b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e01a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e01bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210e01d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e00020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e001a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dfe480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dfe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dfe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dfe958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dfeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dfec68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dfedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210dfd020"/>
        <function-ref name="set" scoped="" ref="0x2b7210dfd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210dfd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210dfb480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210dfb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210dfb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210dfb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210dfbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210dfbc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210dfbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210df9020"/>
        <function-ref name="set" scoped="" ref="0x2b7210df91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210df9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e43480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e43480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e437d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e43958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e43ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e43c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e43df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e42020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e40480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e407d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e40958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e40ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e40c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e40df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e3f020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e3f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e3d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e3d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e3d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e3d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e3dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e3dc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e3ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e3c020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e3c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e3a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e3a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e3a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e3aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e3ac68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e3adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e39020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e391a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e39330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e37480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e377d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e37958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e37ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e37c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e37df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e36020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff55120" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff55120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff55470"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff555f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff55780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff55908"/>
        <function-ref name="get" scoped="" ref="0x2b720ff55a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff55c18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff55da0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff525b8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff525b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff52908"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff52a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff52c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff52da0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff51020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff511a8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff51330"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff58e40" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff58e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff571c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff57348"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff574d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff57658"/>
        <function-ref name="get" scoped="" ref="0x2b720ff577e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff57968"/>
        <function-ref name="set" scoped="" ref="0x2b720ff57af0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff57c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff542a8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff542a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff545f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff54780"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff54908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff54a90"/>
        <function-ref name="get" scoped="" ref="0x2b720ff54c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff54da0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff53020"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff51740" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff51740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff51a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff51c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff51da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff50020"/>
        <function-ref name="get" scoped="" ref="0x2b720ff501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff50330"/>
        <function-ref name="set" scoped="" ref="0x2b720ff504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff50640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff56020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff56370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff564f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff56680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff56808"/>
        <function-ref name="get" scoped="" ref="0x2b720ff56990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff56b18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff56ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff56e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff53430" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff53430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff53780"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff53908"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff53a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff53c18"/>
        <function-ref name="get" scoped="" ref="0x2b720ff53da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff52020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff521a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff508c8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff508c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff50c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff50da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff4f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff4f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff4f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff4f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff4f640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff4f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e813e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e813e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e81730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e818b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e81a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e81bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210e81d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e80020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e7e480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e7e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e7e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e7e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e7eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e7ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e7edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e7d020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e7b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e7b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e7b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e7b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e7bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e7bc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e7bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e7a020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e7a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e78480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e78480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e787d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e78958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e78ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e78c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e78df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e76020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e74480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e747d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e74958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e74ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e74c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e74df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e73020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e71480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e71480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e717d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e71958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e71ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e71c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e71df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e70020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e701a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210e6e480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210e6e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210e6e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210e6e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210e6eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210e6ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7210e6edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210e6d020"/>
        <function-ref name="set" scoped="" ref="0x2b7210e6d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210e6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210eb9480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210eb9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210eb97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210eb9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210eb9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210eb9c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210eb9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210eb8020"/>
        <function-ref name="set" scoped="" ref="0x2b7210eb81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210eb8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff5bbd8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff5bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff5a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff5a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff5a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff5a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff5a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff5a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff5a950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff5aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff6b020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff6b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff6b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6b808"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6bb18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff6be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff5d930" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff5d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff5dc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff5de08"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff5c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff5c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff5c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff5c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff5c640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff5c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff5ad60" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff5ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff590d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff59260"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff593e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff59570"/>
        <function-ref name="get" scoped="" ref="0x2b720ff596f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff59880"/>
        <function-ref name="set" scoped="" ref="0x2b720ff59a08"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff59b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff6a120" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff6a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff6a470"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff6a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6a908"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6ac18"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff5ca50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff5ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff5cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff5b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff5b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff5b330"/>
        <function-ref name="get" scoped="" ref="0x2b720ff5b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff5b640"/>
        <function-ref name="set" scoped="" ref="0x2b720ff5b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff5b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff59e18" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff59e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff6c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff6c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6c640"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6c950"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff6cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff692a8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff692a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff695f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff69780"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff69908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff69a90"/>
        <function-ref name="get" scoped="" ref="0x2b720ff69c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff69da0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff68020"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f093e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f09730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f098b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f09a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f09bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210f09d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f08020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f081a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f06480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f06480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f067d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f06958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f06ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f06c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f06df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f05020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f03480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f037d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f03958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f03ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f03c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f03df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f02020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f021a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f00480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f007d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f00958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f00ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f00c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f00df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210efe020"/>
        <function-ref name="set" scoped="" ref="0x2b7210efe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210efe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210efc480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210efc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210efc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210efc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210efcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210efcc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210efcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210efb020"/>
        <function-ref name="set" scoped="" ref="0x2b7210efb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210efb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210ef9480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210ef9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210ef97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210ef9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210ef9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210ef9c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210ef9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210ef8020"/>
        <function-ref name="set" scoped="" ref="0x2b7210ef81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210ef8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210ef6480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210ef6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210ef67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210ef6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210ef6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210ef6c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210ef6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210ef5020"/>
        <function-ref name="set" scoped="" ref="0x2b7210ef51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210ef5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210ef3480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210ef3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210ef37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210ef3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210ef3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210ef3c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210ef3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210ef2020"/>
        <function-ref name="set" scoped="" ref="0x2b7210ef21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210ef2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b720ff74430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b720ff74430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff74780"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff74908"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff74a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff74c18"/>
        <function-ref name="get" scoped="" ref="0x2b720ff74da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff73020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b720ff718c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b720ff718c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff71c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff71da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6f640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff6f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b720ff761e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b720ff761e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff76538"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff766c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff76848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff769d0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff76b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff76ce0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff76e68"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b720ff735b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b720ff735b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff73908"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff73a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff73c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff73da0"/>
        <function-ref name="get" scoped="" ref="0x2b720ff72020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff721a8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff72330"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b720ff6fa50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b720ff6fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff6fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff6e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6e330"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6e640"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff6e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b720ff752a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b720ff752a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff755f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff75780"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff75908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff75a90"/>
        <function-ref name="get" scoped="" ref="0x2b720ff75c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff75da0"/>
        <function-ref name="set" scoped="" ref="0x2b720ff74020"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b720ff72740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b720ff72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff72a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff72c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff72da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff71020"/>
        <function-ref name="get" scoped="" ref="0x2b720ff711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff71330"/>
        <function-ref name="set" scoped="" ref="0x2b720ff714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b720ff6ebd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b720ff6ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff6d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff6d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff6d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff6d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff6d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff6d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ff6d950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff6dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f433e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f43730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f438b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f43a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f43bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7210f43d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f42020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f40480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f407d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f40958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f40ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f40c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f40df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f3f020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f3f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f3d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f3d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f3d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f3d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f3dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f3dc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f3ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f3c020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f3c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f3a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f3a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f3a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f3aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f3ac68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f3adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f39020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f391a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f39330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f37480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f377d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f37958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f37ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f37c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f37df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f35020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f85480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f857d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f85958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f85ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f85c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f85df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f84020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f841a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f84330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f82480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f827d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f82958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f82ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f82c68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f82df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f81020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f811a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7210f7f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7210f7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210f7f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210f7f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210f7fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210f7fc68"/>
        <function-ref name="get" scoped="" ref="0x2b7210f7fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210f7e020"/>
        <function-ref name="set" scoped="" ref="0x2b7210f7e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210f7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ff7bac0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ff7bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff7be10"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff8d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff8d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff8d330"/>
        <function-ref name="get" scoped="" ref="0x2b720ff8d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff8d640"/>
        <function-ref name="set" scoped="" ref="0x2b720ff8d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ff9ddb8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ff9ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff9c170"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff9c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff9c480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff9c608"/>
        <function-ref name="get" scoped="" ref="0x2b720ff9c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff9c918"/>
        <function-ref name="set" scoped="" ref="0x2b720ff9caa0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff9cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ff983e0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ff983e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ff98730"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ff988b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ff98a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ff98bc8"/>
        <function-ref name="get" scoped="" ref="0x2b720ff98d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ff97020"/>
        <function-ref name="set" scoped="" ref="0x2b720ff971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ff97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffa77e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffa77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffa7b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffa7cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffa7e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffa6020"/>
        <function-ref name="get" scoped="" ref="0x2b720ffa61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffa6330"/>
        <function-ref name="set" scoped="" ref="0x2b720ffa64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffa6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffa2c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffa2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffa1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffa11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffa1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffa14b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ffa1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffa17c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ffa1950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffa1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffb1020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffb1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffb14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffb1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffb1808"/>
        <function-ref name="get" scoped="" ref="0x2b720ffb1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffb1b18"/>
        <function-ref name="set" scoped="" ref="0x2b720ffb1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffb1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffac480" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffac7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffac958"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffacae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffacc68"/>
        <function-ref name="get" scoped="" ref="0x2b720ffacdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffab020"/>
        <function-ref name="set" scoped="" ref="0x2b720ffab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffbc7e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffbc7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffbcb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffbccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffbce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffbb020"/>
        <function-ref name="get" scoped="" ref="0x2b720ffbb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffbb330"/>
        <function-ref name="set" scoped="" ref="0x2b720ffbb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffbb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffb8970" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffb8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffb8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffb8e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffb7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffb71a8"/>
        <function-ref name="get" scoped="" ref="0x2b720ffb7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffb74b8"/>
        <function-ref name="set" scoped="" ref="0x2b720ffb7640"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffb77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffb3ab0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffb3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffb3e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffc8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffc81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffc8330"/>
        <function-ref name="get" scoped="" ref="0x2b720ffc84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffc8640"/>
        <function-ref name="set" scoped="" ref="0x2b720ffc87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffc8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffc5c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffc5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffc3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffc31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffc3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffc34b8"/>
        <function-ref name="get" scoped="" ref="0x2b720ffc3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffc37c8"/>
        <function-ref name="set" scoped="" ref="0x2b720ffc3950"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffc3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffbf020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffbf370"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffbf4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffbf680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffbf808"/>
        <function-ref name="get" scoped="" ref="0x2b720ffbf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffbfb18"/>
        <function-ref name="set" scoped="" ref="0x2b720ffbfca0"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffbfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b720ffd0180" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b720ffd0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b720ffd04d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b720ffd0658"/>
        <function-ref name="toggle" scoped="" ref="0x2b720ffd07e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b720ffd0968"/>
        <function-ref name="get" scoped="" ref="0x2b720ffd0af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b720ffd0c78"/>
        <function-ref name="set" scoped="" ref="0x2b720ffd0e00"/>
        <function-ref name="clr" scoped="" ref="0x2b720ffcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72100946e8" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72100946e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b720fceb6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b720fceb6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210094a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b7210094d18" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7210094d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b72100930a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7210093228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b72100933b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7210093538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b72100936c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b72100b6d70" loc="60:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b72100b6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72100b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b72100a1640" loc="57:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b72100a1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b72100a1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b72100b66a8" loc="59:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b72100b66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72100b69f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b72100a1c78" loc="58:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b72100a1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72100b6020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b72100b61a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b72100b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b720fcf3728" loc="48:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b720fcf3728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b720fcf3a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b720fcf3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b720fce8be8" loc="47:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b720fce8be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fcea020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b720fcea1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b720fcea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b720fda52b0" loc="56:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b720fda52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b720fda5600"/>
        <function-ref name="runTask" scoped="" ref="0x2b720fda5788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b720fdae758" loc="57:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b720fdae758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b720fdaeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b720fda7448" loc="55:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b720fda7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b720fda7798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b720fda7920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b720fda7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b720fdc52b0" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b720fdc52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b720fdc5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b720fdca660" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b720fdca660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b720fdca9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b720fdc7a80" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b720fdc7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b720fdc7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b72100cebc0" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b72100cebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b72100cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b72100c7488" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b72100c7488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72100c77d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72100c7960"/>
        <function-ref name="start" scoped="" ref="0x2b72100c7ae8"/>
        <function-ref name="stop" scoped="" ref="0x2b72100c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x2b72100e13c8" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x2b72100e13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72100e1718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x2b7210107060" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x2b7210107060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72101073b0"/>
        <function-ref name="source" scoped="" ref="0x2b7210107538"/>
        <function-ref name="address" scoped="" ref="0x2b72101076c0"/>
        <function-ref name="destination" scoped="" ref="0x2b7210107848"/>
        <function-ref name="setSource" scoped="" ref="0x2b72101079d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7210107b58"/>
        <function-ref name="type" scoped="" ref="0x2b7210107ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b7210107e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7210106020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72101061a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7210106330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x2b721010dd28" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x2b721010dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b721010c0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b721010c228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b72100cc020" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b72100cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72100cc370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72100cc4f8"/>
        <function-ref name="start" scoped="" ref="0x2b72100cc680"/>
        <function-ref name="stop" scoped="" ref="0x2b72100cc808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b7210108358" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7210108358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72101086a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7210108830"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101089b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210108b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7210108cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b7210109020" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7210109020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7210109370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x2b721010cb80" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x2b721010cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b721010b020"/>
        <function-ref name="runTask" scoped="" ref="0x2b721010b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7210112c38" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7210112c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72101050d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7210105260"/>
        <function-ref name="led1On" scoped="" ref="0x2b72101053e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7210105570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72101056f8"/>
        <function-ref name="get" scoped="" ref="0x2b7210105880"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7210105a08"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72101041a8"/>
        <function-ref name="set" scoped="" ref="0x2b7210105b90"/>
        <function-ref name="led0On" scoped="" ref="0x2b7210105d18"/>
        <function-ref name="led2On" scoped="" ref="0x2b7210104020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2b72100eb840" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x2b72100eb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72100ebb90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72100ebd18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72100df020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72100df1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72100df330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b72100ddcd0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b72100ddcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72100ec0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72100ec228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72100ec3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b72100ec538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72100ec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2b72100e0820" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x2b72100e0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72100e0b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72100e0cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72100e0e80"/>
        <function-ref name="cancel" scoped="" ref="0x2b72100cb030"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72100cb1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2b72100f31d0" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x2b72100f31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72100f3520"/>
        <function-ref name="source" scoped="" ref="0x2b72100f36a8"/>
        <function-ref name="address" scoped="" ref="0x2b72100f3830"/>
        <function-ref name="destination" scoped="" ref="0x2b72100f39b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b72100f3b40"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72100f3cc8"/>
        <function-ref name="type" scoped="" ref="0x2b72100f3e50"/>
        <function-ref name="setType" scoped="" ref="0x2b72100dd020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72100dd1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72100dd330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72100dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x2b7210109b98" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x2b7210109b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7210108020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b7210159440" loc="46:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7210159440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7210159790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7210159918"/>
        <function-ref name="led1On" scoped="" ref="0x2b7210159aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7210159c28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7210159db0"/>
        <function-ref name="get" scoped="" ref="0x2b7210156020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72101561a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72101567c8"/>
        <function-ref name="set" scoped="" ref="0x2b7210156330"/>
        <function-ref name="led0On" scoped="" ref="0x2b72101564b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b7210156640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b721016b3b8" loc="50:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b721016b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b721016b708"/>
        <function-ref name="isInput" scoped="" ref="0x2b721016b890"/>
        <function-ref name="toggle" scoped="" ref="0x2b721016ba18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b721016bba0"/>
        <function-ref name="get" scoped="" ref="0x2b721016bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b721016a020"/>
        <function-ref name="set" scoped="" ref="0x2b721016a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b721016a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b721016d670" loc="46:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721016d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721016d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b721016a648" loc="51:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b721016a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b721016a998"/>
        <function-ref name="isInput" scoped="" ref="0x2b721016ab20"/>
        <function-ref name="toggle" scoped="" ref="0x2b721016aca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b721016ae30"/>
        <function-ref name="get" scoped="" ref="0x2b7210169020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72101691a8"/>
        <function-ref name="set" scoped="" ref="0x2b7210169330"/>
        <function-ref name="clr" scoped="" ref="0x2b72101694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b721016dc38" loc="47:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b721016dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b721016c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b721016c1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b721016c330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b721016c4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b721016c640"/>
        <function-ref name="get" scoped="" ref="0x2b721016c7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b721016c950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b721016b020"/>
        <function-ref name="set" scoped="" ref="0x2b721016cad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b721016cc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b721016cde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b72101697d0" loc="52:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b72101697d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210169b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210169ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210169e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210168020"/>
        <function-ref name="get" scoped="" ref="0x2b72101681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210168330"/>
        <function-ref name="set" scoped="" ref="0x2b72101684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210168640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b721016eaf8" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b721016eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b721016ee48"/>
        <function-ref name="isInput" scoped="" ref="0x2b7210181020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72101811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7210181330"/>
        <function-ref name="get" scoped="" ref="0x2b72101814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7210181640"/>
        <function-ref name="set" scoped="" ref="0x2b72101817c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7210181950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b7210181ca8" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b7210181ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7210180020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72101801a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7210180330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72101804b8"/>
        <function-ref name="get" scoped="" ref="0x2b7210180640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72101807c8"/>
        <function-ref name="set" scoped="" ref="0x2b7210180950"/>
        <function-ref name="clr" scoped="" ref="0x2b7210180ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b721017e020" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721017e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721017e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b7210180e30" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b7210180e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b721017f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b721017f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b721017f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b721017f640"/>
        <function-ref name="get" scoped="" ref="0x2b721017f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b721017f950"/>
        <function-ref name="set" scoped="" ref="0x2b721017fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b721017fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7210194e28" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7210194e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72101911a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7210191330"/>
        <function-ref name="start" scoped="" ref="0x2b72101914b8"/>
        <function-ref name="stop" scoped="" ref="0x2b7210191640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7210191db8" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7210191db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210190170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101902f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210190480"/>
        <function-ref name="cancel" scoped="" ref="0x2b7210190608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210190790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b721018eb68" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b721018eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b721018d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b721018d2a8" loc="65:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b721018d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b721018d5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b721018d780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b721018d908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b721018da90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b721018dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b72101afe48" loc="69:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b72101afe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72101ad300"/>
        <function-ref name="clear" scoped="" ref="0x2b72101ad9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b72101aebe8"/>
        <function-ref name="set" scoped="" ref="0x2b72101ab0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72101a5848" loc="70:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72101a5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72101a5b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b72101a5d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b72101aa020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b72101aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b721018e020" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b721018e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b721018e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b721018a020" loc="67:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721018a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b721018a370"/>
        <function-ref name="noAck" scoped="" ref="0x2b721018a4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b721018a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b721018c020" loc="66:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b721018c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b721018c370"/>
        <function-ref name="source" scoped="" ref="0x2b721018c4f8"/>
        <function-ref name="address" scoped="" ref="0x2b721018c680"/>
        <function-ref name="destination" scoped="" ref="0x2b721018c808"/>
        <function-ref name="setSource" scoped="" ref="0x2b721018c990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b721018cb18"/>
        <function-ref name="type" scoped="" ref="0x2b721018cca0"/>
        <function-ref name="setType" scoped="" ref="0x2b721018ce28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b721018b020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b721018b1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b721018b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7210189020" loc="68:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210189020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b721019e478"/>
        <function-ref name="clear" scoped="" ref="0x2b721019eb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b7210189d70"/>
        <function-ref name="set" scoped="" ref="0x2b72101af278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72101bc020" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72101bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72101bc370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72101bc4f8"/>
        <function-ref name="start" scoped="" ref="0x2b72101bc680"/>
        <function-ref name="stop" scoped="" ref="0x2b72101bc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b72101ca130" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72101ca130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72101c9588"/>
        <function-ref name="clear" scoped="" ref="0x2b72101c9c68"/>
        <function-ref name="isValid" scoped="" ref="0x2b72101cae80"/>
        <function-ref name="set" scoped="" ref="0x2b72101c7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b72101bb020" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b72101bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72101bb370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101bb4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72101bb680"/>
        <function-ref name="cancel" scoped="" ref="0x2b72101bb808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72101bb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b72101bad10" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b72101bad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72101b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b72101b78c8" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b72101b78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72101b7c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72101b7da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101b6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72101b61a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72101b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b72101b4218" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b72101b4218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72101b3700"/>
        <function-ref name="clear" scoped="" ref="0x2b72101b3de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b72101b3020"/>
        <function-ref name="set" scoped="" ref="0x2b72101b04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b72101bfd18" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b72101bfd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72101c60a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b72101c6228"/>
        <function-ref name="cancel" scoped="" ref="0x2b72101c63b0"/>
        <function-ref name="set" scoped="" ref="0x2b72101c6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72101ba1c8" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72101ba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72101ba518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72101c6830" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72101c6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72101c6b80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b72101c6d08"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b72101c5020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b72101c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b72101b6658" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72101b6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72101b69a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b72101b6b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72101b6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b72101b8340" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b72101b8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72101b8690"/>
        <function-ref name="source" scoped="" ref="0x2b72101b8818"/>
        <function-ref name="address" scoped="" ref="0x2b72101b89a0"/>
        <function-ref name="destination" scoped="" ref="0x2b72101b8b28"/>
        <function-ref name="setSource" scoped="" ref="0x2b72101b8cb0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72101b8e38"/>
        <function-ref name="type" scoped="" ref="0x2b72101b7020"/>
        <function-ref name="setType" scoped="" ref="0x2b72101b71a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72101b7330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72101b74b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72101b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b72101b27b0" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72101b27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b72101b2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b72101e46e8" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b72101e46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72101e4a38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101e4bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72101e4d48"/>
        <function-ref name="cancel" scoped="" ref="0x2b72101d1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72101d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b72101d14e0" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b72101d14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72101d1830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b72101d7718" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b72101d7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72101d7a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101d7bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72101d7d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b72101d6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72101d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b72101d5498" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b72101d5498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72101d57e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b72101d1b38" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b72101d1b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72101d0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72101d01a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72101d0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72101d04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72101d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72101d6928" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72101d6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72101d6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b72101d5a88" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b72101d5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72101d5dd8"/>
        <function-ref name="source" scoped="" ref="0x2b72101d4020"/>
        <function-ref name="address" scoped="" ref="0x2b72101d41a8"/>
        <function-ref name="destination" scoped="" ref="0x2b72101d4330"/>
        <function-ref name="setSource" scoped="" ref="0x2b72101d44b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72101d4640"/>
        <function-ref name="type" scoped="" ref="0x2b72101d47c8"/>
        <function-ref name="setType" scoped="" ref="0x2b72101d4950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72101d4ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72101d4c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72101d4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72101d8ce8" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72101d8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72102130a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7210213228"/>
        <function-ref name="start" scoped="" ref="0x2b72102133b0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210213538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7210212a10" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7210212a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7210212d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7210211020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72102111a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210211330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72102114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b72102137b0" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b72102137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210213b00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7210213c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210213e10"/>
        <function-ref name="cancel" scoped="" ref="0x2b7210212020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72102121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72102291a0" loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72102291a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72102294f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7210229678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b7210229800"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7210229988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b721022ac30" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b721022ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b721022c020"/>
        <function-ref name="enableCca" scoped="" ref="0x2b721022c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b7210225060" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b7210225060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72102234b8"/>
        <function-ref name="clear" scoped="" ref="0x2b7210223b98"/>
        <function-ref name="isValid" scoped="" ref="0x2b7210225db0"/>
        <function-ref name="set" scoped="" ref="0x2b72102222b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7210212438" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7210212438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7210212788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b721023aac8" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b721023aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721023ae18"/>
        <function-ref name="isSet" scoped="" ref="0x2b7210239020"/>
        <function-ref name="cancel" scoped="" ref="0x2b72102391a8"/>
        <function-ref name="set" scoped="" ref="0x2b7210239330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b721022b1d0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721022b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b721022b520"/>
        <function-ref name="noAck" scoped="" ref="0x2b721022b6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b721022b830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b72102269a8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b72102269a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b7210226cf8"/>
        <function-ref name="initial" scoped="" ref="0x2b7210226e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7210221020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b721021f478"/>
        <function-ref name="clear" scoped="" ref="0x2b721021fb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b7210221d70"/>
        <function-ref name="set" scoped="" ref="0x2b721023a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b721022bb30" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b721022bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b721022be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7210255d20" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7210255d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72102540a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7210254228"/>
        <function-ref name="start" scoped="" ref="0x2b72102543b0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210254538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b721027d748" loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b721027d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b72102805e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x2b721028d508" loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x2b721028d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b721028d858"/>
        <function-ref name="runTask" scoped="" ref="0x2b721028d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x2b72102b2d78" loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x2b72102b2d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72102b10f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72102b1278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x2b7210279e80" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b7210279e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b721027fa28"/>
        <function-ref name="readDone" scoped="" ref="0x2b721027b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b7210270df0" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7210270df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7210273170"/>
        <function-ref name="rand32" scoped="" ref="0x2b72102732f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72102537f0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72102537f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b7210253b40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7210253cc8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b7210253e50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7210252020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b72102547f0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b72102547f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b7210254b40"/>
        <function-ref name="enableCca" scoped="" ref="0x2b7210254cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210255708" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210255708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210255a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x2b721027b808" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b721027b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72102773c8"/>
        <function-ref name="readDone" scoped="" ref="0x2b7210277850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b7210274080" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b7210274080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72102743d0"/>
        <function-ref name="settled" scoped="" ref="0x2b7210274558"/>
        <function-ref name="adjust" scoped="" ref="0x2b72102746e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x2b72102bc190" loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x2b72102bc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72102bc4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72102bc668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x2b7210284c38" loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x2b7210284c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7210282e78"/>
        <function-ref name="fired" scoped="" ref="0x2b721026f5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72102822d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b721026fe48"/>
        <function-ref name="getdt" scoped="" ref="0x2b7210281748"/>
        <function-ref name="gett0" scoped="" ref="0x2b72102812f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b721026f9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72102717e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72102828a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7210271c88"/>
        <function-ref name="stop" scoped="" ref="0x2b721026f158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x2b72102523e0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x2b72102523e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210252730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x2b72102b7770" loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x2b72102b7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72102b7ac0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72102b7c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b7210275770" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b7210275770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b7210275ac0"/>
        <function-ref name="biasOn" scoped="" ref="0x2b7210275c48"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b7210275dd0"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b7210261020"/>
        <function-ref name="selectLock" scoped="" ref="0x2b72102611a8"/>
        <function-ref name="init" scoped="" ref="0x2b7210261330"/>
        <function-ref name="getLock" scoped="" ref="0x2b72102614b8"/>
        <function-ref name="coreOn" scoped="" ref="0x2b7210261640"/>
        <function-ref name="txMode" scoped="" ref="0x2b72102617c8"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b7210261950"/>
        <function-ref name="rxMode" scoped="" ref="0x2b7210261ad8"/>
        <function-ref name="off" scoped="" ref="0x2b7210261c60"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b7210261de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x2b721024d540" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x2b721024d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b721024d890"/>
        <function-ref name="stop" scoped="" ref="0x2b721024da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x2b7210294060" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b7210294060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b7210294be0"/>
        <function-ref name="readDone" scoped="" ref="0x2b72102930c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b7210253020" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b7210253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b7210253370"/>
        <function-ref name="initial" scoped="" ref="0x2b72102534f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x2b72102629d8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b72102629d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b7210262d28"/>
        <function-ref name="listen" scoped="" ref="0x2b7210250020"/>
        <function-ref name="syncing" scoped="" ref="0x2b72102501a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210250330"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b72102504b8"/>
        <function-ref name="idleByte" scoped="" ref="0x2b7210250640"/>
        <function-ref name="cts" scoped="" ref="0x2b72102507c8"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b7210250950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210250ad8"/>
        <function-ref name="off" scoped="" ref="0x2b7210250c60"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b7210250de8"/>
        <function-ref name="rx" scoped="" ref="0x2b721024f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b721030a888" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b721030a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b721030abd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b721030ad60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7210309020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72103091a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7210309330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x2b721031c3e8" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b721031c3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b721031c838"/>
        <function-ref name="initSlave" scoped="" ref="0x2b721031c9c0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b721031cb48"/>
        <function-ref name="writeByte" scoped="" ref="0x2b721031ccd0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b721031ce58"/>
        <function-ref name="txMode" scoped="" ref="0x2b721031b020"/>
        <function-ref name="readByte" scoped="" ref="0x2b721031b1a8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b721031b330"/>
        <function-ref name="dataReady" scoped="" ref="0x2b721031b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b721030b5a8" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b721030b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b721030b8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b721030ba80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b721030bc08"/>
        <function-ref name="cancel" scoped="" ref="0x2b721030bd90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b721030a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b7210306218" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b7210306218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7210305700"/>
        <function-ref name="clear" scoped="" ref="0x2b7210305de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b7210305020"/>
        <function-ref name="set" scoped="" ref="0x2b72103034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b721030c818" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721030c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721030cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b721031fbd0" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b721031fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721031e020"/>
        <function-ref name="isSet" scoped="" ref="0x2b721031e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b721031e330"/>
        <function-ref name="set" scoped="" ref="0x2b721031e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b721030a2b0" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b721030a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b721030a600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b721031b788" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b721031b788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721031bad8"/>
        <function-ref name="settled" scoped="" ref="0x2b721031bc60"/>
        <function-ref name="adjust" scoped="" ref="0x2b721031bde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x2b721031a2a0" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x2b721031a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b721031ae20"/>
        <function-ref name="readDone" scoped="" ref="0x2b7210319310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b7210313660" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b7210313660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210316220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x2b72103783f0" loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x2b72103783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210378740"/>
        <function-ref name="runTask" scoped="" ref="0x2b72103788c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7210308e00" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7210308e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72103071a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b7210307330"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72103074b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b721031e828" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b721031e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b721031eb78"/>
        <function-ref name="biasOn" scoped="" ref="0x2b721031ed00"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b721031d020"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b721031d1a8"/>
        <function-ref name="selectLock" scoped="" ref="0x2b721031d330"/>
        <function-ref name="init" scoped="" ref="0x2b721031d4b8"/>
        <function-ref name="getLock" scoped="" ref="0x2b721031d640"/>
        <function-ref name="coreOn" scoped="" ref="0x2b721031d7c8"/>
        <function-ref name="txMode" scoped="" ref="0x2b721031d950"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b721031dad8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b721031dc60"/>
        <function-ref name="off" scoped="" ref="0x2b721031dde8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b721031c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b7210316870" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b7210316870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210315490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x2b72103ac020" loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x2b72103ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72103ac370"/>
        <function-ref name="runTask" scoped="" ref="0x2b72103ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7210302130" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7210302130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7210321588"/>
        <function-ref name="clear" scoped="" ref="0x2b7210321c68"/>
        <function-ref name="isValid" scoped="" ref="0x2b7210302e80"/>
        <function-ref name="set" scoped="" ref="0x2b721031f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b721030ce18" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b721030ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b721030b1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b721030b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b72103077b8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72103077b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b7210307b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x2b72103095d8" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b72103095d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b7210309928"/>
        <function-ref name="listen" scoped="" ref="0x2b7210309ab0"/>
        <function-ref name="syncing" scoped="" ref="0x2b7210309c38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210309dc0"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b7210308020"/>
        <function-ref name="idleByte" scoped="" ref="0x2b72103081a8"/>
        <function-ref name="cts" scoped="" ref="0x2b7210308330"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b72103084b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210308640"/>
        <function-ref name="off" scoped="" ref="0x2b72103087c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b7210308950"/>
        <function-ref name="rx" scoped="" ref="0x2b7210308ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x2b72104064b8" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x2b72104064b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b7210405088"/>
        <function-ref name="readDone" scoped="" ref="0x2b7210405510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b7210401620" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7210401620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7210401970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7210401af8"/>
        <function-ref name="request" scoped="" ref="0x2b7210401c80"/>
        <function-ref name="granted" scoped="" ref="0x2b7210401e08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7210406020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x2b721040a6d8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x2b721040a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72104083a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b7210408830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b721040cc10" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721040cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210436020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x2b72104362f0" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b72104362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210436640"/>
        <function-ref name="settled" scoped="" ref="0x2b72104367c8"/>
        <function-ref name="adjust" scoped="" ref="0x2b7210436950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b7210447e48" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b7210447e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b7210445be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x2b7210447118" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x2b7210447118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210447468"/>
        <function-ref name="read" scoped="" ref="0x2b72104475f0"/>
        <function-ref name="write" scoped="" ref="0x2b7210447778"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b7210447900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x2b7210449620" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b7210449620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b7210449970"/>
        <function-ref name="biasOn" scoped="" ref="0x2b7210449af8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b7210449c80"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b7210449e08"/>
        <function-ref name="selectLock" scoped="" ref="0x2b7210448020"/>
        <function-ref name="init" scoped="" ref="0x2b72104481a8"/>
        <function-ref name="getLock" scoped="" ref="0x2b7210448330"/>
        <function-ref name="coreOn" scoped="" ref="0x2b72104484b8"/>
        <function-ref name="txMode" scoped="" ref="0x2b7210448640"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b72104487c8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b7210448950"/>
        <function-ref name="off" scoped="" ref="0x2b7210448ad8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b7210448c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b721049c908" loc="50:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b721049c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b721049cc58"/>
        <function-ref name="initSlave" scoped="" ref="0x2b721049cde0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b721049b020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b721049b1a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b721049b330"/>
        <function-ref name="txMode" scoped="" ref="0x2b721049b4b8"/>
        <function-ref name="readByte" scoped="" ref="0x2b721049b640"/>
        <function-ref name="rxMode" scoped="" ref="0x2b721049b7c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b721049b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x2b721049e4e0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x2b721049e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b721049d088"/>
        <function-ref name="readDone" scoped="" ref="0x2b721049d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x2b721049db80" loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b721049db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b721049c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b721049c1a8"/>
        <function-ref name="request" scoped="" ref="0x2b721049c330"/>
        <function-ref name="granted" scoped="" ref="0x2b721049c4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b721049c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b721049bbf8" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b721049bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721049a020"/>
        <function-ref name="read" scoped="" ref="0x2b721049a1a8"/>
        <function-ref name="write" scoped="" ref="0x2b721049a330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b721049a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b721061f578" loc="28:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b721061f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b721061f8c8"/>
        <function-ref name="configure" scoped="" ref="0x2b721061fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b7210621680" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b7210621680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b7210620230"/>
        <function-ref name="readDone" scoped="" ref="0x2b72106206b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b7210620c70" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b7210620c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b721061f020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b721061f1a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b721061f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7210497980" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7210497980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7210497cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7210497e58"/>
        <function-ref name="request" scoped="" ref="0x2b7210621020"/>
        <function-ref name="granted" scoped="" ref="0x2b72106211a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7210621330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b72104b0a00" loc="18:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b72104b0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72104b3578"/>
        <function-ref name="readDone" scoped="" ref="0x2b72104b39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b72104af620" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b72104af620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72104ae1d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b72104ae658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b72104ad208" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b72104ad208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b72104ad558"/>
        <function-ref name="getChannel" scoped="" ref="0x2b72104ad6e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b72104ad868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b72104ac050" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b72104ac050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72104ac3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72104ac528"/>
        <function-ref name="request" scoped="" ref="0x2b72104ac6b0"/>
        <function-ref name="granted" scoped="" ref="0x2b72104ac838"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72104ac9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b72104cc890" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72104cc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b72104ccbe0"/>
        <function-ref name="configure" scoped="" ref="0x2b72104ccd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b72104c39b0" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b72104c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b72104c3d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72104cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b72104c8cb8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72104c8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b72104cd0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b72104cd228"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72104cd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b72104aaaf8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b72104aaaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72104aae48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72104ce020"/>
        <function-ref name="request" scoped="" ref="0x2b72104ce1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b72104ce330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72104ce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72104c2d48" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72104c2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72104bf0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b72104bede0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b72104bede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b72104bd170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72104bd2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b72104be488" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72104be488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b72104be7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b72104be960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72104beae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b72104d5940" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b72104d5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b72104d5c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b72104d5e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b72104e3020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b72104e31a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b72104e3330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b72104e34b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b72104e3640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b72104e37c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b72104e3950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b72104e3ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b72104e3c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b72104e3de8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b72104e2020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b72104e22a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b72104e2430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b72104e25b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b72104e2740"/>
        <function-ref name="getValue" scoped="" ref="0x2b72104e28c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72104e2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b72104bcc10" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b72104bcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b72104be020"/>
        <function-ref name="stop" scoped="" ref="0x2b72104be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b72104e2d30" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b72104e2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b72104d40d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b72104d4260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b72104d43e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b72104d4570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b72104d46f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b721051b020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b721051b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b721051b370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b721051b4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b721051b680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b721051b808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b721051b990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b721051bb18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b721051bca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b721051be28"/>
        <function-ref name="cancel" scoped="" ref="0x2b721051a020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b721051a1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b721051a330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b721051a4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b721051a640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b721051a8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b721051aa50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b721051abd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b721051ad60"/>
        <function-ref name="getValue" scoped="" ref="0x2b7210519020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72105191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b72105151e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b72105151e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b7210515538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b72105156c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b7210515848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b72105159d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b7210515b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b7210515ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b7210515e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b7210514020"/>
        <function-ref name="cancel" scoped="" ref="0x2b72105141a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b7210514330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b72105144b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b7210514640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b72105147c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b7210514a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b7210514bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b7210514d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b7210513020"/>
        <function-ref name="getValue" scoped="" ref="0x2b72105131a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b7210513330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b7210513640" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7210513640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7210513990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b72105b4698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b72105b4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b72105b4a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b72105b4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b72105b23c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b72105b23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b72105b2738"/>
        <function-ref name="configure" scoped="" ref="0x2b72105b28c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b72105b4dd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105b4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72105b3170"/>
        <function-ref name="requested" scoped="" ref="0x2b72105b32f8"/>
        <function-ref name="granted" scoped="" ref="0x2b72105b3480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72105b3608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b72105b3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b72105b5840" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b72105b5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72105b5bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72105b5d38"/>
        <function-ref name="request" scoped="" ref="0x2b72105b4020"/>
        <function-ref name="granted" scoped="" ref="0x2b72105b41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72105b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b72105b39d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72105b39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b72105b3d28"/>
        <function-ref name="userId" scoped="" ref="0x2b72105b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b721104f8e8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721104f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721104fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b721104e020" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b721104e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b721104e370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b721104e4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b721104e680"/>
        <function-ref name="dequeue" scoped="" ref="0x2b721104e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b721104cd58" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b721104cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b721104b0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b721104b278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b721104a980" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b721104a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b721104acf0"/>
        <function-ref name="configure" scoped="" ref="0x2b721104ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b7211049130" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b7211049130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7211049480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7211049608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7211049790"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7211049918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b721104b4c0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b721104b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b721104b810"/>
        <function-ref name="requested" scoped="" ref="0x2b721104b998"/>
        <function-ref name="granted" scoped="" ref="0x2b721104bb20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b721104bca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b721104be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7211049b60" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7211049b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7211047020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72110471a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b7211047330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72110474b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7211047640"/>
        <function-ref name="get" scoped="" ref="0x2b72110477c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7211047950"/>
        <function-ref name="led0On" scoped="" ref="0x2b7211046020"/>
        <function-ref name="set" scoped="" ref="0x2b7211047c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b7211047ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7211047de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b721104c060" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b721104c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b721104c3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b721104c558"/>
        <function-ref name="request" scoped="" ref="0x2b721104c6e0"/>
        <function-ref name="granted" scoped="" ref="0x2b721104c868"/>
        <function-ref name="isOwner" scoped="" ref="0x2b721104c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b721104a0e0" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b721104a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b721104a430"/>
        <function-ref name="userId" scoped="" ref="0x2b721104a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b72110462e8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b72110462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7211046638"/>
        <function-ref name="runTask" scoped="" ref="0x2b72110467c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b72105da780" loc="72:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b72105da780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b72105daad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b72105dad18" loc="73:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b72105dad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72105f00a0"/>
        <function-ref name="requested" scoped="" ref="0x2b72105f0228"/>
        <function-ref name="granted" scoped="" ref="0x2b72105f03b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72105f0538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b72105f06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b72105da060" loc="70:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b72105da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b72105da3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b72105da538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b72105f0908" loc="74:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72105f0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b72105f0c58"/>
        <function-ref name="userId" scoped="" ref="0x2b72105f0de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b721106e740" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b721106e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b721106ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b721106ecd8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b721106ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b721106d0a0"/>
        <function-ref name="requested" scoped="" ref="0x2b721106d228"/>
        <function-ref name="granted" scoped="" ref="0x2b721106d3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b721106d538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b721106d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b721106e020" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b721106e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b721106e370"/>
        <function-ref name="stop" scoped="" ref="0x2b721106e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b721106d908" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b721106d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b721106dc58"/>
        <function-ref name="userId" scoped="" ref="0x2b721106dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b72105e76a0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b72105e76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72105e6370"/>
        <function-ref name="readDone" scoped="" ref="0x2b72105e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b72105e5428" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b72105e5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b72105e4020"/>
        <function-ref name="readDone" scoped="" ref="0x2b72105e44a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b72105e29a0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b72105e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b72105e2cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b72105e2e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b72105e1030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b72105e4b18" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b72105e4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b72105e4e68"/>
        <function-ref name="cancel" scoped="" ref="0x2b72105e2020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72105e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b72105fe4d8" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b72105fe4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72105fe828"/>
        <function-ref name="runTask" scoped="" ref="0x2b72105fe9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b7210617680" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b7210617680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b721062c370"/>
        <function-ref name="readDone" scoped="" ref="0x2b721062c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b721062a060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b721062a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b721062abc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b7210629088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b7210629720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7210629720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7210629a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7210629c18"/>
        <function-ref name="request" scoped="" ref="0x2b7210629da0"/>
        <function-ref name="granted" scoped="" ref="0x2b7210628020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72106281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b7210643208" loc="46:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7210643208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7210643558"/>
        <function-ref name="rand32" scoped="" ref="0x2b72106436e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b72106461a0" loc="45:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b72106461a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210646ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210647310" loc="44:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210647310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210647660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b721063e080" loc="48:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b721063e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b721063e3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b721063e558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b721063f020" loc="47:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b721063f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721063fb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72106406a0" loc="46:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72106406a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72106409f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7210641a60" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210641a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7210813d60"/>
        <function-ref name="fired" scoped="" ref="0x2b7210815470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72108131c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7210815d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b7210812648"/>
        <function-ref name="gett0" scoped="" ref="0x2b72108121f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72108158c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7210816620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7210813790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7210816ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210815020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b72106563c8" loc="49:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b72106563c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72106526c8"/>
        <function-ref name="fired" scoped="" ref="0x2b7210655db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7210653ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7210653688"/>
        <function-ref name="getdt" scoped="" ref="0x2b7210651020"/>
        <function-ref name="gett0" scoped="" ref="0x2b7210652b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7210653238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7210655020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72106520f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72106554c0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210655960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b721064db18" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b721064db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7210677d98"/>
        <function-ref name="fired" scoped="" ref="0x2b72106794d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72106771f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7210679d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b7210676688"/>
        <function-ref name="gett0" scoped="" ref="0x2b7210676238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7210679928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b721064c6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72106777c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b721064cb90"/>
        <function-ref name="stop" scoped="" ref="0x2b7210679088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7210676c48" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7210676c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210674820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210651dd8" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210651dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721064d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b721068de40" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b721068de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210665be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210663548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72106630c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72106639d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72106702c0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72106702c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210670610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b7210668ac8" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7210668ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7210666150"/>
        <function-ref name="fired" scoped="" ref="0x2b72106671f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7210667b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7210667680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b72106665d8"/>
        <function-ref name="start" scoped="" ref="0x2b721066f860"/>
        <function-ref name="stop" scoped="" ref="0x2b721066fd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b721077c998" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b721077c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7210778020"/>
        <function-ref name="fired" scoped="" ref="0x2b72107790c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b72107799d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7210779548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b72107784a8"/>
        <function-ref name="start" scoped="" ref="0x2b721077a730"/>
        <function-ref name="stop" scoped="" ref="0x2b721077ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b721077c1f0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b721077c1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b720fceb388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b720fceb388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b721077c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210778a90" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210778a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210777828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210775190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210777cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210775618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b721109f020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b721109f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b721109f370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b721109f4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b721109f680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b721109f808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b721109f990"/>
        <function-ref name="setControl" scoped="" ref="0x2b721109fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b72110acda8" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b72110acda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72110a8470"/>
        <function-ref name="fired" scoped="" ref="0x2b72110a9510"/>
        <function-ref name="startAt" scoped="" ref="0x2b72110a9e20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72110a9998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b72110a88f8"/>
        <function-ref name="start" scoped="" ref="0x2b72110aab38"/>
        <function-ref name="stop" scoped="" ref="0x2b72110a9088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72110ac600" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72110ac600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72110ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b72110a7020" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72110a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72110a7d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72110a66b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72110a6230"/>
        <function-ref name="overflow" scoped="" ref="0x2b72110a6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b721109a0a0" loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b721109a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b721109a3f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b721109a578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b721109a700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b721109a888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b721109aa10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b721109ab98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b721109e020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b721109e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b721109c7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b721109d560"/>
        <function-ref name="get" scoped="" ref="0x2b721109eba0"/>
        <function-ref name="reset" scoped="" ref="0x2b721109d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b721109cc30"/>
        <function-ref name="set" scoped="" ref="0x2b721109d088"/>
        <function-ref name="start" scoped="" ref="0x2b721109de70"/>
        <function-ref name="stop" scoped="" ref="0x2b721109c320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b72110a4168" loc="30:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72110a4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72110a0270"/>
        <function-ref name="test" scoped="" ref="0x2b72110a2930"/>
        <function-ref name="get" scoped="" ref="0x2b72110a4ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b72110a06f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b72110a0bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b72110a3b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b72110a36d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b72110a2db8"/>
        <function-ref name="set" scoped="" ref="0x2b72110a31f8"/>
        <function-ref name="start" scoped="" ref="0x2b72110a2020"/>
        <function-ref name="stop" scoped="" ref="0x2b72110a24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b72106f6020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b72106f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b72106f6370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b72106f64f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72106f6680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b72106f6808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b72106f6990"/>
        <function-ref name="setControl" scoped="" ref="0x2b72106f6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b72106f1228" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b72106f1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b72106f1578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b72106f1700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b72106f1888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b72106f1a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b72106f1b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b72106f1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b72106f5020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b72106f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b72106f27a8"/>
        <function-ref name="fired" scoped="" ref="0x2b72106f4560"/>
        <function-ref name="get" scoped="" ref="0x2b72106f5ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b72106f49e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72106f2c30"/>
        <function-ref name="set" scoped="" ref="0x2b72106f4088"/>
        <function-ref name="start" scoped="" ref="0x2b72106f4e70"/>
        <function-ref name="stop" scoped="" ref="0x2b72106f2320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72106fede8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72106fede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72106f70f8"/>
        <function-ref name="test" scoped="" ref="0x2b72106f8798"/>
        <function-ref name="get" scoped="" ref="0x2b72106fba18"/>
        <function-ref name="setScale" scoped="" ref="0x2b72106f7580"/>
        <function-ref name="getScale" scoped="" ref="0x2b72106f7a58"/>
        <function-ref name="reset" scoped="" ref="0x2b72106fa980"/>
        <function-ref name="overflow" scoped="" ref="0x2b72106fa4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72106f8c20"/>
        <function-ref name="set" scoped="" ref="0x2b72106fa020"/>
        <function-ref name="start" scoped="" ref="0x2b72106fae08"/>
        <function-ref name="stop" scoped="" ref="0x2b72106f8310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7210718160" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210718160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b72107184b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7210718638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72107187c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7210718948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7210718ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b7210718c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b7210713268" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7210713268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b72107135b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b7210713968" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b7210713968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b7210713cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b7210713e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b7210712020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b72107121a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7210712330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b72107124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7210717190" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7210717190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210714930"/>
        <function-ref name="fired" scoped="" ref="0x2b72107156d0"/>
        <function-ref name="get" scoped="" ref="0x2b7210717d10"/>
        <function-ref name="reset" scoped="" ref="0x2b7210715b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210714db8"/>
        <function-ref name="set" scoped="" ref="0x2b72107151f8"/>
        <function-ref name="start" scoped="" ref="0x2b7210714020"/>
        <function-ref name="stop" scoped="" ref="0x2b72107144a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b721071d0f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b721071d0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210719270"/>
        <function-ref name="test" scoped="" ref="0x2b721071a930"/>
        <function-ref name="get" scoped="" ref="0x2b721071dc78"/>
        <function-ref name="setScale" scoped="" ref="0x2b72107196f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210719bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b721071ca90"/>
        <function-ref name="overflow" scoped="" ref="0x2b721071c608"/>
        <function-ref name="isOn" scoped="" ref="0x2b721071adb8"/>
        <function-ref name="set" scoped="" ref="0x2b721071c130"/>
        <function-ref name="start" scoped="" ref="0x2b721071a020"/>
        <function-ref name="stop" scoped="" ref="0x2b721071a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b72107aacf0" loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b72107aacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72107a90a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72107a9228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b72107aec70" loc="49:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b72107aec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72107aa410"/>
        <function-ref name="fired" scoped="" ref="0x2b72107ab4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b72107abdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72107ab930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b72107aa898"/>
        <function-ref name="start" scoped="" ref="0x2b72107ac9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b72107ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72107b3ab0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72107b3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72107afd60"/>
        <function-ref name="fired" scoped="" ref="0x2b72107b0470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72107af1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72107b0d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b72107ae648"/>
        <function-ref name="gett0" scoped="" ref="0x2b72107ae1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72107b08c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72107b1620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72107af790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72107b1ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b72107b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b72107f7930" loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b72107f7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72107f7c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b72107f7e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b72107fc858" loc="49:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b72107fc858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72107f8bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b72107f91c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72107f8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72107f9a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b72107f74d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b72107f7088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72107f9610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72107fa3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72107f85f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72107fa878"/>
        <function-ref name="stop" scoped="" ref="0x2b72107fad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72107ce5e0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72107ce5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72107fd988"/>
        <function-ref name="fired" scoped="" ref="0x2b72107ff020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72107ffd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72107ff900"/>
        <function-ref name="getdt" scoped="" ref="0x2b72107fc2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b72107fddf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72107ff490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7210800198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72107fd398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7210800658"/>
        <function-ref name="stop" scoped="" ref="0x2b7210800b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b72107f2128" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b72107f2128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72107f2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b72107e9330" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72107e9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72107e80c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72107e89d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72107e8548"/>
        <function-ref name="overflow" scoped="" ref="0x2b72107e8e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b72108097e8" loc="54:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b72108097e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7210809b38"/>
        <function-ref name="changed" scoped="" ref="0x2b7210809cc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7210809e48"/>
        <function-ref name="setAddress" scoped="" ref="0x2b721080d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b721082f568" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b721082f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b721082e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210820638" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210820638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721081f3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b721081fd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b721081f878"/>
        <function-ref name="overflow" scoped="" ref="0x2b721081e1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b72108503a0" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72108503a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b720fda0720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721084f130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b721084fa40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b721084f5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b721084d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7210844140" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210844140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7210844490"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b7210844618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72108447a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b7210844928"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7210844ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7210844c38"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b7210844dc0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b7210843020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b72108431a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b7210843330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7210869b68" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7210869b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7210867db8"/>
        <function-ref name="test" scoped="" ref="0x2b72108674a8"/>
        <function-ref name="get" scoped="" ref="0x2b721083a728"/>
        <function-ref name="captured" scoped="" ref="0x2b72108390c0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210839598"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210867930"/>
        <function-ref name="set" scoped="" ref="0x2b721083abb0"/>
        <function-ref name="start" scoped="" ref="0x2b7210839a20"/>
        <function-ref name="stop" scoped="" ref="0x2b7210867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b72108669c0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b72108669c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210862270"/>
        <function-ref name="fired" scoped="" ref="0x2b7210864020"/>
        <function-ref name="get" scoped="" ref="0x2b7210865598"/>
        <function-ref name="reset" scoped="" ref="0x2b72108644a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72108626f8"/>
        <function-ref name="set" scoped="" ref="0x2b7210865a20"/>
        <function-ref name="start" scoped="" ref="0x2b7210864930"/>
        <function-ref name="stop" scoped="" ref="0x2b7210864db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b721084a098" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b721084a098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210846270"/>
        <function-ref name="test" scoped="" ref="0x2b7210848930"/>
        <function-ref name="get" scoped="" ref="0x2b721084ac18"/>
        <function-ref name="setScale" scoped="" ref="0x2b72108466f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210846bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210849a58"/>
        <function-ref name="overflow" scoped="" ref="0x2b72108495d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210848db8"/>
        <function-ref name="set" scoped="" ref="0x2b72108490f8"/>
        <function-ref name="start" scoped="" ref="0x2b7210848020"/>
        <function-ref name="stop" scoped="" ref="0x2b72108484a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7210859020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7210859370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b72108594f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7210859680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b7210859808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7210859990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7210859b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b7210859ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b7210859e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b7210858020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b72108581a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b721087da48" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b721087da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b721087dd98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b721087c020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b721087c1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b721087c330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b721087c4b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b721087c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b7210854e60" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b7210854e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210886798"/>
        <function-ref name="fired" scoped="" ref="0x2b72108514f8"/>
        <function-ref name="get" scoped="" ref="0x2b7210852a18"/>
        <function-ref name="reset" scoped="" ref="0x2b7210851980"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210886c20"/>
        <function-ref name="set" scoped="" ref="0x2b7210851020"/>
        <function-ref name="start" scoped="" ref="0x2b7210851e08"/>
        <function-ref name="stop" scoped="" ref="0x2b7210886310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7210858680" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7210858680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7210854798"/>
        <function-ref name="test" scoped="" ref="0x2b7210855e58"/>
        <function-ref name="get" scoped="" ref="0x2b7210856230"/>
        <function-ref name="captured" scoped="" ref="0x2b7210856b90"/>
        <function-ref name="reset" scoped="" ref="0x2b72108550c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210854310"/>
        <function-ref name="set" scoped="" ref="0x2b72108566b8"/>
        <function-ref name="start" scoped="" ref="0x2b7210855548"/>
        <function-ref name="stop" scoped="" ref="0x2b72108559d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b72108852b8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b72108852b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210882a40"/>
        <function-ref name="fired" scoped="" ref="0x2b72108837e8"/>
        <function-ref name="get" scoped="" ref="0x2b7210885e38"/>
        <function-ref name="reset" scoped="" ref="0x2b7210883c70"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210881020"/>
        <function-ref name="set" scoped="" ref="0x2b7210883310"/>
        <function-ref name="start" scoped="" ref="0x2b7210882130"/>
        <function-ref name="stop" scoped="" ref="0x2b72108825b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b7210881698" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b7210881698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b721087d020"/>
        <function-ref name="fired" scoped="" ref="0x2b7210880d08"/>
        <function-ref name="get" scoped="" ref="0x2b72108803a8"/>
        <function-ref name="reset" scoped="" ref="0x2b721087e1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b721087d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b7210880830"/>
        <function-ref name="start" scoped="" ref="0x2b721087e680"/>
        <function-ref name="stop" scoped="" ref="0x2b721087eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b721085e020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b721085e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b721085a0f8"/>
        <function-ref name="test" scoped="" ref="0x2b721085b7a8"/>
        <function-ref name="get" scoped="" ref="0x2b721085eba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b721085a580"/>
        <function-ref name="getScale" scoped="" ref="0x2b721085aa58"/>
        <function-ref name="reset" scoped="" ref="0x2b721085c9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b721085c560"/>
        <function-ref name="isOn" scoped="" ref="0x2b721085bc30"/>
        <function-ref name="set" scoped="" ref="0x2b721085c088"/>
        <function-ref name="start" scoped="" ref="0x2b721085ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b721085b320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210901020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210901020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b720fceb388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b720fceb388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210901370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7210901740" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210901740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210929930"/>
        <function-ref name="test" scoped="" ref="0x2b7210929020"/>
        <function-ref name="get" scoped="" ref="0x2b721092c3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210929db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b72109282f0"/>
        <function-ref name="reset" scoped="" ref="0x2b721092b1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b721092cd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b72109294a8"/>
        <function-ref name="set" scoped="" ref="0x2b721092c830"/>
        <function-ref name="start" scoped="" ref="0x2b721092b680"/>
        <function-ref name="stop" scoped="" ref="0x2b721092bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b72109255a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72109255a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b720fda0720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72109143a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210914cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210914830"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210913190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b72109136f0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72109136f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210947930"/>
        <function-ref name="test" scoped="" ref="0x2b7210947020"/>
        <function-ref name="get" scoped="" ref="0x2b72109113a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210947db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b72109452f0"/>
        <function-ref name="reset" scoped="" ref="0x2b72109481f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210911d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b72109474a8"/>
        <function-ref name="set" scoped="" ref="0x2b7210911830"/>
        <function-ref name="start" scoped="" ref="0x2b7210948680"/>
        <function-ref name="stop" scoped="" ref="0x2b7210948b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b721095fe20" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b721095fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b720fda0720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721095ebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b721095d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b721095d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b721095d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210942c50" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210942c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72109619f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b721095f330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210961e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b721095f7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7210821c38" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7210821c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b721095a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b721095ae48" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b721095ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b720fd69178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210959be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210958548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72109580c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72109589d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7210955e10" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210955e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd6a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b720fd6a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72109510c0"/>
        <function-ref name="fired" scoped="" ref="0x2b7210953798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72109524d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7210952088"/>
        <function-ref name="getdt" scoped="" ref="0x2b7210951960"/>
        <function-ref name="gett0" scoped="" ref="0x2b7210951510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7210953be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72109549e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7210952aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7210954e80"/>
        <function-ref name="stop" scoped="" ref="0x2b7210953348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7210974758" loc="46:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7210974758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7210974aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7210974c30"/>
        <function-ref name="start" scoped="" ref="0x2b7210974db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7210971020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7210971798" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7210971798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210971ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7210971c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210971df8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7210970020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72109701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b721096e020" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b721096e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b721096e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b721096e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b721096e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b721096e808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b721096e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7210970928" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7210970928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7210970c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b721096cc80" loc="53:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b721096cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b721096b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b721096b1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b721096b330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b721096b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b721096b640"/>
        <function-ref name="get" scoped="" ref="0x2b721096b7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b721096b950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b721096a020"/>
        <function-ref name="set" scoped="" ref="0x2b721096bad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b721096bc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b721096bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b721096c348" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b721096c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b721096c698"/>
        <function-ref name="noAck" scoped="" ref="0x2b721096c820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b721096c9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b721096ec30" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b721096ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b721096d020"/>
        <function-ref name="source" scoped="" ref="0x2b721096d1a8"/>
        <function-ref name="address" scoped="" ref="0x2b721096d330"/>
        <function-ref name="destination" scoped="" ref="0x2b721096d4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b721096d640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b721096d7c8"/>
        <function-ref name="type" scoped="" ref="0x2b721096d950"/>
        <function-ref name="setType" scoped="" ref="0x2b721096dad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b721096dc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b721096dde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b721096c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b72109c2308" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b72109c2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72109c2658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72109c27e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72109c2968"/>
        <function-ref name="cancel" scoped="" ref="0x2b72109c2af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72109c2c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b72109c1020" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b72109c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72109c1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7210968460" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7210968460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72109687d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7210968958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210968ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7210968c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210968df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b72109c4d20" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b72109c4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72109c30a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72109c3228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72109c33b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72109c3538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72109c36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72109c5180" loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72109c5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72109c54f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b72109c3908" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72109c3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72109c3c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b72109c3de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72109c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b72109c5738" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b72109c5738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72109c5a88"/>
        <function-ref name="source" scoped="" ref="0x2b72109c5c10"/>
        <function-ref name="address" scoped="" ref="0x2b72109c5d98"/>
        <function-ref name="destination" scoped="" ref="0x2b72109c4020"/>
        <function-ref name="setSource" scoped="" ref="0x2b72109c41a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72109c4330"/>
        <function-ref name="type" scoped="" ref="0x2b72109c44b8"/>
        <function-ref name="setType" scoped="" ref="0x2b72109c4640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72109c47c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72109c4950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72109c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72109f8728" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72109f8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72109f8a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72109f8c00"/>
        <function-ref name="start" scoped="" ref="0x2b72109f8d88"/>
        <function-ref name="stop" scoped="" ref="0x2b72109f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b72109f6208" loc="52:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b72109f6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72109f6558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72109f66e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72109f6868"/>
        <function-ref name="cancel" scoped="" ref="0x2b72109f69f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72109f6b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72109f8110" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72109f8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72109f8460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72109f7760" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72109f7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72109f7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b72109f48f8" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72109f48f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72109f4c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72109f4dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b72109f3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72109f31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72109f3330"/>
        <function-ref name="get" scoped="" ref="0x2b72109f34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72109f3640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72109f3c60"/>
        <function-ref name="set" scoped="" ref="0x2b72109f37c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b72109f3950"/>
        <function-ref name="led2On" scoped="" ref="0x2b72109f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b72109f4020" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b72109f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b72109f4370"/>
        <function-ref name="offset" scoped="" ref="0x2b72109f44f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b72109f4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72109efd00" loc="66:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72109efd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72109ec0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72109ec228"/>
        <function-ref name="start" scoped="" ref="0x2b72109ec3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b72109ec538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b7210a3f830" loc="332:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b7210a3f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210a3fb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b7210a3fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b7210a18398" loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b7210a18398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210a186e8"/>
        <function-ref name="stop" scoped="" ref="0x2b7210a18870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b72109fcd70" loc="191:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b72109fcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72109fb0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72109fb278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72109ef6e8" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72109ef6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72109efa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b7210a15e40" loc="75:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b7210a15e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b7210a171c0"/>
        <function-ref name="flush" scoped="" ref="0x2b7210a17348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b7210a41020" loc="322:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b7210a41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210a41370"/>
        <function-ref name="runTask" scoped="" ref="0x2b7210a414f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b72109ddb38" loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b72109ddb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b72109e5020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b72109e51a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b72109e5330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b72109e54b8"/>
        <function-ref name="putData" scoped="" ref="0x2b72109e5640"/>
        <function-ref name="putDone" scoped="" ref="0x2b72109e57c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b72109e5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b72109e5bc8" loc="73:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72109e5bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72109e2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72109e21a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b72109e2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72109e24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72109e2640"/>
        <function-ref name="get" scoped="" ref="0x2b72109e27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72109e2950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7210a18020"/>
        <function-ref name="set" scoped="" ref="0x2b72109e2ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b72109e2c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b72109e2de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b7210a3b918" loc="341:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b7210a3b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210a3bc68"/>
        <function-ref name="runTask" scoped="" ref="0x2b7210a3bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b72109e7898" loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b72109e7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b72109e7be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b72109e7d70"/>
        <function-ref name="startSend" scoped="" ref="0x2b72109eb020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b72109eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b72109e3b48" loc="68:/home/rahul/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b72109e3b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b72109ea020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b72109ea1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b72109ea330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b7210b2e100" loc="275:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b7210b2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210b2e450"/>
        <function-ref name="runTask" scoped="" ref="0x2b7210b2e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7210af3020" loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7210af3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210af3390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7210af3518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7210af36a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7210af3828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210af39b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b7210b2e8a0" loc="158:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b7210b2e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7210b2ebf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7210b2ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7210af4868" loc="50:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7210af4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7210af4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b7210af3db8" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b7210af3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72100bf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b7210af2170"/>
        <function-ref name="offset" scoped="" ref="0x2b7210af22f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b7210af2480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7210b31a50" loc="57:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7210b31a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7210b31da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7210b2f020"/>
        <function-ref name="led1On" scoped="" ref="0x2b7210b2f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7210b2f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7210b2f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7210b2f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7210b2f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b7210b2fde8"/>
        <function-ref name="set" scoped="" ref="0x2b7210b2fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7210b2f950"/>
        <function-ref name="led0On" scoped="" ref="0x2b7210b2fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b7210b31020" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b7210b31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b7210b31370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b7210b314f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b7210b31680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b7210b31808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b7210af26c8" loc="55:/home/rahul/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b7210af26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b7210af2a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b7210af2ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b7210af2d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b7210b1c448" loc="50:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b7210b1c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b1c798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b7210b1c920"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b1caa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b7210b1cc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b7210b1cdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b7210b28020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210b281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b7210b2cb38" loc="48:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b7210b2cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b7210b29020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b7210b291a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b7210b29330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b7210b294b8"/>
        <function-ref name="putData" scoped="" ref="0x2b7210b29640"/>
        <function-ref name="putDone" scoped="" ref="0x2b7210b297c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b7210b29950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7210b28420" loc="51:/home/rahul/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7210b28420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7210b28770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7210b288f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b7210b28a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7210b28c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7210b28d90"/>
        <function-ref name="get" scoped="" ref="0x2b7210b27020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7210b271a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7210b277c8"/>
        <function-ref name="set" scoped="" ref="0x2b7210b27330"/>
        <function-ref name="led0On" scoped="" ref="0x2b7210b274b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b7210b27640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b7210b3c290" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b7210b3c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b3c5e0"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b3c768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b7210b430c0" loc="41:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b7210b430c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b43410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b7210b43598"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b43720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b7210b438a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b7210b43a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b7210b43bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210b43d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b7210b2b8b8" loc="40:/home/rahul/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b7210b2b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b2bc08"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b2bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b7210b41af8" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b7210b41af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b41e48"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b7210b3b310" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b7210b3b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b3b660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b7210b3b7e8"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b3b970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b7210b3baf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b7210b3bc80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b7210b3be08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210b3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7210b3a598" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210b3a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210b393a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210b39cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210b39830"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210b38190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b7210b41340" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b7210b41340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b41690"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b41818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b7210b34e58" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b7210b34e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b761e8"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b76370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b7210b755f8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b7210b755f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b75948"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b75ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210b34120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210b34120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210b34470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b7210b765f8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b7210b765f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7210b76948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b7210b76ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b7210b76c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b7210b76de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b7210b75020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b7210b751a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7210b75330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7210b73c60" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210b73c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210bb49f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210bb3330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210bb4e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210bb37b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b7210b745c0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b7210b745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7210b74910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7210b74a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210b74c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b7210b74da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7210b73020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7210b731a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7210b73330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7210b734b8"/>
        <function-ref name="tx" scoped="" ref="0x2b7210b73640"/>
        <function-ref name="rx" scoped="" ref="0x2b7210b737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b7210b346f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b7210b346f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b34a48"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b34bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b7210b75d98" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b7210b75d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b74170"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b742f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b7210b96860" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b7210b96860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7210b96bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7210b96d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210b95020"/>
        <function-ref name="txDone" scoped="" ref="0x2b7210b951a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7210b95330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7210b954b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7210b95640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7210b957c8"/>
        <function-ref name="tx" scoped="" ref="0x2b7210b95950"/>
        <function-ref name="rx" scoped="" ref="0x2b7210b95ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b7210bd6020" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b7210bd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7210bd6370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7210bd64f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210bd6680"/>
        <function-ref name="txDone" scoped="" ref="0x2b7210bd6808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7210bd6990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7210bd6b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7210bd6ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7210bd6e28"/>
        <function-ref name="tx" scoped="" ref="0x2b7210bd5020"/>
        <function-ref name="rx" scoped="" ref="0x2b7210bd51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b7210b96020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b7210b96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b96370"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b964f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b7210b95e58" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7210b95e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b941e8"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b94370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b7210b946f0" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7210b946f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b94a40"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b94bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b7210b97700" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7210b97700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210b97a50"/>
        <function-ref name="stop" scoped="" ref="0x2b7210b97bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b7210bd5e40" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b7210bd5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210bd21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b7210bd16d8" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b7210bd16d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7210bd1a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7210bd1bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210bd1d38"/>
        <function-ref name="txDone" scoped="" ref="0x2b7210bd0020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7210bd01a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7210bd0330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7210bd04b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7210bd0640"/>
        <function-ref name="tx" scoped="" ref="0x2b7210bd07c8"/>
        <function-ref name="rx" scoped="" ref="0x2b7210bd0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b7210bd0ca8" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b7210bd0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210bcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b7210bce550" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b7210bce550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7210bce8a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7210bcea28"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7210bcebb0"/>
        <function-ref name="txDone" scoped="" ref="0x2b7210bced38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7210bcd020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7210bcd1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7210bcd330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7210bcd4b8"/>
        <function-ref name="tx" scoped="" ref="0x2b7210bcd640"/>
        <function-ref name="rx" scoped="" ref="0x2b7210bcd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b7210bd2e18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b7210bd2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210bd11a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7210bd1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b7210bcf3e0" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7210bcf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210bcf730"/>
        <function-ref name="stop" scoped="" ref="0x2b7210bcf8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b7210bcfc78" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7210bcfc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210bce020"/>
        <function-ref name="stop" scoped="" ref="0x2b7210bce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b7210bcdae8" loc="90:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7210bcdae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b7210bcde38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7210bcc020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b7210bcc1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7210bcc330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b7210bcc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b7210bcc7c8" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7210bcc7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7210bccb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b7210bd2580" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7210bd2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7210bd28d0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210bd2a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210c37020" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210c37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210c37d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210c366b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210c36230"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210c36b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210c35d38" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210c35d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TThree" ref="0x2b720fda0aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210c32ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210c314a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210c31020"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210c31930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7210c28aa8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210c28aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7210c28df8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b7210c27020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7210c271a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b7210c27330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7210c274b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7210c27640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b7210c277c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b7210c27950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b7210c27ad8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b7210c27c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7210c26190" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7210c26190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7210c22310"/>
        <function-ref name="test" scoped="" ref="0x2b7210c23998"/>
        <function-ref name="get" scoped="" ref="0x2b7210c26d10"/>
        <function-ref name="captured" scoped="" ref="0x2b7210c256d0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c25ba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c23e20"/>
        <function-ref name="set" scoped="" ref="0x2b7210c251f8"/>
        <function-ref name="start" scoped="" ref="0x2b7210c23088"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c23510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7210c21020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7210c21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210c1e7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7210c20560"/>
        <function-ref name="get" scoped="" ref="0x2b7210c21ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c209e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c1ec30"/>
        <function-ref name="set" scoped="" ref="0x2b7210c20088"/>
        <function-ref name="start" scoped="" ref="0x2b7210c20e70"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c1e320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7210c2f9a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210c2f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210c2ab80"/>
        <function-ref name="test" scoped="" ref="0x2b7210c2a270"/>
        <function-ref name="get" scoped="" ref="0x2b7210c2c560"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210c28088"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210c28560"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c2b4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210c2b020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c2a6f8"/>
        <function-ref name="set" scoped="" ref="0x2b7210c2c9e8"/>
        <function-ref name="start" scoped="" ref="0x2b7210c2b930"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c2bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7210c5bc90" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7210c5bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7210c59020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b7210c591a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7210c59330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b7210c594b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7210c59640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7210c597c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b7210c59950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b7210c59ad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b7210c59c60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b7210c59de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b7210c55c48" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b7210c55c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210c514a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7210c521d0"/>
        <function-ref name="get" scoped="" ref="0x2b7210c53820"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c52658"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c51930"/>
        <function-ref name="set" scoped="" ref="0x2b7210c53ca8"/>
        <function-ref name="start" scoped="" ref="0x2b7210c52ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7210c58350" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7210c58350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7210c55580"/>
        <function-ref name="test" scoped="" ref="0x2b7210c56c20"/>
        <function-ref name="get" scoped="" ref="0x2b7210c57020"/>
        <function-ref name="captured" scoped="" ref="0x2b7210c57980"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c57e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c550f8"/>
        <function-ref name="set" scoped="" ref="0x2b7210c574a8"/>
        <function-ref name="start" scoped="" ref="0x2b7210c56310"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c56798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b7210c4f020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b7210c4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210c4d7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7210c4e560"/>
        <function-ref name="get" scoped="" ref="0x2b7210c4fba0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c4e9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c4dc30"/>
        <function-ref name="set" scoped="" ref="0x2b7210c4e088"/>
        <function-ref name="start" scoped="" ref="0x2b7210c4ee70"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c4d320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b7210c4c360" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b7210c4c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7210c49c20"/>
        <function-ref name="fired" scoped="" ref="0x2b7210c4a980"/>
        <function-ref name="get" scoped="" ref="0x2b7210c4a020"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c4ae08"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c480f8"/>
        <function-ref name="set" scoped="" ref="0x2b7210c4a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7210c49310"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c49798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7210c1dca8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210c1dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210c5cdb8"/>
        <function-ref name="test" scoped="" ref="0x2b7210c5c4a8"/>
        <function-ref name="get" scoped="" ref="0x2b7210c5f858"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210c5b270"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210c5b748"/>
        <function-ref name="reset" scoped="" ref="0x2b7210c5d6c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210c5d238"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210c5c930"/>
        <function-ref name="set" scoped="" ref="0x2b7210c5fce0"/>
        <function-ref name="start" scoped="" ref="0x2b7210c5db48"/>
        <function-ref name="stop" scoped="" ref="0x2b7210c5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7210cde940" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7210cde940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b720fceb388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b720fceb388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7210cdec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7210cdd098" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210cdd098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210cd9270"/>
        <function-ref name="test" scoped="" ref="0x2b7210cda930"/>
        <function-ref name="get" scoped="" ref="0x2b7210cddc18"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210cd96f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210cd9bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b7210cdba58"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210cdb5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210cdadb8"/>
        <function-ref name="set" scoped="" ref="0x2b7210cdb0f8"/>
        <function-ref name="start" scoped="" ref="0x2b7210cda020"/>
        <function-ref name="stop" scoped="" ref="0x2b7210cda4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210cd6950" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210cd6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TThree" ref="0x2b720fda0aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210cd5730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210cd4088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210cd5bb8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210cd4510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7210cd4a70" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7210cd4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7210cd0b80"/>
        <function-ref name="test" scoped="" ref="0x2b7210cd0270"/>
        <function-ref name="get" scoped="" ref="0x2b7210cd2658"/>
        <function-ref name="setScale" scoped="" ref="0x2b7210cce088"/>
        <function-ref name="getScale" scoped="" ref="0x2b7210cce560"/>
        <function-ref name="reset" scoped="" ref="0x2b7210cd14a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210cd1020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7210cd06f8"/>
        <function-ref name="set" scoped="" ref="0x2b7210cd2ae0"/>
        <function-ref name="start" scoped="" ref="0x2b7210cd1930"/>
        <function-ref name="stop" scoped="" ref="0x2b7210cd1db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b7210d107f8" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b7210d107f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TThree" ref="0x2b720fda0aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210d0f578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210d0d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210d0fa00"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210d0d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7210ccb610" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7210ccb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b720fd69588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b720fd698e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7210cc93a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7210cc9cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7210cc9830"/>
        <function-ref name="overflow" scoped="" ref="0x2b7210d10190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b7210d042b8" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b7210d042b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b7210d04608"/>
        <function-ref name="offset" scoped="" ref="0x2b7210d04790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b7210d04918"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b720fde3cc0" loc="62:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b720fde49a8" loc="60:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b720fde7de8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b720fde7b78" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b720fde94a8" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b720fde8020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b720fde9c30" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b720fde8aa8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b720fde8838" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b720fde7328" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b720fdffab0" loc="44:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b720fdfe1d8" loc="45:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b720fe00d20" loc="42:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b720fdfc020" loc="47:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b720fdff400" loc="43:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b720fdfe890" loc="46:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b720fe00020" loc="40:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b720fe00690" loc="41:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b720fe5a020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b720fe5b6e0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b720fe5a800" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b720fe4f020" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b720fe4e660" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b720fe4e3f0" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b720fe4fc60" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b720fe4f6c0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b720fe4f9e0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x2b720fe4edd8" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x2b720fe76b90" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x2b720fe83a48" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b720fe83328" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b720fe76428" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b720fe761b8" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b720fe74ad8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b720fe82178" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x2b720fe74378" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b720fe828a8" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b720fe81290" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b720fe81020" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b720fce6970" loc="57:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b720fce8878" loc="72:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b720fce80d8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b720fcf4608" loc="67:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b720fcf4df8" loc="75:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b720fdae450" loc="76:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b720fdc9d28" loc="62:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b720fd4a940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b720fdc76d8" loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b72100caa90" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b72100ca820" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b72100c7020" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b72100c8c18" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b72100cde78" loc="104:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b72100c82a8" loc="130:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b72100de718" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
              <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100cbdd0" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b72100de140" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72100de450" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b72100f5b08" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100f5898" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b72100e7b80" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100e7910" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b72100e9110" loc="68:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b72100e9b68" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100e98f8" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b72100fc450" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100fee60" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b72100fc1d0" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b72100fe020" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100fd900" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b72100fdc38" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b72100f9768" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100f94f8" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b72100f89d8" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100f8458" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b72100f8758" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b72100c2b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b72100fb600" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100fb390" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b72100f6020" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72100f4920" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b72100f4c50" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b72100f6d88" loc="195:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b72100f25b8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100f2348" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b72100f15b8" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100f1348" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72100ee6c8" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100ee100" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72100ee410" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b72100ed828" loc="106:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b72100f0950" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100f03c0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72100f06d0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b72100ff070" loc="61:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b72100ff7a8" loc="67:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b7210116020" loc="72:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b7210116e70" loc="83:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b7210114480" loc="100:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7210114c18" loc="117:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b7210116738" loc="77:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7210112768" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b72101124f8" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b7210101900" loc="56:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b7210115608" loc="89:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b7210115d20" loc="94:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b72100d00c8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b72100d1788" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b72100d1ae8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72100d1df8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72100e23c0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100e4dc8" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72100e2108" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b72100e45c0" loc="123:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72100e6370" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100e6100" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b72100e57a0" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72100e51f8" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b72100e5520" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b721018adb0" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b721018adb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b721019d020" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721019d020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b721019bcb8" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721019d020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b721019ba48" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b7210199020" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b721019cca8" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b721019db40" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b721019d8d0" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72101972a0" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721019d020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7210199c48" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b7210197020" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721019d020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b72101a7d88" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101a77a0" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b72101a7b08" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b72101a5020" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101a6c48" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b72101a7020" loc="57:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b72101a85c0" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b72101a8350" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b72101a23b0" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101a2140" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b72101a14e8" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101a1278" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b721019f5b8" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b721019f348" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b72101c36c8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101c3458" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b72101c4780" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101c4510" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72101bf4e8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101bf278" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72101c05b8" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101c0348" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b72101b5d08" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101b5a98" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b72101cf428" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101d2e48" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72101cf1a8" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72101cb6c8" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101cb100" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72101cb410" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b72101e68a8" loc="112:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72101ce670" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101ce400" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b72101cda70" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72101cd4c8" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b72101cd7f0" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x2b721022a918" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x2b721022a178" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x2b7210226108" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b7210228e38" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x2b7210228108" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b721022ce48" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b721027e420" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b721027e420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b721027e650" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721027e650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b721027d118" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721027e650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b721027ee78" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721027e650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b721027a378" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b721027a378"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b721027abe8" loc="58:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b72102798e8" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b721027a378"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b7210279368" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b7210279668" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b721027a378"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b7210270ac0" loc="52:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b7210270328" loc="46:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2b7210272580" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x2b7210272ca8" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x2b7210260db8" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7210260b48" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7210273c98" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7210273c98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7210285760" loc="136:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b721026b110" loc="83:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b721026ad40" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b721026a7a8" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b721026aac0" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b721026a070" loc="98:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b72102846b0" loc="151:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b7210285e80" loc="144:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b721026b888" loc="92:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b721026d7a0" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b721026d530" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b7210268d28" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7210268790" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7210268aa8" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b721026c290" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b721026c020" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b721026ca38" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x2b721025f578" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x2b721025f308" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x2b721025b650" loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x2b721025a8c8" loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x2b721025e0a8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x2b721025fe08" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x2b7210259290" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x2b7210259020" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b721024fbf0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x2b7210259a68" loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x2b721025ce40" loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b721025c020" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x2b7210275258" loc="147:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b721025c730" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b721025e930" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x2b721025a0a8" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x2b721025bde0" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b721024e700" loc="95:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b721024d020" loc="105:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x2b721024cc58" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b721024c9e8" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2b7210266cc8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x2b7210264650" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b72102626f0" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x2b72102665b0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x2b7210265d68" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x2b7210265af8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x2b721024b3a0" loc="32:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x2b721024ada8" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x2b721024ab38" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b721024a3e0" loc="44:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b72102653e0" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x2b721024bc10" loc="39:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
              <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x2b7210262020" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72103177d8" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72103177d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b72103130d8" loc="61:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b720f380608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b7210403870" loc="120:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b7210404960" loc="97:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b7210404070" loc="88:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b7210403110" loc="102:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b7210401290" loc="128:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b72104b5020" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b72104b66f8" loc="59:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b72104b89a0" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b72104b89a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b72104b1258" loc="55:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b72104b0020" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b72104b89a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b72104b1968" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b72104b1c68" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b72104b89a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b72104c5768" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b72104c6a60" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b72104c6db8" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b72104c5178" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b72104c54c8" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b72104c33f0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72104c4368" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b72104c4688" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b72104c49c0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b72104c4d70" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b72104c3140" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b72104ca020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b72104cb250" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b72104cb5a8" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b72104cb910" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b72104cbc60" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72104c8898" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b72104c8020" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72104caa28" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b72104cad48" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b72104d90d8" loc="114:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b72104e11d8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd67020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b720fd674d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b72104d7338" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b72104d70c8" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b72104d9918" loc="122:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b72104ded18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b72104e1bb0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd67020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b720fd674d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b72104e1940" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd67020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b720fd674d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b72104ddb88" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b72104d8870" loc="133:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72104d7ad0" loc="150:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b72104dd448" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b72104dca48" loc="99:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b72104dc328" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b72104da1d8" loc="106:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b72104d80d8" loc="127:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b72104e0dd0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd6da10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b720fd6b178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b72104e0b60" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd6da10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b720fd6b178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b72104da990" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b72104e03e0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b720fd6da10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b720fd6b178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b72104de5b8" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b72104d5640" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72104d53d0" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b72104bc020" loc="95:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b72104bc7f8" loc="105:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b7210557c98" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b72105545c0" loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b7210552a78" loc="56:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b7210550a70" loc="73:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b7210552258" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b72105502a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b721054f360" loc="81:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b721054d020" loc="90:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b721054d810" loc="98:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b721056d020" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7210549218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b721056ec60" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7210549218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b721056f0d8" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b721056fb58" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7210549218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b721056f8e8" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7210549218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b721056e428" loc="70:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b7210549218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b72105d8c20" loc="62:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b7210644020" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7210644020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b7210644ac8" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7210644020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b7210644858" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7210644020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72106903f8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72106903f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7210690628" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210690628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b721068f020" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210690628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b721068d070" loc="76:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b721068f838" loc="71:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b721068d760" loc="82:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b721066d0f0" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b721066d0f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b721066d320" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7210669bd8" loc="109:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b721066cd78" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b72106692a0" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b721066acc8" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b7210669020" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b721066a518" loc="88:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b72106683a0" loc="116:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b721066dde0" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b721066db70" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b721066d320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b721066c628" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b7210696a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd77a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b720fd77e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b7210692e18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd84100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b720fd84508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b7210693c70" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7c980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b720fd7cd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b7210692678" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7c980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b720fd7cd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b7210692408" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7c980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b720fd7cd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b72106be828" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd84100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b720fd84508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b72106be5b8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd84100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b720fd84508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b72106934c8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd77a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b720fd77e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7210693258" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd77a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b720fd77e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b72106b1998" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b72106af1d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b72106b1290" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b72106af988" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b72106b20d8" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7e118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b720fd7e520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b72106b2a88" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7e118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b720fd7e520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b72106b2818" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd7e118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b720fd7e520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b72106bc020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72106bc020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b72106b8738" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b72106bb9d0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b72106bc8d8" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72106bc020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b72106ba110" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b72106b7020" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72106bb290" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72106bc020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b72106bb020" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72106bc020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b72106ba808" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b72106b8020" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b72106a1418" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b72106a1418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b721069c900" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b721069da40" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b72106a1cb8" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b72106a1418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b721069a290" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b721069a020" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b721069aa10" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b721069e4c0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b72106a0d50" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b721069c1d8" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72106a0630" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b72106a1418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b72106a03c0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b72106a1418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b721069ebb8" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b721069d328" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b721080b648" loc="50:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b72108094d0" loc="60:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b721080bda8" loc="55:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b721080ee38" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b721080e880" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b72100c0020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b721080ebb8" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b72100c03d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b721083c3e0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fda3928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b720fda3d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b721083e0a8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8e478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b720fd8e880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7210840dc8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8e478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b720fd8e880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b721083d258" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd99578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b720fd99980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b7210845c18" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8ada8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b720fd89228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b721083dc18" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd99578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b720fd99980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b721083d9a8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd99578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b720fd99980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b721083cda0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fda3928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b720fda3d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b721083cb30" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fda3928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b720fda3d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b7210841c20" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8c890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b720fd8cc98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b7210841470" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8e478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b720fd8e880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b7210840640" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8ada8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b720fd89228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b72108403d0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8ada8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b720fd89228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b721083ea78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8c890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b720fd8cc98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b721083e808" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b720fd8c890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b720fd8cc98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b7210843b68" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b7210869648" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b72108693d8" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b721086b568" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7210838498" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b72108377c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7210837558" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7210836020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b721086bcb8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7210838dd0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7210838b60" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7210843b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7210836718" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7210836e00" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b72109f1640" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72109f1060" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b72109f13c0" loc="31:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b72109f5950" loc="15:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b72109f2760" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72109f2198" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b72100d49e0"/>
                <typename><typedef-ref name="message_t" ref="0x2b72100d1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b72109f24e0" loc="23:/home/rahul/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b7210a15b60" loc="54:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b7210a15450" loc="49:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b72109e11d8" loc="56:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b72109df528" loc="72:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b72109dd020" loc="94:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72109ded60" loc="94:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b72109dfd40" loc="79:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b72109e1cc8" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72109e1a58" loc="65:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b72109dd818" loc="100:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b72109de5b8" loc="85:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b72109e8020" loc="71:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b72109e88d8" loc="81:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b72109e96c8" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b72109e9458" loc="62:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b72109e7430" loc="91:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b72109e71c0" loc="91:/home/rahul/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b72109e4020" loc="62:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b72109e4bc8" loc="69:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72109e4958" loc="69:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b72109e3640" loc="80:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b72109e33d0" loc="80:/home/rahul/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b7210b26b50" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b7210b265b0" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7210b268d0" loc="48:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b7210b214e0" loc="79:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b7210b21270" loc="79:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b7210b202a0" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b7210b21c58" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7210b20020" loc="90:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b7210b22258" loc="65:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b7210b1fa38" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b7210b1f160" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7210b1f480" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b7210b1f7a8" loc="99:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b7210b22ad0" loc="72:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7210b25358" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b7210b249f8" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7210b24d18" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b720f37fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b7210b250c8" loc="57:/home/rahul/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b7210b42bb8" loc="46:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b7210b42948" loc="46:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b7210b3f9b0" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b7210b3f3f8" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b7210b3f730" loc="56:/home/rahul/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b7210b6c578" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b7210b6d738" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b7210b69c08" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7210b69998" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b7210b6ac08" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b7210b70800" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b7210b6d020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b7210b6de58" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b720fced1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b7210b6cc58" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b720fce49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b7210b6a578" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7210b6a308" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b7210b69328" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b720f37f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
