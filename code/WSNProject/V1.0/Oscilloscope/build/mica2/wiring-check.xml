<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="35:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad1482cd020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad148370020"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad148370020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad1485a8640"/></to>
    </wire>
    <wire loc="36:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ad1482d66f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad1485b6080"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad1485b6080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad1485eb638"/></to>
    </wire>
    <wire loc="37:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad1482f8958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad14923dd20"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad14923dd20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad149946978"/></to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad1482d4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad149236e38"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad149236e38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad1485b41c8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148307c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148dd96e0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148dd96e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2ad148305d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148dd3be8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148dd3be8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer3" scoped="" ref="0x2ad14830c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148e06020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148e06020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148314020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148e00dc0"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148e00dc0"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x2ad148df8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:OscilloscopeAppC.nc">
      <from><interface-ref name="Read2" scoped="" ref="0x2ad148313780"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148f440a0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148f440a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148f3e788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:OscilloscopeAppC.nc">
      <from><interface-ref name="Read3" scoped="" ref="0x2ad14831d020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1491e2380"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad1491e2380"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fea6f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad14832fc38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad148dce568"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad148dce568"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad148dcae08"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14993f980"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad149896d88"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1497b2d10"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14978c020"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad149768dc8"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1497181d8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148a91e40"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148a816a0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14957e3a0"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14868fb78"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14883ac10"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad1485a8c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad1481d5be8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad1481d5be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad148294448"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad1485a76a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad14836f3b8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad14836f3b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1483733a0"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad1485a7d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad14836b148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148d25020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad14836b148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1488f0d48"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148375430"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148597d18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ad148372140"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1485976e8"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ad148373a40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148ddf2d8"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ad148373a40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad14836a950"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad14836a950"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837a358"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad14836a950"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837cb38"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad14837d020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ad14836b148"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837cb38"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad1483d35f0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837cb38"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad1484034d8"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2ad148383808"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ad148430e00"/></to>
    </wire>
    <wire loc="141:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ad148430e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484b4740"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad148379980"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ad14837d020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x2ad1483dbc28"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2ad14842d1a0"/></to>
    </wire>
    <wire loc="143:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ad14842d1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad1484b1a50"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x2ad1483d1df0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ad14843c968"/></to>
    </wire>
    <wire loc="168:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ad14843c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484df430"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x2ad1483da020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2ad14844ec78"/></to>
    </wire>
    <wire loc="170:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ad14844ec78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad1484dd740"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x2ad1483d9198"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2ad14844de00"/></to>
    </wire>
    <wire loc="171:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ad14844de00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad1484dc8c8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x2ad148400060"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2ad14842a658"/></to>
    </wire>
    <wire loc="147:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ad14842a658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484bfd60"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x2ad14840b1c8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2ad148428968"/></to>
    </wire>
    <wire loc="149:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ad148428968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484bb020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x2ad14840a350"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2ad1484297e0"/></to>
    </wire>
    <wire loc="148:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ad1484297e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484bee18"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x2ad1484094c0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ad1484361a0"/></to>
    </wire>
    <wire loc="153:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ad1484361a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad1484b75b8"/></to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ad148461968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad148546970"/></to>
    </wire>
    <wire loc="165:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ad14843f4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484cc020"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493db100"/></to>
    </wire>
    <wire loc="176:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ad1484474d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484e8d60"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484e8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149414100"/></to>
    </wire>
    <wire loc="185:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ad1484521a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484ee5b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484ee5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494a8100"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad1484b1a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149288100"/></to>
    </wire>
    <wire loc="183:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ad148455e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484f12a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484f12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494ae100"/></to>
    </wire>
    <wire loc="146:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ad14842b4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484c0bd0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484c0bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14931c180"/></to>
    </wire>
    <wire loc="157:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ad148433658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484c4740"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484c4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14934e100"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484df430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493d2100"/></to>
    </wire>
    <wire loc="179:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ad148458968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad1484e3120"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad1484e3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14945e100"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ad148420968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484a12a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484a12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149297100"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484bb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149313100"/></to>
    </wire>
    <wire loc="160:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ad148444af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1484c1bd8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1484c1bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149395100"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad1484dc8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493c9100"/></to>
    </wire>
    <wire loc="188:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ad148463658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad148501a50"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad148501a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14949f100"/></to>
    </wire>
    <wire loc="194:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ad14845d348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14854f020"/></to>
    </wire>
    <wire loc="174:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ad14844a1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484eaa50"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484eaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14941a100"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484b4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14928e100"/></to>
    </wire>
    <wire loc="152:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ad148437020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad1484b8430"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad1484b8430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14930a100"/></to>
    </wire>
    <wire loc="192:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ad14845f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad148541ab0"/></to>
    </wire>
    <wire loc="155:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ad148435348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484c6500"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484c6500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149354180"/></to>
    </wire>
    <wire loc="166:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ad14843e658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484e1120"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484e1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493d8100"/></to>
    </wire>
    <wire loc="177:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ad148446658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484e7e18"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484e7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149464100"/></to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ad148451348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484ed740"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484ed740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494a5100"/></to>
    </wire>
    <wire loc="144:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ad14842c348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad1484b0bd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad1484b0bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1492d1100"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484bfd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149319100"/></to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ad1484327e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484c38c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484c38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14934b100"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ad14844faf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1484de5b8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1484de5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493cf100"/></to>
    </wire>
    <wire loc="180:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ad148457af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad1484e22a8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad1484e22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14945b100"/></to>
    </wire>
    <wire loc="139:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ad14841faf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484a0430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484a0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149294100"/></to>
    </wire>
    <wire loc="150:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ad14843aaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484ba120"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484ba120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149310100"/></to>
    </wire>
    <wire loc="161:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ad148443c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad1484d6d60"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad1484d6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149392100"/></to>
    </wire>
    <wire loc="189:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ad1484627e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad148500bd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad148500bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14949c100"/></to>
    </wire>
    <wire loc="164:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ad148440020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484cee40"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484cee40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493de180"/></to>
    </wire>
    <wire loc="175:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ad148449348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484e9bd8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484e9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149417100"/></to>
    </wire>
    <wire loc="184:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ad148453020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad1484ef430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484ef430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494ab100"/></to>
    </wire>
    <wire loc="195:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ad14845c4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14854a180"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ad14842e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1484b38c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1484b38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14928b100"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad1484b75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149306100"/></to>
    </wire>
    <wire loc="182:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ad148456c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484f21e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484f21e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494b1180"/></to>
    </wire>
    <wire loc="156:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ad1484344d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad1484c55b8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad1484c55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149351100"/></to>
    </wire>
    <wire loc="167:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ad14843d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484e02a8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484e02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493d5100"/></to>
    </wire>
    <wire loc="178:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ad1484597e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1484e4020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1484e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149461100"/></to>
    </wire>
    <wire loc="187:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ad1484504d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1485028c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1485028c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1494a2100"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ad1483f2780"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484a21e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484a21e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14929a1e8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad1484bee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149316100"/></to>
    </wire>
    <wire loc="159:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ad148445968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad1484c2a50"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad1484c2a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149348100"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad1484dd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad1493cc100"/></to>
    </wire>
    <wire loc="193:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ad14845e1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14853cc38"/></to>
    </wire>
    <wire loc="173:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ad14844b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad1484eb930"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad1484eb930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14941d180"/></to>
    </wire>
    <wire loc="162:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ad148442e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad1484d5e18"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad1484d5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14938f100"/></to>
    </wire>
    <wire loc="140:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ad148431c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad1484b55b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad1484b55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad149291100"/></to>
    </wire>
    <wire loc="151:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ad148439e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad1484b92a8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad1484b92a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad14930d100"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1482922b0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ad14829b758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ad1482b7660"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad1482b22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad148b4b268"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad1485eb638"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad14866c140"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad1485b5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad1485fe5f0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad1485fe5f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad148617ba0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad1485b4d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad1485fb348"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad1485fb348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad148615968"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad1485c21f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad1485f9020"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad1485f9020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad14866a020"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad1485f1860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad1485f7738"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad1485f7738"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad148661510"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad1485ec080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148619e18"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148619e18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148668668"/></to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad1485b41c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad1485fd7a0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad1485fd7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad148616dc0"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485e1cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485f9cb8"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485f9cb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1486695a0"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad1485fb938"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad1485fb938"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad148613020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad1485f2968"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad14860c670"/></to>
    </wire>
    <wire loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad14860c670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad148679478"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad14866c140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad14868d2e8"/></to>
    </wire>
    <wire loc="133:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad148679478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad14875b130"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad14866a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad148744888"/></to>
    </wire>
    <wire loc="132:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad148661510"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad14873f218"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148619338"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148675020"/></to>
    </wire>
    <wire loc="134:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148675020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148759bd0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148668668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad14868cd80"/></to>
    </wire>
    <wire loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1486695a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad148742e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad1485f5ce0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad148668020"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad148668020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad1487417b8"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad1486228a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad14866cba0"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad14866cba0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad1487455a8"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad148611668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad14866b8d0"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad14866b8d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad1487442b0"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2ad148610d58"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2ad148c3b6f0"/></to>
    </wire>
    <wire loc="88:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad148611cc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad14866a020"/></to>
    </wire>
    <wire loc="101:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x2ad1486650f0"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x2ad14868dd88"/></to>
    </wire>
    <wire loc="102:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x2ad148663d78"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x2ad14868c5b0"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2ad1486ac9a0"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2ad148875620"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad1486c3130"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad148a84208"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad148a84208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad148a7f080"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad1486a83d0"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad1488632f0"/></to>
    </wire>
    <wire loc="110:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x2ad1486c3a80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148a82a60"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148a82a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x2ad14869ad18"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x2ad1487435d8"/></to>
    </wire>
    <wire loc="112:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x2ad14868b9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148746818"/></to>
    </wire>
    <wire loc="113:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x2ad1486a38c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ad148746e18"/></to>
    </wire>
    <wire loc="115:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2ad148758828"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2ad148875620"/></to>
    </wire>
    <wire loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad1487553e8"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad1488ea908"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad1488ea908"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad14840cb98"/></to>
    </wire>
    <wire loc="117:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2ad148752cf0"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2ad148c3b6f0"/></to>
    </wire>
    <wire loc="118:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x2ad1487532a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2ad1488386d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad148754788"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad1488632f0"/></to>
    </wire>
    <wire loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2ad1486b8e80"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2ad1488386d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x2ad1486bb808"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2ad1488386d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x2ad1486b5060"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2ad1488386d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x2ad1486d2a48"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x2ad1488361d8"/></to>
    </wire>
    <wire loc="125:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ad1486bc748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ad148c5d568"/></to>
    </wire>
    <wire loc="127:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x2ad1488584b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x2ad1488ec4e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x2ad1488ec4e0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2ad148a63680"/></to>
    </wire>
    <wire loc="128:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148853620"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x2ad1488ebb80"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ad1488ebb80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488e4980"/></to>
    </wire>
    <wire loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x2ad148873118"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2ad1488e9bf8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x2ad1488e9bf8"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2ad1483df748"/></to>
    </wire>
    <wire loc="130:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ad148873e48"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ad148c5d568"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad148d7de48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad148c82638"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad148c82638"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad148d66c50"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad14874e660"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad148c83c38"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad148750870"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad148ab4c48"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad148ab4c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad148c21128"/></to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x2ad1486cd508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x2ad1486d4d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x2ad1486fb190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x2ad1486f6770"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x2ad1487ce3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x2ad1487e0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2ad148a63680"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2ad1488ff620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1488e4980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148a62c70"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x2ad1483db1f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148a62c70"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148a61578"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad1488e0a08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148a59680"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2ad1488ff620"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2ad148a28428"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148a6b720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488fb050"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148a259a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2ad148a6c060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148a2a6a0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad148a27b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad1488f1cb8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad1488f1cb8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad14890d488"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2ad1489129b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2ad14890dde0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1489fb840"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1489fb840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad14957b9c0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1489f83c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad148922940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad14893f020"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad14893f020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad1489621e8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148909d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148375430"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1489f5060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad14890bc10"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489f5d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489fadd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489fadd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149579020"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ad148960640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ad1482b4a80"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1489fa698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad14957a820"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1489f99d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149579bd8"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149578570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1489f83c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad149578cf0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14957e978"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad149576da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad14959ee38"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1489f5060"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1495f8590"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1489f5780"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1495f8b28"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489f5d18"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1495f7710"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148a09908"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2ad148a404d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ad148a861a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ad148a80020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad148a88310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148a816a0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a8db68"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a8db68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148c315e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad148a91e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148aae2c0"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad148aae2c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148bb01f0"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ad148c2b858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148be7ab0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad148be2c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad148aa5838"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad148aa5838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad148bb0998"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad148c4b330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ad148acae40"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ad148acae40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad148baca90"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad148baca90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad1495dbca8"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad148bb01f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad1495df398"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad148bb0998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad1495dfb40"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad1495d8020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148b36de8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148b36de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148b550f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad1495d4e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b2e020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b2e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b50160"/></to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad1495d3d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad148b2d020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad148b2d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad148b4e190"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ad1495cfdb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ad148b29228"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ad148b29228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ad148b4b968"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ad148bdecf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ad148c25930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ad148d82e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad148c7d3a0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad148c7d3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad148d495a8"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148d6f6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148c77098"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148c77098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148c89020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148c71140"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148cb7020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ad148c95b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad148cb6680"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad148c929c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ad148cb3e60"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad148c929c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ad148cad2b8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad148c929c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ad148caa698"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ad148ca6a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b2e020"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148d25740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148c77098"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148d78e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad148ddf2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad148dca840"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad148dc5540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ad148dc8d60"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad148dc8d60"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ad14841faf0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad148dc47d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ad148de1020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad148de1020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ad148420968"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad148dc3958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ad148de01b0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad148de01b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ad1483f2780"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x2ad148df49d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad14965ca10"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad14965ca10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1488e0a08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad14965a020"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2ad148dec9a8"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x2ad148dec9a8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2ad148e20108"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x2ad148df8020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148f24020"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x2ad148df6c98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148f1d790"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148f1f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148defbc8"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148defbc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148edfa58"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2ad148f22860"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x2ad148df49d0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148f58720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148defbc8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2ad148f1b060"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x2ad148df16a8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x2ad148e24398"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2ad148e20ad0"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148edfa58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad149715830"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f2b0e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148edc020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148edc020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149714dd8"/></to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f2bc98"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148edcbd8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148edcbd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1497139d8"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad148f180e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148e23550"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148e1f5f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148ee6dc0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148ee6dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x2ad148e1a690"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x2ad148e3a020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2ad148e3a020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2ad148445968"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x2ad148e16560"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2ad148e27d00"/></to>
    </wire>
    <wire loc="95:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2ad148e27d00"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2ad148e5b060"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x2ad148e16c00"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2ad148e263c0"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2ad148e263c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2ad148e5b6d0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2ad148e0a190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2ad148e31020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad148ebf728"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2ad148e28980"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2ad148e5fc28"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2ad148e3cde0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2ad1484327e0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2ad148e38328"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2ad148443c78"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2ad148e26a30"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2ad148e5bd40"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2ad148e357d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2ad1484597e0"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2ad148e29808"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2ad14843d7e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2ad148e3ead0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2ad1484344d0"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2ad148e30858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad148ef6728"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2ad148e27020"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2ad148e5c340"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2ad148e2a680"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2ad14843e658"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2ad148e374b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2ad148442e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2ad148e2c2b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad148ecf060"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2ad148e61340"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2ad148e5a3f8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2ad148e34958"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2ad148458968"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2ad148e3dc58"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2ad148433658"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2ad148e39180"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2ad148444af0"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2ad148e27690"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2ad148e5c9b0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2ad148e36648"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2ad148446658"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2ad148e31ba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ad148ef9020"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2ad148e2b4f8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2ad14844faf0"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2ad148e619b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2ad148e5aa68"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2ad148e41970"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2ad148435348"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2ad148e33ae0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2ad148457af0"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ecfb10"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2ad148e45b38"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2ad148e45b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148ead180"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ebe2e8"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2ad148e44b38"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2ad148e44b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148ea8020"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ef9ad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2ad148e7fb38"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2ad148e7fb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148ea5cd8"/></to>
    </wire>
    <wire loc="89:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ef52e8"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2ad148e7eb38"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2ad148e7eb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148ea09d8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2ad148e4cc88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148ebacf8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2ad148e4bb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148eb57e8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2ad148e48da0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148e94258"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2ad148e46b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ad148eb13e0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148e80060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2ad148e76850"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb9b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2ad148e79020"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb45f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2ad148e79758"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb02e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2ad148e77020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eab020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2ad148e77758"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148ea8de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2ad148e75020"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148ea4b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2ad148e75758"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ad148e9f908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2ad148e74020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148edd820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149714698"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1497123e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148edb550"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad149712b68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497187b0"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad149710da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad14973b740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148f180e0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14973a268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f18b10"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14973a800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f2b0e0"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1497393f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f2bc98"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2ad149739b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2ad149738470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad14965a020"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1488fb050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad14965a8c8"/></to>
    </wire>
    <wire loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148f3e788"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fbfd58"/></to>
    </wire>
    <wire loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2ad148fbc5e8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x2ad148f741c8"/></to>
    </wire>
    <wire loc="46:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x2ad148f741c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fa2288"/></to>
    </wire>
    <wire loc="12:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148fbbca0"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x2ad148f77020"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2ad148f77020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148f5fb28"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x2ad148f3cc58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148f64910"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148f64910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad149789630"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148f5fb28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1497af4b0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x2ad148f763f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fb01c0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f98800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f63dd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f63dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149788ac8"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f973f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f629d8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f629d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149787700"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad148f996d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148fb1540"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2ad148faf7d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148f707c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148fad4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148fd65e8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148fd65e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2ad148fa84a0"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x2ad148e357d0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2ad148fa76c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fd0aa8"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148fd0aa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1488e0a08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f93268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f5c268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f5c268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1497ae940"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f93e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f5ce20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f5ce20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad14980f578"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad148f951c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148fa3600"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2ad148fa18f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148f707c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad148f9f680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad148fd65e8"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2ad148f9a5d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x2ad148e41970"/></to>
    </wire>
    <wire loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2ad148fda848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad148fd0aa8"/></to>
    </wire>
    <wire loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fcd060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148f6f2d8"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x2ad148f6fce8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2ad148e27020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f69510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149763200"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f69c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149763940"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148f707c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1497654b0"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f67888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149762578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149762e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f66140"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad1497615d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497673f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad14975f5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f63698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149788388"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149786020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f613c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad1497867a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14978c5f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad149784908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f5d9a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1497ae200"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad14980fe18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f5b6d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad14980d5d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497b1328"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad14980b5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad14983cd58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148f996d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14983b7b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f98268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14983bd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f98800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad14983a940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f973f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2ad149839120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2ad1498398c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad149825020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148f951c8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad149825a50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f95bf8"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149823020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f93268"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149823bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f93e20"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2ad149822470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2ad149822c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2ad148fa6d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2ad148fd9e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fcd060"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1488fb050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148fcd908"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2ad1491e1a08"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2ad148fe0c10"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2ad148fe0c10"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2ad14901c188"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2ad148fe7538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1498485f0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad1498485f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1488e0a08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad149847ba0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fe0300"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fe0300"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2ad14901b438"/></to>
    </wire>
    <wire loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2ad148fea6f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2ad1491a5020"/></to>
    </wire>
    <wire loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1491a1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad148fe1598"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad148fe1598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1491b7d88"/></to>
    </wire>
    <wire loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2ad1491a3860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x2ad148fe7538"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1491b7d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad14993c060"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b1800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b5268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b5268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14993a4c0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491af3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491b5e20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491b5e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1499390e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad1491b26d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad148fdd668"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad14901a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad1491bd020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad1491bd020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x2ad1490150b8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2ad148e3cde0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x2ad1490143a8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x2ad148e38328"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x2ad1490136d8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2ad148e33ae0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x2ad1490129b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2ad148e27690"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2ad149006c30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2ad14917b020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2ad14917b020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2ad14904f9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2ad149003828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad14905e1d0"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad14905e1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad149050538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x2ad149002710"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x2ad148e30858"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad149050538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad14909a140"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2ad14904f9b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2ad1490aa020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2ad1490a7c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad149061d80"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad149061d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1498934b0"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad1490a5a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2ad14910d700"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2ad1490e6420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2ad14914f318"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1490a0600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1490e1e60"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14909f2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1490a3268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1490a3268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149892940"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2ad14914f930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2ad149146830"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2ad149146830"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2ad14913e1d8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2ad14914c2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad149194358"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2ad14914b908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad149194358"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149060af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149892200"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1490a3e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149890578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149890e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1490a26d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad14988f5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad1498953f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad14988d5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2ad14913cb50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2ad148440020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2ad14913be08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2ad14843f4d0"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1491b6af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad14993cd58"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149939980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1491b46d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad149938130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14993e020"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad1499362e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad14996c780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad1491b26d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14996b268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1491b1268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14996b800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b1800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1499693f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491af3f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2ad149969b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2ad149968470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad149847ba0"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad1488fb050"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149846578"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad149946978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad1499a1378"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad14923c908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad149945578"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad149945578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad1485c21f0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad14923b578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad149944268"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad149944268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad14923abd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad1499438c8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad1499438c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485e1cb0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad1499a0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad1492034f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad1499a0bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad1492034f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad149251920"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad14924f6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad1485b5020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad14924e3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad14924da10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad1485c21f0"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ad14924c780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ad14924b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad149230408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad1485c21f0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad14922f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rahul/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad148ac9c50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="TOne" ref="0x2ad14828d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="TOne" ref="0x2ad14828d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2ad14828c020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rahul/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer" loc="44(OscilloscopeAppC.Timer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer2" loc="44(OscilloscopeAppC.Timer2):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer3" loc="44(OscilloscopeAppC.Timer3):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1" loc="18(OscilloscopeAppC.Sensor1):/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1.AdcX" loc="21(OscilloscopeAppC.Sensor1.AdcX):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor2" loc="18(OscilloscopeAppC.Sensor2):/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3" loc="40(OscilloscopeAppC.Sensor3):/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor3.AdcReadClientC):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad14846c750" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad14846ca98" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad14846cde0" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad148471020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad148471388" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad1484716f0" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad148471a20" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad14850d020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad14850d388" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad14850d6f0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad14850da20" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ad14897db08" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ad148992748" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2ad1489c55c0" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2ad148a581d0" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2ad148a581d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad148ac9c50" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad148ac9c50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad148ac4020" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad148aba410" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad148aba410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad148aba700" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad148aafc60" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad148aafc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad148bdbcd0" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad148bdbcd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ad148bd8020" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad148c239f8" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad148c239f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ad148d27e50" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148d27e50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2ad148d5b1e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ad148d28740" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ad148d28740"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ad148d48020" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148d48020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ad148d65550" loc="55:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ad148d65550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ad148d65cb8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ad148d65cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ad148d640a8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ad148d640a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ad148d64820" loc="58:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ad148d64820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ad148d64bc8" loc="59:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ad148d62380" loc="60:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ad148d62380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2ad148e93020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2ad148e93388" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2ad148e936f0" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad148e93a20" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TempC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MicC" loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ad1490455a0" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2ad149040d20" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad1491dfe18" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad1491d8950" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad1491cf380" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ad149200738" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad149238d08" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2ad1482cd020" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad1482cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad1482cd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ad1482f8958" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad1482f8958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1482f8ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1482f8e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1482d5020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1482d51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1482d5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ad1482d66f0" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ad1482d66f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad1482d6a40"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad1482d6bc8"/>
        <function-ref name="start" scoped="" ref="0x2ad1482d6d50"/>
        <function-ref name="stop" scoped="" ref="0x2ad1482da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer3" ref="0x2ad14830c020" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer3" scoped="" ref="0x2ad14830c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad1483162b8"/>
        <function-ref name="fired" scoped="" ref="0x2ad148319978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad1483186c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148318278"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148316b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148316708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148319dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad14830cb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148318c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148319088"/>
        <function-ref name="stop" scoped="" ref="0x2ad148319528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2ad148314020" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148314020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148314b68"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148313020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read2" ref="0x2ad148313780" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read2" scoped="" ref="0x2ad148313780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad14831e370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad14831e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2ad1482d4020" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad1482d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1482d4370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read3" ref="0x2ad14831d020" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read3" scoped="" ref="0x2ad14831d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad14831db68"/>
        <function-ref name="readDone" scoped="" ref="0x2ad14831c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad14832fc38" loc="32:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad14832fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad14831b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad14831b1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ad14831b330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad14831b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad14831b640"/>
        <function-ref name="get" scoped="" ref="0x2ad14831b7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad14831b950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad14831a020"/>
        <function-ref name="set" scoped="" ref="0x2ad14831bad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad14831bc60"/>
        <function-ref name="led2On" scoped="" ref="0x2ad14831bde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2ad148305d20" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2ad148305d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad14830d088"/>
        <function-ref name="fired" scoped="" ref="0x2ad148310688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad14830f470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad14830f020"/>
        <function-ref name="getdt" scoped="" ref="0x2ad14830d928"/>
        <function-ref name="gett0" scoped="" ref="0x2ad14830d4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148310ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad1483118b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad14830fa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148311d58"/>
        <function-ref name="stop" scoped="" ref="0x2ad148310238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148307c00" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148307c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148306e78"/>
        <function-ref name="fired" scoped="" ref="0x2ad1483045a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad1483062d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148304e48"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148305748"/>
        <function-ref name="gett0" scoped="" ref="0x2ad1483052f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad1483049f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad1482f97e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad1483068a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad1482f9c88"/>
        <function-ref name="stop" scoped="" ref="0x2ad148304158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ad14836d4c8" loc="58:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad14836d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14836d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad148370020" loc="57:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad148370020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad148370370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad14836b148" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad14836b148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14836b498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14836f3b8" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14836f3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14836f708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ad148375430" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148375430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ad148375780"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ad148375908"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ad148375a90"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ad148375c18"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ad148375da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ad148373a40" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ad148373a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148373d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1483733a0" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1483733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1483736f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ad148372140" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ad148372140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148372490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad14837d020" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad14837d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14837d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad14836a950" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad14836a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14836aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad148379980" loc="19:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad148379980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148379cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ad148383808" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ad148383808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148383b58"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148383ce0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148383e68"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148379020"/>
        <function-ref name="get" scoped="" ref="0x2ad1483791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148379330"/>
        <function-ref name="set" scoped="" ref="0x2ad1483794b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148379640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad14837a358" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14837a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad14837cb38" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad14837cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14838d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x2ad1483da020" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x2ad1483da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1483da370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1483da4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1483da680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1483da808"/>
        <function-ref name="get" scoped="" ref="0x2ad1483da990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1483dab18"/>
        <function-ref name="set" scoped="" ref="0x2ad1483daca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1483dae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x2ad1483dbc28" loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x2ad1483dbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1483d1020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1483d11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1483d1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1483d14b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1483d1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1483d17c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1483d1950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1483d1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x2ad1483db1f8" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x2ad1483db1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad1483db548"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad1483db6d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad1483db858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x2ad1483d1df0" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x2ad1483d1df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1483dd170"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1483dd2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1483dd480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1483dd608"/>
        <function-ref name="get" scoped="" ref="0x2ad1483dd790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1483dd918"/>
        <function-ref name="set" scoped="" ref="0x2ad1483ddaa0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1483ddc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad1483d35f0" loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad1483d35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1483d3940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x2ad1483d9198" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x2ad1483d9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1483d94e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1483d9670"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1483d97f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1483d9980"/>
        <function-ref name="get" scoped="" ref="0x2ad1483d9b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1483d9c90"/>
        <function-ref name="set" scoped="" ref="0x2ad1483d9e18"/>
        <function-ref name="clr" scoped="" ref="0x2ad1483d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2ad1483df748" loc="55:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2ad1483df748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1483dfa98"/>
        <function-ref name="read" scoped="" ref="0x2ad1483dfc20"/>
        <function-ref name="write" scoped="" ref="0x2ad1483dfda8"/>
        <function-ref name="getLOCK" scoped="" ref="0x2ad1483d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2ad14840cb98" loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad14840cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2ad148401020"/>
        <function-ref name="initSlave" scoped="" ref="0x2ad1484011a8"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad148401330"/>
        <function-ref name="writeByte" scoped="" ref="0x2ad1484014b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad148401640"/>
        <function-ref name="txMode" scoped="" ref="0x2ad1484017c8"/>
        <function-ref name="readByte" scoped="" ref="0x2ad148401950"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad148401ad8"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad148401c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x2ad148400060" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x2ad148400060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484003b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148400538"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484006c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148400848"/>
        <function-ref name="get" scoped="" ref="0x2ad1484009d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148400b58"/>
        <function-ref name="set" scoped="" ref="0x2ad148400ce0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148400e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad1484034d8" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad1484034d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148403828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x2ad14840b1c8" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x2ad14840b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14840b518"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14840b6a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14840b828"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14840b9b0"/>
        <function-ref name="get" scoped="" ref="0x2ad14840bb38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14840bcc0"/>
        <function-ref name="set" scoped="" ref="0x2ad14840be48"/>
        <function-ref name="clr" scoped="" ref="0x2ad14840a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x2ad14840a350" loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x2ad14840a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14840a6a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14840a828"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14840a9b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14840ab38"/>
        <function-ref name="get" scoped="" ref="0x2ad14840acc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14840ae48"/>
        <function-ref name="set" scoped="" ref="0x2ad148409020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484091a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x2ad1484094c0" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x2ad1484094c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148409810"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148409998"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148409b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148409ca8"/>
        <function-ref name="get" scoped="" ref="0x2ad148409e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148408020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484081a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148408330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ad148461968" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ad148461968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484600f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148460278"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148460400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148460588"/>
        <function-ref name="get" scoped="" ref="0x2ad148460710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148460898"/>
        <function-ref name="set" scoped="" ref="0x2ad148460a20"/>
        <function-ref name="clr" scoped="" ref="0x2ad148460ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ad14843f4d0" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ad14843f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14843f820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14843f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14843fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14843fcb8"/>
        <function-ref name="get" scoped="" ref="0x2ad14843fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14843e020"/>
        <function-ref name="set" scoped="" ref="0x2ad14843e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14843e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ad1484474d0" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ad1484474d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148447820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484479a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148447b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148447cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad148447e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148446020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484461a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148446330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ad1484521a0" loc="94:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ad1484521a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484524f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148452678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148452800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148452988"/>
        <function-ref name="get" scoped="" ref="0x2ad148452b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148452c98"/>
        <function-ref name="set" scoped="" ref="0x2ad148452e20"/>
        <function-ref name="clr" scoped="" ref="0x2ad148451020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ad14842d1a0" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ad14842d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842d678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842d988"/>
        <function-ref name="get" scoped="" ref="0x2ad14842db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14842dc98"/>
        <function-ref name="set" scoped="" ref="0x2ad14842de20"/>
        <function-ref name="clr" scoped="" ref="0x2ad14842c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ad148455e00" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ad148455e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484541a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148454330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484544b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148454640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484547c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148454950"/>
        <function-ref name="set" scoped="" ref="0x2ad148454ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148454c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ad14842b4d0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ad14842b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842b820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842bcb8"/>
        <function-ref name="get" scoped="" ref="0x2ad14842be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14842a020"/>
        <function-ref name="set" scoped="" ref="0x2ad14842a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14842a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ad148433658" loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ad148433658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484339a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148433b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148433cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148433e40"/>
        <function-ref name="get" scoped="" ref="0x2ad148432020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484321a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148432330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ad14843c968" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ad14843c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14843ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14843ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad14844f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad14844f640"/>
        <function-ref name="clr" scoped="" ref="0x2ad14844f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ad148458968" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ad148458968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148458cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148458e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148457020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484571a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148457330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484574b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148457640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ad148420968" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ad148420968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148420cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148420e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14841f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14841f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad14841f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14841f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad14841f640"/>
        <function-ref name="clr" scoped="" ref="0x2ad14841f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ad148428968" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ad148428968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148428cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148428e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14843a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14843a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad14843a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14843a4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad14843a640"/>
        <function-ref name="clr" scoped="" ref="0x2ad14843a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ad148444af0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ad148444af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148444e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148443020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148443330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148443640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484437c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148443950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ad14844de00" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ad14844de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14844c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14844c330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844c640"/>
        <function-ref name="get" scoped="" ref="0x2ad14844c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844c950"/>
        <function-ref name="set" scoped="" ref="0x2ad14844cad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14844cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ad148463658" loc="97:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ad148463658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484639a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148463b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148463cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148463e40"/>
        <function-ref name="get" scoped="" ref="0x2ad148462020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484621a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148462330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ad14845d348" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ad14845d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14845d698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14845d820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14845d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14845db30"/>
        <function-ref name="get" scoped="" ref="0x2ad14845dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14845de40"/>
        <function-ref name="set" scoped="" ref="0x2ad14845c020"/>
        <function-ref name="clr" scoped="" ref="0x2ad14845c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ad14844a1a0" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ad14844a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14844a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14844a678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844a988"/>
        <function-ref name="get" scoped="" ref="0x2ad14844ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844ac98"/>
        <function-ref name="set" scoped="" ref="0x2ad14844ae20"/>
        <function-ref name="clr" scoped="" ref="0x2ad148449020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ad148430e00" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ad148430e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842f330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842f640"/>
        <function-ref name="get" scoped="" ref="0x2ad14842f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14842f950"/>
        <function-ref name="set" scoped="" ref="0x2ad14842fad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14842fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ad148437020" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ad148437020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148437370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484374f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148437680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148437808"/>
        <function-ref name="get" scoped="" ref="0x2ad148437990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148437b18"/>
        <function-ref name="set" scoped="" ref="0x2ad148437ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148437e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ad14845f020" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ad14845f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14845f370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14845f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14845f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14845f808"/>
        <function-ref name="get" scoped="" ref="0x2ad14845f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14845fb18"/>
        <function-ref name="set" scoped="" ref="0x2ad14845fca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad14845fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ad148435348" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ad148435348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148435698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148435820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484359a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148435b30"/>
        <function-ref name="get" scoped="" ref="0x2ad148435cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148435e40"/>
        <function-ref name="set" scoped="" ref="0x2ad148434020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ad14843e658" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ad14843e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14843e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14843eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14843ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14843ee40"/>
        <function-ref name="get" scoped="" ref="0x2ad14843d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14843d1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad14843d330"/>
        <function-ref name="clr" scoped="" ref="0x2ad14843d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ad148446658" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ad148446658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484469a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148446b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148446cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148446e40"/>
        <function-ref name="get" scoped="" ref="0x2ad148459020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484591a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148459330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ad148451348" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ad148451348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148451698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148451820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484519a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148451b30"/>
        <function-ref name="get" scoped="" ref="0x2ad148451cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148451e40"/>
        <function-ref name="set" scoped="" ref="0x2ad148450020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ad14842c348" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ad14842c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842c698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842c820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842cb30"/>
        <function-ref name="get" scoped="" ref="0x2ad14842ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14842ce40"/>
        <function-ref name="set" scoped="" ref="0x2ad14842b020"/>
        <function-ref name="clr" scoped="" ref="0x2ad14842b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ad14842a658" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ad14842a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842ae40"/>
        <function-ref name="get" scoped="" ref="0x2ad148429020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484291a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148429330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ad1484327e0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ad1484327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148432b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148432cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148432e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148445020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148445330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484454b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148445640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ad14844faf0" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ad14844faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14844fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14844e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844e330"/>
        <function-ref name="get" scoped="" ref="0x2ad14844e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844e640"/>
        <function-ref name="set" scoped="" ref="0x2ad14844e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14844e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ad148457af0" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ad148457af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148457e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148456020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484561a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148456330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484564b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148456640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484567c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148456950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ad14841faf0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ad14841faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14841fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148431020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484311a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148431330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484314b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148431640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484317c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148431950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ad14843aaf0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ad14843aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148439020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484391a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148439330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484394b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148439640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484397c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148439950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148439ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ad148443c78" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ad148443c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148442020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484421a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148442330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484424b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148442640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484427c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148442950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148442ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ad1484627e0" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ad1484627e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148462b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148462cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148462e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148461020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148461330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484614b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148461640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ad148440020" loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ad148440020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148440570"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484406f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148440880"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148440a08"/>
        <function-ref name="get" scoped="" ref="0x2ad148440b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148440d18"/>
        <function-ref name="set" scoped="" ref="0x2ad14843f020"/>
        <function-ref name="clr" scoped="" ref="0x2ad14843f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ad148449348" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ad148449348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148449698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148449820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484499a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148449b30"/>
        <function-ref name="get" scoped="" ref="0x2ad148449cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148449e40"/>
        <function-ref name="set" scoped="" ref="0x2ad148447020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ad148453020" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ad148453020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148453370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484534f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148453680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148453808"/>
        <function-ref name="get" scoped="" ref="0x2ad148453990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148453b18"/>
        <function-ref name="set" scoped="" ref="0x2ad148453ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148453e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ad14845c4d0" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ad14845c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14845c820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14845c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14845cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14845ccb8"/>
        <function-ref name="get" scoped="" ref="0x2ad14845ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14845b020"/>
        <function-ref name="set" scoped="" ref="0x2ad14845b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14845b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ad14842e020" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ad14842e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14842e370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14842e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14842e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14842e808"/>
        <function-ref name="get" scoped="" ref="0x2ad14842e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14842eb18"/>
        <function-ref name="set" scoped="" ref="0x2ad14842eca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad14842ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ad1484361a0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ad1484361a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484364f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148436678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148436800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148436988"/>
        <function-ref name="get" scoped="" ref="0x2ad148436b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148436c98"/>
        <function-ref name="set" scoped="" ref="0x2ad148436e20"/>
        <function-ref name="clr" scoped="" ref="0x2ad148435020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ad148456c78" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ad148456c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148455020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484551a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148455330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484554b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148455640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484557c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148455950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148455ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ad1484344d0" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ad1484344d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148434820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484349a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148434b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148434cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad148434e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148433020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484331a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148433330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ad14843d7e0" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ad14843d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14843db30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14843dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14843de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14843c020"/>
        <function-ref name="get" scoped="" ref="0x2ad14843c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14843c330"/>
        <function-ref name="set" scoped="" ref="0x2ad14843c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14843c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ad1484597e0" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ad1484597e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148459b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148459cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148459e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148458020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148458330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484584b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148458640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ad1484504d0" loc="96:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ad1484504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148450820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484509a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148450b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148450cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad148450e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148463020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484631a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148463330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ad1483f2780" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ad1483f2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1483f2ad0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1483f2c58"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1483f2de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148420020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148420330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484204b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148420640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ad1484297e0" loc="57:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ad1484297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148429b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148429cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148429e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148428020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148428330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484284b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148428640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ad148445968" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ad148445968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148445cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148445e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148444020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484441a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148444330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484444b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148444640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ad14844ec78" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ad14844ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14844d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14844d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844d4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad14844d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad14844d950"/>
        <function-ref name="clr" scoped="" ref="0x2ad14844dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ad14845e1a0" loc="102:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ad14845e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14845e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14845e678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14845e800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14845e988"/>
        <function-ref name="get" scoped="" ref="0x2ad14845eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14845ec98"/>
        <function-ref name="set" scoped="" ref="0x2ad14845ee20"/>
        <function-ref name="clr" scoped="" ref="0x2ad14845d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ad14844b020" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ad14844b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14844b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14844b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14844b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14844b808"/>
        <function-ref name="get" scoped="" ref="0x2ad14844b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14844bb18"/>
        <function-ref name="set" scoped="" ref="0x2ad14844bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad14844be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ad148442e00" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ad148442e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484411a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148441330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148441640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148441950"/>
        <function-ref name="set" scoped="" ref="0x2ad148441ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148441c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ad148431c78" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ad148431c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148430020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484301a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148430330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484304b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148430640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484307c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148430950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148430ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ad148439e00" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ad148439e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484381a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148438330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148438640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148438950"/>
        <function-ref name="set" scoped="" ref="0x2ad148438ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148438c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484a0430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484a0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484a0780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484a0908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484a0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484a0c18"/>
        <function-ref name="get" scoped="" ref="0x2ad1484a0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b5020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b51a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1484b38c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1484b38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b3c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b3da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b11a8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b14b8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b1640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484a21e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484a21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484a2538"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484a26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484a2848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484a29d0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484a2b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484a2ce0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484a2e68"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484b55b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484b55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b5908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b5c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b5da0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b41a8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b4330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad1484b1a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad1484b1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b1da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b0020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b0330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b0640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b07c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484a12a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484a12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484a15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484a1780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484a1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484a1a90"/>
        <function-ref name="get" scoped="" ref="0x2ad1484a1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484a1da0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484a0020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484b4740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b4c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b3020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b3330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad1484b0bd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad1484b0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484af020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484af1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484af330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484af4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484af640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484af7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484af950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484afad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14929a1e8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14929a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14929a538"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14929a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14929a848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14929a9d0"/>
        <function-ref name="get" scoped="" ref="0x2ad14929ab58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14929ace0"/>
        <function-ref name="set" scoped="" ref="0x2ad14929ae68"/>
        <function-ref name="clr" scoped="" ref="0x2ad149299020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149297100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149297100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149297450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1492975d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149297760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1492978e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149297a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149297bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149297d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149294100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149294100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149294450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1492945d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149294760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1492948e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149294a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149294bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149294d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149293020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149291100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149291100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149291450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1492915d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149291760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1492918e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149291a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149291bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149291d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149290020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14928e100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14928e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14928e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14928e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14928e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14928e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14928ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14928ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14928ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14928d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14928b100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14928b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14928b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14928b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14928b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14928b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14928ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14928bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14928bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14928a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149288100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149288100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149288450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1492885d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149288760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1492888e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149288a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149288bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149288d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1492d1100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1492d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1492d1450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1492d15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1492d1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1492d18e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1492d1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1492d1bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1492d1d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1492d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484bee18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484bee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484bc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484bc330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484bc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484bc640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484bc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484bc950"/>
        <function-ref name="set" scoped="" ref="0x2ad1484bcad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484bcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1484b92a8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1484b92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b95f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b9780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b9908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b9a90"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b9da0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b8020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484c0bd0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484c0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484bf020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484bf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484bf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484bf4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484bf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484bf7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484bf950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484bb020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484bb370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484bb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484bb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484bb808"/>
        <function-ref name="get" scoped="" ref="0x2ad1484bb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484bbb18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484bbca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484bbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad1484b8430" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad1484b8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b8780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b8908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b8c18"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b8da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b7020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b71a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484bfd60" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484bfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484be0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484be260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484be3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484be570"/>
        <function-ref name="get" scoped="" ref="0x2ad1484be6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484be880"/>
        <function-ref name="set" scoped="" ref="0x2ad1484bea08"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484beb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484ba120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484ba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484ba470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484ba5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484ba780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484ba908"/>
        <function-ref name="get" scoped="" ref="0x2ad1484baa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484bac18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484bada0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad1484b75b8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad1484b75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484b7908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484b7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484b7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484b7da0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484b6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484b61a8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484b6330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484b64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14931c180" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14931c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14931c4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14931c658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14931c7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14931c968"/>
        <function-ref name="get" scoped="" ref="0x2ad14931caf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14931cc78"/>
        <function-ref name="set" scoped="" ref="0x2ad14931ce00"/>
        <function-ref name="clr" scoped="" ref="0x2ad14931b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149319100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149319100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149319450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493195d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149319760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493198e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149319a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149319bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149319d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149318020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149316100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149316100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149316450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493165d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149316760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493168e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149316a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149316bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149316d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149315020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149313100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149313100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149313450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493135d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149313760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493138e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149313a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149313bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149313d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149312020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149310100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149310100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149310450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493105d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149310760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493108e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149310a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149310bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149310d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14930f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14930d100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14930d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14930d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14930d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14930d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14930d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14930da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14930dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14930dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14930c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14930a100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14930a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14930a450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14930a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14930a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14930a8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14930aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14930abf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14930ad80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149306100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149306100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149306450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493065d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149306760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493068e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149306a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149306bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149306d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149305020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484c4740" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484c4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484c4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484c4c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484c4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484c3020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484c3330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1484c1bd8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1484c1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484d6020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484d61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484d6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484d64b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484d6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484d67c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484d6950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484d6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484c6500" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484c6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484c6850"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484c69d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484c6b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484c6ce8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484c6e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484c5020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484c51a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484c38c8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484c38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484c3c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484c3da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484c21a8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484c24b8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484c2640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad1484d6d60" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad1484d6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484d50d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484d5260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484d53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484d5570"/>
        <function-ref name="get" scoped="" ref="0x2ad1484d56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484d5880"/>
        <function-ref name="set" scoped="" ref="0x2ad1484d5a08"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484c55b8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484c55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484c5908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484c5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484c5c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484c5da0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484c41a8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484c4330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484c2a50" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484c2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484c2da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484c1020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484c11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484c1330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484c14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484c1640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484c17c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad1484d5e18" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad1484d5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484d41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484d4330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484d44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484d4640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484d47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484d4950"/>
        <function-ref name="set" scoped="" ref="0x2ad1484d4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484d4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149354180" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149354180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493544d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad149354658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493547e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad149354968"/>
        <function-ref name="get" scoped="" ref="0x2ad149354af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149354c78"/>
        <function-ref name="set" scoped="" ref="0x2ad149354e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad149353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149351100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149351100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149351450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493515d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149351760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493518e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149351a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149351bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149351d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14934e100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14934e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14934e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14934e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14934e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14934e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14934ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14934ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14934ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14934d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14934b100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14934b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14934b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14934b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14934b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14934b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14934ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14934bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14934bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14934a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149348100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149348100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149348450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493485d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149348760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493488e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149348a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149348bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149348d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149397020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149395100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149395100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149395450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493955d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149395760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493958e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149395a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149395bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149395d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149392100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149392100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149392450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493925d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149392760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493928e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149392a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149392bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149392d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14938f100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14938f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14938f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14938f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14938f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14938f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14938fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14938fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14938fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14938d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484e1120" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484e1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e1470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e1908"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e1c18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e1da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1484de5b8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1484de5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484de908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484dea90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484dec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484deda0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484dd1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484dd330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484cee40" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484cee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484cd348"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484cd4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484cd658"/>
        <function-ref name="get" scoped="" ref="0x2ad1484cd7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484cd968"/>
        <function-ref name="set" scoped="" ref="0x2ad1484cdaf0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484cdc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484e02a8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484e02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e0780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e0a90"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e0da0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484df020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad1484dd740" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad1484dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484dda90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484ddc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484ddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484dc020"/>
        <function-ref name="get" scoped="" ref="0x2ad1484dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484dc330"/>
        <function-ref name="set" scoped="" ref="0x2ad1484dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484cc020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484cc370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484cc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484cc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484cc808"/>
        <function-ref name="get" scoped="" ref="0x2ad1484cc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484ccb18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ccca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484cce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484df430" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484df430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484df780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484df908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484dfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484dfc18"/>
        <function-ref name="get" scoped="" ref="0x2ad1484dfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484de020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484de1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad1484dc8c8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad1484dc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484dcc18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484dcda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484da020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484da1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484da330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484da4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484da640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493de180" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493de180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493de4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493de658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493de7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493de968"/>
        <function-ref name="get" scoped="" ref="0x2ad1493deaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493dec78"/>
        <function-ref name="set" scoped="" ref="0x2ad1493dee00"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493db100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493db450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493db760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493db8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493dbbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493dbd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493d8100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493d8450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493d85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493d8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493d88e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493d8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493d8bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493d8d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493d5100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493d5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493d55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493d5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493d58e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493d5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493d5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493d5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493d2100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493d2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493d28e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493d2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493d2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493cf100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493cf450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493cf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493cf760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493cf8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493cfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493cfbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493cfd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493cc100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493cc450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493cc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493cc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493cc8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493cca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493ccbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493ccd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1493c9100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1493c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1493c9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1493c95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1493c9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1493c98e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1493c9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1493c9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1493c9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1493c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484e9bd8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484e9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e84b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e87c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e8950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1484e4020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1484e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e4370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e4808"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e4b18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484eb930" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484eb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484ebc80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484ebe08"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484ea1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484ea330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484ea4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ea640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484e8d60" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484e8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e7260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e7570"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e7880"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e7a08"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad1484e3120" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad1484e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e3470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e3908"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e3c18"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e3da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484eaa50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484eaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484eada0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e9330"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e9640"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e97c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484e7e18" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484e7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e5330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e5640"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e5950"/>
        <function-ref name="set" scoped="" ref="0x2ad1484e5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad1484e22a8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad1484e22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484e25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484e2780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484e2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484e2a90"/>
        <function-ref name="get" scoped="" ref="0x2ad1484e2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484e2da0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484f7020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14941d180" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14941d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14941d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14941d658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14941d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14941d968"/>
        <function-ref name="get" scoped="" ref="0x2ad14941daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14941dc78"/>
        <function-ref name="set" scoped="" ref="0x2ad14941de00"/>
        <function-ref name="clr" scoped="" ref="0x2ad14941c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14941a100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14941a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14941a450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14941a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14941a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14941a8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14941aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14941abf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14941ad80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149417100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149417100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149417450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494175d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149417760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494178e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149417a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149417bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149417d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149414100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149414100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149414450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494145d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149414760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494148e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149414a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149414bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149414d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149466020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149464100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149464100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149464450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494645d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149464760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494648e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149464a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149464bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149464d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149463020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad149461100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad149461100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149461450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494615d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149461760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494618e8"/>
        <function-ref name="get" scoped="" ref="0x2ad149461a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149461bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad149461d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad149460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14945e100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14945e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14945e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14945e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14945e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14945e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14945ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14945ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14945ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14945d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14945b100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14945b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14945b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14945b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14945b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14945b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14945ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14945bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14945bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14945a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad1484ef430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad1484ef430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484ef780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484ef908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484efa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484efc18"/>
        <function-ref name="get" scoped="" ref="0x2ad1484efda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484ee020"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ee1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484ee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad1485028c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad1485028c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148502c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148502da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148501020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1485011a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148501330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1485014b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148501640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1485017c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad1484f21e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad1484f21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484f2538"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484f26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484f2848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484f29d0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484f2b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484f2ce0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484f2e68"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad1484ee5b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad1484ee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484ee908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484eea90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484eec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484eeda0"/>
        <function-ref name="get" scoped="" ref="0x2ad1484ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484ed1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ed330"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad148501a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad148501a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148501da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148500020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1485001a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148500330"/>
        <function-ref name="get" scoped="" ref="0x2ad1485004b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148500640"/>
        <function-ref name="set" scoped="" ref="0x2ad1485007c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148500950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad1484f12a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad1484f12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484f15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484f1780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484f1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484f1a90"/>
        <function-ref name="get" scoped="" ref="0x2ad1484f1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484f1da0"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ef020"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad1484ed740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad1484ed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484eda90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484edc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148502020"/>
        <function-ref name="get" scoped="" ref="0x2ad1485021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148502330"/>
        <function-ref name="set" scoped="" ref="0x2ad1485024b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148502640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad148500bd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad148500bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484ff020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1484ff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1484ff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1484ff4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1484ff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1484ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad1484ff950"/>
        <function-ref name="clr" scoped="" ref="0x2ad1484ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494b1180" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494b1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494b14d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494b1658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494b17e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494b1968"/>
        <function-ref name="get" scoped="" ref="0x2ad1494b1af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494b1c78"/>
        <function-ref name="set" scoped="" ref="0x2ad1494b1e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494ae100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494ae450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494ae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494ae760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494ae8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1494aea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494aebf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1494aed80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494ab100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494ab450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494ab5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494ab760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494ab8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1494aba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494abbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1494abd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494a8100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494a8450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494a85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494a8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494a88e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1494a8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494a8bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1494a8d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494a5100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494a5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494a55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494a5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494a58e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1494a5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494a5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1494a5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1494a2100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1494a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1494a2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1494a25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1494a2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1494a28e8"/>
        <function-ref name="get" scoped="" ref="0x2ad1494a2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1494a2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad1494a2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad1494a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14949f100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14949f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14949f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14949f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14949f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14949f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14949fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14949fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14949fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14949e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14949c100" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14949c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14949c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14949c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14949c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14949c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad14949ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14949cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad14949cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad14949b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1484f8ac0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1484f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1484f8e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14850f020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14850f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14850f330"/>
        <function-ref name="get" scoped="" ref="0x2ad14850f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14850f640"/>
        <function-ref name="set" scoped="" ref="0x2ad14850f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14850f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad148521db8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad148521db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148520170"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1485202f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148520480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148520608"/>
        <function-ref name="get" scoped="" ref="0x2ad148520790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148520918"/>
        <function-ref name="set" scoped="" ref="0x2ad148520aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148520c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14851b3e0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14851b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14851b730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14851b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14851ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14851bbc8"/>
        <function-ref name="get" scoped="" ref="0x2ad14851bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14851a020"/>
        <function-ref name="set" scoped="" ref="0x2ad14851a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14851a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14852e7e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14852e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14852eb38"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14852ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14852ee48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14852d020"/>
        <function-ref name="get" scoped="" ref="0x2ad14852d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14852d330"/>
        <function-ref name="set" scoped="" ref="0x2ad14852d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14852d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad148529c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad148529c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148528020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1485281a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148528330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1485284b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148528640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1485287c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148528950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148528ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14853b020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14853b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14853b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14853b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14853b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14853b808"/>
        <function-ref name="get" scoped="" ref="0x2ad14853b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14853bb18"/>
        <function-ref name="set" scoped="" ref="0x2ad14853bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad14853be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad148537480" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad148537480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1485377d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148537958"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148537ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148537c68"/>
        <function-ref name="get" scoped="" ref="0x2ad148537df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148536020"/>
        <function-ref name="set" scoped="" ref="0x2ad1485361a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148536330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad1485327e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad1485327e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148532b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148532cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148532e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148531020"/>
        <function-ref name="get" scoped="" ref="0x2ad1485311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148531330"/>
        <function-ref name="set" scoped="" ref="0x2ad1485314b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148531640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad148546970" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad148546970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148546cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148546e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148544020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1485441a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148544330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1485444b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148544640"/>
        <function-ref name="clr" scoped="" ref="0x2ad1485447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad148541ab0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad148541ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148541e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148540020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad1485401a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148540330"/>
        <function-ref name="get" scoped="" ref="0x2ad1485404b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148540640"/>
        <function-ref name="set" scoped="" ref="0x2ad1485407c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148540950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14853cc38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14853cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148553020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad1485531a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148553330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1485534b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148553640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad1485537c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148553950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148553ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14854f020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14854f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14854f370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14854f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14854f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14854f808"/>
        <function-ref name="get" scoped="" ref="0x2ad14854f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14854fb18"/>
        <function-ref name="set" scoped="" ref="0x2ad14854fca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad14854fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad14854a180" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad14854a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14854a4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14854a658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14854a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14854a968"/>
        <function-ref name="get" scoped="" ref="0x2ad14854aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14854ac78"/>
        <function-ref name="set" scoped="" ref="0x2ad14854ae00"/>
        <function-ref name="clr" scoped="" ref="0x2ad148549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1485976e8" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1485976e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ad1481d86f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ad1481d86f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148597a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ad148597d18" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148597d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ad1485960a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ad148596228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ad1485963b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ad148596538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ad1485966c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ad1485a7d70" loc="60:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad1485a7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1485a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad1485a8640" loc="57:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad1485a8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad1485a8990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ad1485a76a8" loc="59:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad1485a76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1485a79f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ad1485a8c78" loc="58:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad1485a8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1485a7020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad1485a71a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad1485a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad1481e0728" loc="48:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ad1481e0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1481e0a78"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1481e0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad1481d5be8" loc="47:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad1481d5be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1481d7020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad1481d71a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad1481d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad1482922b0" loc="56:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ad1482922b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148292600"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148292788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ad14829b758" loc="57:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ad14829b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad14829baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad148294448" loc="55:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad148294448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148294798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad148294920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad148294aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ad1482b22b0" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad1482b22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad1482b2600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ad1482b7660" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ad1482b7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad1482b79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ad1482b4a80" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ad1482b4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad1482b4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad1485b6080" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad1485b6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad1485b63d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad1485b6558"/>
        <function-ref name="start" scoped="" ref="0x2ad1485b66e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad1485b6868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad1485b5020" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad1485b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1485b5370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1485b54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1485b5680"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1485b5808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1485b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad1485b4d10" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad1485b4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1485b30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad1485c21f0" loc="65:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad1485c21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad1485c2540"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad1485c26c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1485c2850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1485c29d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad1485c2b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad1485f1860" loc="69:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad1485f1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad1485f0cc0"/>
        <function-ref name="clear" scoped="" ref="0x2ad1485ee420"/>
        <function-ref name="isValid" scoped="" ref="0x2ad1485f05e0"/>
        <function-ref name="set" scoped="" ref="0x2ad1485eeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad1485ec080" loc="70:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad1485ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad1485ec3d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad1485ec558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad1485ec6e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad1485ec868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad1485b41c8" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad1485b41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1485b4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad1485e1cb0" loc="67:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485e1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad1485cd0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad1485cd228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad1485cd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad1485e6b58" loc="66:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad1485e6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad1485cb020"/>
        <function-ref name="source" scoped="" ref="0x2ad1485cb1a8"/>
        <function-ref name="address" scoped="" ref="0x2ad1485cb330"/>
        <function-ref name="destination" scoped="" ref="0x2ad1485cb4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad1485cb640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad1485cb7c8"/>
        <function-ref name="type" scoped="" ref="0x2ad1485cb950"/>
        <function-ref name="setType" scoped="" ref="0x2ad1485cbad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad1485cbc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad1485cbde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad1485c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad1485f2968" loc="68:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad1485f2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad1485e5e10"/>
        <function-ref name="clear" scoped="" ref="0x2ad1485dd558"/>
        <function-ref name="isValid" scoped="" ref="0x2ad1485e5730"/>
        <function-ref name="set" scoped="" ref="0x2ad1485ddc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad1485eb638" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad1485eb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad1485eb988"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad1485ebb10"/>
        <function-ref name="start" scoped="" ref="0x2ad1485ebc98"/>
        <function-ref name="stop" scoped="" ref="0x2ad1485ebe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad14860c670" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad14860c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad14860aad0"/>
        <function-ref name="clear" scoped="" ref="0x2ad1486091f0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad14860a3f0"/>
        <function-ref name="set" scoped="" ref="0x2ad1486098d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad1485fe5f0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad1485fe5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1485fe940"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1485feac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1485fec50"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1485fedd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1485fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad1485fb348" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad1485fb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1485fb698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad1485f9020" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad1485f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad1485f9370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad1485f94f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1485f9680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1485f9808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad1485f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad1485f7738" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad1485f7738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad1485f4c58"/>
        <function-ref name="clear" scoped="" ref="0x2ad14860d380"/>
        <function-ref name="isValid" scoped="" ref="0x2ad1485f4578"/>
        <function-ref name="set" scoped="" ref="0x2ad14860da60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad148619338" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148619338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148619688"/>
        <function-ref name="isSet" scoped="" ref="0x2ad148619810"/>
        <function-ref name="cancel" scoped="" ref="0x2ad148619998"/>
        <function-ref name="set" scoped="" ref="0x2ad148619b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad1485fd7a0" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad1485fd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1485fdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad148619e18" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148619e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad1486071a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad148607330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad1486074b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad148607640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad1485f9cb8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1485f9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad1485f80a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad1485f8228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad1485f83b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad1485fb938" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad1485fb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad1485fbc88"/>
        <function-ref name="source" scoped="" ref="0x2ad1485fbe10"/>
        <function-ref name="address" scoped="" ref="0x2ad1485fa020"/>
        <function-ref name="destination" scoped="" ref="0x2ad1485fa1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad1485fa330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad1485fa4b8"/>
        <function-ref name="type" scoped="" ref="0x2ad1485fa640"/>
        <function-ref name="setType" scoped="" ref="0x2ad1485fa7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad1485fa950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad1485faad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad1485fac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad1485f5ce0" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad1485f5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad1485f70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad1486228a0" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad1486228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad148622bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad148622d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad148611020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1486111a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad148611330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad148611668" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad148611668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1486119b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad148617ba0" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad148617ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad148616020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1486161a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad148616330"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1486164b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad148616640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad148615968" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad148615968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad148615cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad148611cc0" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad148611cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad1486100a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad148610228"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1486103b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad148610538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad1486106c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad148616dc0" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad148616dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad148615170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad148613020" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad148613020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad148613370"/>
        <function-ref name="source" scoped="" ref="0x2ad1486134f8"/>
        <function-ref name="address" scoped="" ref="0x2ad148613680"/>
        <function-ref name="destination" scoped="" ref="0x2ad148613808"/>
        <function-ref name="setSource" scoped="" ref="0x2ad148613990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad148613b18"/>
        <function-ref name="type" scoped="" ref="0x2ad148613ca0"/>
        <function-ref name="setType" scoped="" ref="0x2ad148613e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad148612020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad1486121a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad148612330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad14866c140" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad14866c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad14866c490"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad14866c618"/>
        <function-ref name="start" scoped="" ref="0x2ad14866c7a0"/>
        <function-ref name="stop" scoped="" ref="0x2ad14866c928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad14866a020" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad14866a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad14866a370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad14866a4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14866a680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14866a808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad14866a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad14866cba0" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad14866cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad14866b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14866b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14866b330"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14866b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad14866b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad148668668" loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad148668668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad1486689b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad148668b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad148668cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad148668e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2ad1486650f0" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2ad1486650f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2ad148665440"/>
        <function-ref name="enableCca" scoped="" ref="0x2ad1486655c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad148661510" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad148661510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad148660a88"/>
        <function-ref name="clear" scoped="" ref="0x2ad14867b190"/>
        <function-ref name="isValid" scoped="" ref="0x2ad1486603a8"/>
        <function-ref name="set" scoped="" ref="0x2ad14867b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad14866b8d0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad14866b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad14866bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad148675020" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148675020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148675370"/>
        <function-ref name="isSet" scoped="" ref="0x2ad1486754f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad148675680"/>
        <function-ref name="set" scoped="" ref="0x2ad148675808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad1486695a0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad1486695a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad1486698f0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad148669a78"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad148669c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2ad148663d78" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2ad148663d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2ad1486690f0"/>
        <function-ref name="initial" scoped="" ref="0x2ad148669278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad148679478" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad148679478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad148678900"/>
        <function-ref name="clear" scoped="" ref="0x2ad148677020"/>
        <function-ref name="isValid" scoped="" ref="0x2ad148678220"/>
        <function-ref name="set" scoped="" ref="0x2ad148677700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad148668020" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad148668020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad148668370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad14868d2e8" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad14868d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad14868d638"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad14868d7c0"/>
        <function-ref name="start" scoped="" ref="0x2ad14868d948"/>
        <function-ref name="stop" scoped="" ref="0x2ad14868dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ad1486bc748" loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ad1486bc748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148256588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad1482568e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad1486bf5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x2ad1486cd508" loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x2ad1486cd508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1486cd858"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1486cd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x2ad1486d4d78" loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x2ad1486d4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1486d30f0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1486d3278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x2ad1486b8e80" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2ad1486b8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1486bea28"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1486bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ad1486c3130" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad1486c3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad1486c3480"/>
        <function-ref name="rand32" scoped="" ref="0x2ad1486c3608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad14868cd80" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad14868cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad14868b170"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad14868b2f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad14868b480"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad14868b608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2ad14868dd88" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2ad14868dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2ad14868c170"/>
        <function-ref name="enableCca" scoped="" ref="0x2ad14868c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14868fb78" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14868fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14868d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x2ad1486bb808" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x2ad1486bb808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1486b73c8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1486b7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2ad1486a83d0" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad1486a83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad1486a8720"/>
        <function-ref name="settled" scoped="" ref="0x2ad1486a88a8"/>
        <function-ref name="adjust" scoped="" ref="0x2ad1486a8a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x2ad1486fb190" loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x2ad1486fb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1486fb4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1486fb668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x2ad1486c3a80" loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x2ad1486c3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad1486c2d60"/>
        <function-ref name="fired" scoped="" ref="0x2ad1486aa470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad1486c21c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad1486aad10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad1486c0648"/>
        <function-ref name="gett0" scoped="" ref="0x2ad1486c01f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad1486aa8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad1486ab620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad1486c2790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad1486abac0"/>
        <function-ref name="stop" scoped="" ref="0x2ad1486aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x2ad14868b9c8" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x2ad14868b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14868bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x2ad1486f6770" loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x2ad1486f6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1486f6ac0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1486f6c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2ad1486ac9a0" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2ad1486ac9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2ad1486accf0"/>
        <function-ref name="biasOn" scoped="" ref="0x2ad1486ace78"/>
        <function-ref name="getRFPower" scoped="" ref="0x2ad148699030"/>
        <function-ref name="tuneManual" scoped="" ref="0x2ad1486991b8"/>
        <function-ref name="selectLock" scoped="" ref="0x2ad148699340"/>
        <function-ref name="init" scoped="" ref="0x2ad1486994c8"/>
        <function-ref name="getLock" scoped="" ref="0x2ad148699650"/>
        <function-ref name="coreOn" scoped="" ref="0x2ad1486997d8"/>
        <function-ref name="txMode" scoped="" ref="0x2ad148699960"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2ad148699ae8"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad148699c70"/>
        <function-ref name="off" scoped="" ref="0x2ad148699df8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2ad148698020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x2ad1486a38c0" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x2ad1486a38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad1486a3c10"/>
        <function-ref name="stop" scoped="" ref="0x2ad1486a3d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x2ad1486b5060" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x2ad1486b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1486b5be0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1486d20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2ad14868c5b0" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2ad14868c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2ad14868c900"/>
        <function-ref name="initial" scoped="" ref="0x2ad14868ca88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x2ad14869ad18" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2ad14869ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2ad1486a40a0"/>
        <function-ref name="listen" scoped="" ref="0x2ad1486a4228"/>
        <function-ref name="syncing" scoped="" ref="0x2ad1486a43b0"/>
        <function-ref name="rxDone" scoped="" ref="0x2ad1486a4538"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2ad1486a46c0"/>
        <function-ref name="idleByte" scoped="" ref="0x2ad1486a4848"/>
        <function-ref name="cts" scoped="" ref="0x2ad1486a49d0"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2ad1486a4b58"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1486a4ce0"/>
        <function-ref name="off" scoped="" ref="0x2ad1486a4e68"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2ad1486a2020"/>
        <function-ref name="rx" scoped="" ref="0x2ad1486a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad148744888" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad148744888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148744bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad148744d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad148743020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1487431a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad148743330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x2ad1487553e8" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad1487553e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2ad148755838"/>
        <function-ref name="initSlave" scoped="" ref="0x2ad1487559c0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad148755b48"/>
        <function-ref name="writeByte" scoped="" ref="0x2ad148755cd0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad148755e58"/>
        <function-ref name="txMode" scoped="" ref="0x2ad148754020"/>
        <function-ref name="readByte" scoped="" ref="0x2ad1487541a8"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad148754330"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad1487544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad1487455a8" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad1487455a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1487458f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad148745a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad148745c08"/>
        <function-ref name="cancel" scoped="" ref="0x2ad148745d90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad148744020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ad14873f218" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ad14873f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad14873e700"/>
        <function-ref name="clear" scoped="" ref="0x2ad14873ede0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad14873e020"/>
        <function-ref name="set" scoped="" ref="0x2ad14873d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148746818" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148746818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148746b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad148759bd0" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad148759bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148758020"/>
        <function-ref name="isSet" scoped="" ref="0x2ad1487581a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad148758330"/>
        <function-ref name="set" scoped="" ref="0x2ad1487584b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad1487442b0" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad1487442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad148744600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2ad148754788" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad148754788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148754ad8"/>
        <function-ref name="settled" scoped="" ref="0x2ad148754c60"/>
        <function-ref name="adjust" scoped="" ref="0x2ad148754de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x2ad1487532a0" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x2ad1487532a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148753e20"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148752310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ad14874e660" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ad14874e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148750220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x2ad1487ce3f0" loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x2ad1487ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1487ce740"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1487ce8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad148742e00" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad148742e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad1487411a8"/>
        <function-ref name="noAck" scoped="" ref="0x2ad148741330"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad1487414b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2ad148758828" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2ad148758828"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2ad148758b78"/>
        <function-ref name="biasOn" scoped="" ref="0x2ad148758d00"/>
        <function-ref name="getRFPower" scoped="" ref="0x2ad148756020"/>
        <function-ref name="tuneManual" scoped="" ref="0x2ad1487561a8"/>
        <function-ref name="selectLock" scoped="" ref="0x2ad148756330"/>
        <function-ref name="init" scoped="" ref="0x2ad1487564b8"/>
        <function-ref name="getLock" scoped="" ref="0x2ad148756640"/>
        <function-ref name="coreOn" scoped="" ref="0x2ad1487567c8"/>
        <function-ref name="txMode" scoped="" ref="0x2ad148756950"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2ad148756ad8"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad148756c60"/>
        <function-ref name="off" scoped="" ref="0x2ad148756de8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2ad148755020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ad148750870" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad148750870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad14874d490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x2ad1487e0020" loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x2ad1487e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1487e0370"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1487e04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad14875b130" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad14875b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad14875a588"/>
        <function-ref name="clear" scoped="" ref="0x2ad14875ac68"/>
        <function-ref name="isValid" scoped="" ref="0x2ad14875be80"/>
        <function-ref name="set" scoped="" ref="0x2ad148759380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ad148746e18" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ad148746e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad1487451a8"/>
        <function-ref name="stop" scoped="" ref="0x2ad148745330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ad1487417b8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ad1487417b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ad148741b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x2ad1487435d8" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2ad1487435d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2ad148743928"/>
        <function-ref name="listen" scoped="" ref="0x2ad148743ab0"/>
        <function-ref name="syncing" scoped="" ref="0x2ad148743c38"/>
        <function-ref name="rxDone" scoped="" ref="0x2ad148743dc0"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2ad148742020"/>
        <function-ref name="idleByte" scoped="" ref="0x2ad1487421a8"/>
        <function-ref name="cts" scoped="" ref="0x2ad148742330"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2ad1487424b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad148742640"/>
        <function-ref name="off" scoped="" ref="0x2ad1487427c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2ad148742950"/>
        <function-ref name="rx" scoped="" ref="0x2ad148742ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x2ad1488584b8" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x2ad1488584b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148856088"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148856510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad148853620" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148853620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148853970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148853af8"/>
        <function-ref name="request" scoped="" ref="0x2ad148853c80"/>
        <function-ref name="granted" scoped="" ref="0x2ad148853e08"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148858020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x2ad1488386d8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x2ad1488386d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1488373a8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148837830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14883ac10" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14883ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x2ad1488632f0" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2ad1488632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148863640"/>
        <function-ref name="settled" scoped="" ref="0x2ad1488637c8"/>
        <function-ref name="adjust" scoped="" ref="0x2ad148863950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ad148873e48" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ad148873e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148256588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad1482568e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad148872be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x2ad148873118" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x2ad148873118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148873468"/>
        <function-ref name="read" scoped="" ref="0x2ad1488735f0"/>
        <function-ref name="write" scoped="" ref="0x2ad148873778"/>
        <function-ref name="getLOCK" scoped="" ref="0x2ad148873900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x2ad148875620" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2ad148875620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2ad148875970"/>
        <function-ref name="biasOn" scoped="" ref="0x2ad148875af8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2ad148875c80"/>
        <function-ref name="tuneManual" scoped="" ref="0x2ad148875e08"/>
        <function-ref name="selectLock" scoped="" ref="0x2ad148874020"/>
        <function-ref name="init" scoped="" ref="0x2ad1488741a8"/>
        <function-ref name="getLock" scoped="" ref="0x2ad148874330"/>
        <function-ref name="coreOn" scoped="" ref="0x2ad1488744b8"/>
        <function-ref name="txMode" scoped="" ref="0x2ad148874640"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2ad1488747c8"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad148874950"/>
        <function-ref name="off" scoped="" ref="0x2ad148874ad8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2ad148874c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2ad1488ea908" loc="50:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2ad1488ea908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2ad1488eac58"/>
        <function-ref name="initSlave" scoped="" ref="0x2ad1488eade0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ad1488e9020"/>
        <function-ref name="writeByte" scoped="" ref="0x2ad1488e91a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ad1488e9330"/>
        <function-ref name="txMode" scoped="" ref="0x2ad1488e94b8"/>
        <function-ref name="readByte" scoped="" ref="0x2ad1488e9640"/>
        <function-ref name="rxMode" scoped="" ref="0x2ad1488e97c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad1488e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x2ad1488ec4e0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x2ad1488ec4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1488eb088"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1488eb510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x2ad1488ebb80" loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2ad1488ebb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1488ea020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1488ea1a8"/>
        <function-ref name="request" scoped="" ref="0x2ad1488ea330"/>
        <function-ref name="granted" scoped="" ref="0x2ad1488ea4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1488ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2ad1488e9bf8" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2ad1488e9bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1488e8020"/>
        <function-ref name="read" scoped="" ref="0x2ad1488e81a8"/>
        <function-ref name="write" scoped="" ref="0x2ad1488e8330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2ad1488e84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148a61578" loc="28:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148a61578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148a618c8"/>
        <function-ref name="configure" scoped="" ref="0x2ad148a61a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2ad148a63680" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2ad148a63680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148a62230"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148a626b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad148a62c70" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148a62c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148a61020"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148a611a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148a61330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1488e4980" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1488e4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1488e4cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1488e4e58"/>
        <function-ref name="request" scoped="" ref="0x2ad148a63020"/>
        <function-ref name="granted" scoped="" ref="0x2ad148a631a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148a63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad1488e0a08" loc="18:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad1488e0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1488db578"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1488db9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2ad1488ff620" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2ad1488ff620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1488fe1d0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1488fe658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad1488fd208" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad1488fd208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad1488fd558"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad1488fd6e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad1488fd868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad1488fb050" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1488fb050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1488fb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1488fb528"/>
        <function-ref name="request" scoped="" ref="0x2ad1488fb6b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad1488fb838"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1488fb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad1488f5890" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1488f5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1488f5be0"/>
        <function-ref name="configure" scoped="" ref="0x2ad1488f5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2ad1489129b0" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2ad1489129b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ad148912d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad1488f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2ad1488f1cb8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad1488f1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ad1488f60a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1488f6228"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad1488f63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1488faaf8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1488faaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1488fae48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1488f7020"/>
        <function-ref name="request" scoped="" ref="0x2ad1488f71a8"/>
        <function-ref name="granted" scoped="" ref="0x2ad1488f7330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1488f74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1488f0d48" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1488f0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14890e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2ad14890dde0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2ad14890dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ad14890c170"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad14890c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2ad14890d488" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad14890d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ad14890d7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14890d960"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad14890dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2ad148922940" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad148922940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2ad148922c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2ad148922e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2ad14890a020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad14890a1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2ad14890a330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2ad14890a4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2ad14890a640"/>
        <function-ref name="isComplete" scoped="" ref="0x2ad14890a7c8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14890a950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2ad14890aad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2ad14890ac60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2ad14890ade8"/>
        <function-ref name="startConversion" scoped="" ref="0x2ad148909020"/>
        <function-ref name="isStarted" scoped="" ref="0x2ad1489092a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2ad148909430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2ad1489095b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2ad148909740"/>
        <function-ref name="getValue" scoped="" ref="0x2ad1489098c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad148909a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ad14890bc10" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad14890bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad14890d020"/>
        <function-ref name="stop" scoped="" ref="0x2ad14890d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2ad148909d30" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad148909d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ad1489210d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ad148921260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ad1489213e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ad148921570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ad1489216f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2ad14893f020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad14893f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2ad14893f370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2ad14893f4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2ad14893f680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad14893f808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2ad14893f990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2ad14893fb18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2ad14893fca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2ad14893fe28"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14893e020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2ad14893e1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2ad14893e330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2ad14893e4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2ad14893e640"/>
        <function-ref name="isStarted" scoped="" ref="0x2ad14893e8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2ad14893ea50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2ad14893ebd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2ad14893ed60"/>
        <function-ref name="getValue" scoped="" ref="0x2ad14893d020"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad14893d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2ad1489621e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2ad1489621e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2ad148962538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2ad1489626c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2ad148962848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad1489629d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2ad148962b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2ad148962ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2ad148962e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2ad148961020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1489611a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2ad148961330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2ad1489614b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2ad148961640"/>
        <function-ref name="startConversion" scoped="" ref="0x2ad1489617c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2ad148961a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2ad148961bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2ad148961d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2ad148960020"/>
        <function-ref name="getValue" scoped="" ref="0x2ad1489601a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad148960330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ad148960640" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ad148960640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad148960990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad1489fa698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1489fa698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad1489faa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1489fab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad1489f83c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1489f83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1489f8738"/>
        <function-ref name="configure" scoped="" ref="0x2ad1489f88c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad1489fadd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489fadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1489f9170"/>
        <function-ref name="requested" scoped="" ref="0x2ad1489f92f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad1489f9480"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1489f9608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1489f9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1489fb840" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1489fb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1489fbbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1489fbd38"/>
        <function-ref name="request" scoped="" ref="0x2ad1489fa020"/>
        <function-ref name="granted" scoped="" ref="0x2ad1489fa1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1489fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad1489f99d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1489f99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1489f9d28"/>
        <function-ref name="userId" scoped="" ref="0x2ad1489f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14957e3a0" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14957e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14957e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad14957e978" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14957e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad14957ecc8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad14957ee50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad14957d020"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad14957d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad14957a820" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad14957a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad14957ab90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14957ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149578570" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149578570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1495788e0"/>
        <function-ref name="configure" scoped="" ref="0x2ad149578a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad149578cf0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad149578cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad1495770a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad149577228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad1495773b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149577538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad149579020" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149579020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149579370"/>
        <function-ref name="requested" scoped="" ref="0x2ad1495794f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad149579680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149579808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149579990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad149577780" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149577780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad149577ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad149577c58"/>
        <function-ref name="led1On" scoped="" ref="0x2ad149577de0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad149576020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad1495761a8"/>
        <function-ref name="get" scoped="" ref="0x2ad149576330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad1495764b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149576ad8"/>
        <function-ref name="set" scoped="" ref="0x2ad1495767c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad149576640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad149576950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad14957b9c0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad14957b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14957bd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad14957a020"/>
        <function-ref name="request" scoped="" ref="0x2ad14957a1a8"/>
        <function-ref name="granted" scoped="" ref="0x2ad14957a330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14957a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad149579bd8" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149579bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149578020"/>
        <function-ref name="userId" scoped="" ref="0x2ad1495781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad149576da0" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad149576da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149575170"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1495752f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad1489f5780" loc="72:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1489f5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad1489f5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad1489f5d18" loc="73:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1489f5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148a090a0"/>
        <function-ref name="requested" scoped="" ref="0x2ad148a09228"/>
        <function-ref name="granted" scoped="" ref="0x2ad148a093b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148a09538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148a096c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ad1489f5060" loc="70:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1489f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad1489f53b0"/>
        <function-ref name="stop" scoped="" ref="0x2ad1489f5538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad148a09908" loc="74:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148a09908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148a09c58"/>
        <function-ref name="userId" scoped="" ref="0x2ad148a09de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad1495f8590" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1495f8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad1495f88e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad1495f8b28" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1495f8b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1495f8e78"/>
        <function-ref name="requested" scoped="" ref="0x2ad1495f7030"/>
        <function-ref name="granted" scoped="" ref="0x2ad1495f71b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1495f7340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1495f74c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ad14959ee38" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad14959ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad1495f81c0"/>
        <function-ref name="stop" scoped="" ref="0x2ad1495f8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad1495f7710" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1495f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1495f7a60"/>
        <function-ref name="userId" scoped="" ref="0x2ad1495f7be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148a2a6a0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148a2a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148a29370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148a297c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2ad148a28428" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2ad148a28428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148a27020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148a274a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad148a259a0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148a259a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148a25cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148a25e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148a24030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2ad148a27b18" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2ad148a27b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ad148a27e68"/>
        <function-ref name="cancel" scoped="" ref="0x2ad148a25020"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad148a251a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2ad148a404d8" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2ad148a404d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148a40828"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148a409b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148a59680" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148a59680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148a6e370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148a6e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2ad148a6c060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2ad148a6c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148a6cbc8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148a6b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad148a6b720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148a6b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148a6ba90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148a6bc18"/>
        <function-ref name="request" scoped="" ref="0x2ad148a6bda0"/>
        <function-ref name="granted" scoped="" ref="0x2ad148a69020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148a691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad148a84208" loc="46:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad148a84208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad148a84558"/>
        <function-ref name="rand32" scoped="" ref="0x2ad148a846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad148a861a0" loc="45:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ad148a861a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148a86ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148a88310" loc="44:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148a88310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148a88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad148a7f080" loc="48:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad148a7f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad148a7f3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad148a7f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad148a80020" loc="47:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ad148a80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148a80b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148a816a0" loc="46:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148a816a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148a819f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148a82a60" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148a82a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148c41d60"/>
        <function-ref name="fired" scoped="" ref="0x2ad148c43470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148c411c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148c43d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148c40648"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148c401f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148c438c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148c44620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148c41790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148c44ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad148a96510" loc="49:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a96510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148a92768"/>
        <function-ref name="fired" scoped="" ref="0x2ad148a94e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148a93b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148a93728"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148a91088"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148a92bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148a932d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148a94088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148a92198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148a94528"/>
        <function-ref name="stop" scoped="" ref="0x2ad148a949c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad148a8db68" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ad148a8db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148a89d98"/>
        <function-ref name="fired" scoped="" ref="0x2ad148a8b4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148a891f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148a8bd78"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148ab4688"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148ab4238"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148a8b928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148a8c6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148a897c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148a8cb90"/>
        <function-ref name="stop" scoped="" ref="0x2ad148a8b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad148ab4c48" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad148ab4c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148ab2820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148a91e40" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148a91e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148a8d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ad148acae40" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ad148acae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148aa2be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148aa1548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148aa10c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148aa19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148aae2c0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148aae2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148aae610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ad148aa5838" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad148aa5838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148aa3020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148aa4020"/>
        <function-ref name="startAt" scoped="" ref="0x2ad148aa4930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148aa44a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad148aa34a8"/>
        <function-ref name="start" scoped="" ref="0x2ad148aac5e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148aacab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad148bb0998" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad148bb0998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148bac020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148bad0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad148bad9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148bad548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad148bac4a8"/>
        <function-ref name="start" scoped="" ref="0x2ad148bae730"/>
        <function-ref name="stop" scoped="" ref="0x2ad148baec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148bb01f0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148bb01f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ad1481d8388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ad1481d8388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148bb0540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad148baca90" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148baca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148bab828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148ba9190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148babcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148ba9618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ad1495d4e70" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad1495d4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ad1495d31e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad1495d3370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad1495d34f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad1495d3680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad1495d3808"/>
        <function-ref name="setControl" scoped="" ref="0x2ad1495d3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad1495dfb40" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad1495dfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad1495db238"/>
        <function-ref name="fired" scoped="" ref="0x2ad1495dd2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad1495ddbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad1495dd738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad1495db6c0"/>
        <function-ref name="start" scoped="" ref="0x2ad1495de8f8"/>
        <function-ref name="stop" scoped="" ref="0x2ad1495dedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1495df398" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1495df398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1495df6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad1495dbca8" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad1495dbca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad1495daa28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad1495d94a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad1495d9020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad1495d9930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2ad1495cfdb0" loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad1495cfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ad1495ce170"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ad1495ce2f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ad1495ce480"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad1495ce608"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad1495ce790"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad1495ce918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ad1495d3d20" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad1495d3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad1495cf510"/>
        <function-ref name="fired" scoped="" ref="0x2ad1495d02b0"/>
        <function-ref name="get" scoped="" ref="0x2ad1495d18f0"/>
        <function-ref name="reset" scoped="" ref="0x2ad1495d0738"/>
        <function-ref name="isOn" scoped="" ref="0x2ad1495cf998"/>
        <function-ref name="set" scoped="" ref="0x2ad1495d1d78"/>
        <function-ref name="start" scoped="" ref="0x2ad1495d0bc0"/>
        <function-ref name="stop" scoped="" ref="0x2ad1495cf088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad1495d8020" loc="30:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad1495d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad1495d40f8"/>
        <function-ref name="test" scoped="" ref="0x2ad1495d57a8"/>
        <function-ref name="get" scoped="" ref="0x2ad1495d8ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ad1495d4580"/>
        <function-ref name="getScale" scoped="" ref="0x2ad1495d4a58"/>
        <function-ref name="reset" scoped="" ref="0x2ad1495d69e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad1495d6560"/>
        <function-ref name="isOn" scoped="" ref="0x2ad1495d5c30"/>
        <function-ref name="set" scoped="" ref="0x2ad1495d6088"/>
        <function-ref name="start" scoped="" ref="0x2ad1495d6e70"/>
        <function-ref name="stop" scoped="" ref="0x2ad1495d5320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad148b2e020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ad148b2e370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad148b2e4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad148b2e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad148b2e808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad148b2e990"/>
        <function-ref name="setControl" scoped="" ref="0x2ad148b2eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ad148b29228" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad148b29228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ad148b29578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ad148b29700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ad148b29888"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad148b29a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad148b29b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad148b29d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad148b2d020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad148b2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148b2a7a8"/>
        <function-ref name="fired" scoped="" ref="0x2ad148b2c560"/>
        <function-ref name="get" scoped="" ref="0x2ad148b2dba0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148b2c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148b2ac30"/>
        <function-ref name="set" scoped="" ref="0x2ad148b2c088"/>
        <function-ref name="start" scoped="" ref="0x2ad148b2ce70"/>
        <function-ref name="stop" scoped="" ref="0x2ad148b2a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148b36de8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148b36de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148b2f0f8"/>
        <function-ref name="test" scoped="" ref="0x2ad148b30798"/>
        <function-ref name="get" scoped="" ref="0x2ad148b33a18"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148b2f580"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148b2fa58"/>
        <function-ref name="reset" scoped="" ref="0x2ad148b32980"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148b324f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148b30c20"/>
        <function-ref name="set" scoped="" ref="0x2ad148b32020"/>
        <function-ref name="start" scoped="" ref="0x2ad148b32e08"/>
        <function-ref name="stop" scoped="" ref="0x2ad148b30310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad148b50160" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148b50160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ad148b504b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad148b50638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad148b507c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad148b50948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad148b50ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2ad148b50c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ad148b4b268" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad148b4b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad148b4b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ad148b4b968" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad148b4b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ad148b4bcb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ad148b4be40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ad148b4a020"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad148b4a1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad148b4a330"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad148b4a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad148b4e190" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad148b4e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148b4c930"/>
        <function-ref name="fired" scoped="" ref="0x2ad148b4d6d0"/>
        <function-ref name="get" scoped="" ref="0x2ad148b4ed10"/>
        <function-ref name="reset" scoped="" ref="0x2ad148b4db58"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148b4cdb8"/>
        <function-ref name="set" scoped="" ref="0x2ad148b4d1f8"/>
        <function-ref name="start" scoped="" ref="0x2ad148b4c020"/>
        <function-ref name="stop" scoped="" ref="0x2ad148b4c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148b550f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148b550f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148b51270"/>
        <function-ref name="test" scoped="" ref="0x2ad148b52930"/>
        <function-ref name="get" scoped="" ref="0x2ad148b55c78"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148b516f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148b51bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148b54a90"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148b54608"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148b52db8"/>
        <function-ref name="set" scoped="" ref="0x2ad148b54130"/>
        <function-ref name="start" scoped="" ref="0x2ad148b52020"/>
        <function-ref name="stop" scoped="" ref="0x2ad148b524a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ad148bdecf0" loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ad148bdecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148bdc0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148bdc228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad148be2c70" loc="49:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad148be2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148bde410"/>
        <function-ref name="fired" scoped="" ref="0x2ad148bdf4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ad148bdfdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148bdf930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad148bde898"/>
        <function-ref name="start" scoped="" ref="0x2ad148be09f0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148bdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148be7ab0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148be7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148be3d60"/>
        <function-ref name="fired" scoped="" ref="0x2ad148be4470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148be31c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148be4d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148be2648"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148be21f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148be48c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148be5620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148be3790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148be5ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148be4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ad148c25930" loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ad148c25930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148c25c80"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148c25e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ad148c2b858" loc="49:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ad148c2b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148c27bc0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148c281c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148c27020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148c28a60"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148c254d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148c25088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148c28610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148c293d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148c275f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148c29878"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c29d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148c315e0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148c315e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148c2c988"/>
        <function-ref name="fired" scoped="" ref="0x2ad148c2e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148c2ed70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148c2e900"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148c2b2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148c2cdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148c2e490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148c2f198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148c2c398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148c2f658"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c2fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad148c21128" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad148c21128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148c21ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad148c4b330" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148c4b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148c4a0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148c4a9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148c4a548"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148c4ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ad148c377e8" loc="54:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad148c377e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad148c37b38"/>
        <function-ref name="changed" scoped="" ref="0x2ad148c37cc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad148c37e48"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad148c3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ad148c5d568" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ad148c5d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148256588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad1482568e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad148c5c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad148c82638" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148c82638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148c813f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148c81d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148c81878"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148c801f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad148c7d3a0" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148c7d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="TOne" ref="0x2ad14828d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148c7c130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148c7ca40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148c7c5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148c7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad148c71140" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148c71140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad148c71490"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ad148c71618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad148c717a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ad148c71928"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad148c71ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad148c71c38"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ad148c71dc0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ad148c70020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ad148c701a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ad148c70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad148c95b68" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ad148c95b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ad148c93db8"/>
        <function-ref name="test" scoped="" ref="0x2ad148c934a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148c9c728"/>
        <function-ref name="captured" scoped="" ref="0x2ad148c9b0c0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148c9b598"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148c93930"/>
        <function-ref name="set" scoped="" ref="0x2ad148c9cbb0"/>
        <function-ref name="start" scoped="" ref="0x2ad148c9ba20"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad148c929c0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad148c929c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148c8e270"/>
        <function-ref name="fired" scoped="" ref="0x2ad148c90020"/>
        <function-ref name="get" scoped="" ref="0x2ad148c91598"/>
        <function-ref name="reset" scoped="" ref="0x2ad148c904a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148c8e6f8"/>
        <function-ref name="set" scoped="" ref="0x2ad148c91a20"/>
        <function-ref name="start" scoped="" ref="0x2ad148c90930"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c90db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148c77098" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148c77098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148c73270"/>
        <function-ref name="test" scoped="" ref="0x2ad148c75930"/>
        <function-ref name="get" scoped="" ref="0x2ad148c77c18"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148c736f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148c73bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148c76a58"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148c765d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148c75db8"/>
        <function-ref name="set" scoped="" ref="0x2ad148c760f8"/>
        <function-ref name="start" scoped="" ref="0x2ad148c75020"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c754a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad148cb7020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad148cb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad148cb7370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ad148cb74f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad148cb7680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ad148cb7808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad148cb7990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad148cb7b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ad148cb7ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ad148cb7e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ad148cb6020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ad148cb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2ad148ca6a48" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ad148ca6a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ad148ca6d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad148ca5020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad148ca51a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad148ca5330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad148ca54b8"/>
        <function-ref name="setControl" scoped="" ref="0x2ad148ca5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ad148cb3e60" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ad148cb3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148caf798"/>
        <function-ref name="fired" scoped="" ref="0x2ad148cb04f8"/>
        <function-ref name="get" scoped="" ref="0x2ad148cb1a18"/>
        <function-ref name="reset" scoped="" ref="0x2ad148cb0980"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148cafc20"/>
        <function-ref name="set" scoped="" ref="0x2ad148cb0020"/>
        <function-ref name="start" scoped="" ref="0x2ad148cb0e08"/>
        <function-ref name="stop" scoped="" ref="0x2ad148caf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad148cb6680" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ad148cb6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ad148cb3798"/>
        <function-ref name="test" scoped="" ref="0x2ad148cb4e58"/>
        <function-ref name="get" scoped="" ref="0x2ad148cb5230"/>
        <function-ref name="captured" scoped="" ref="0x2ad148cb5b90"/>
        <function-ref name="reset" scoped="" ref="0x2ad148cb40c0"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148cb3310"/>
        <function-ref name="set" scoped="" ref="0x2ad148cb56b8"/>
        <function-ref name="start" scoped="" ref="0x2ad148cb4548"/>
        <function-ref name="stop" scoped="" ref="0x2ad148cb49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ad148cad2b8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ad148cad2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148caba40"/>
        <function-ref name="fired" scoped="" ref="0x2ad148cac7e8"/>
        <function-ref name="get" scoped="" ref="0x2ad148cade38"/>
        <function-ref name="reset" scoped="" ref="0x2ad148cacc70"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148caa020"/>
        <function-ref name="set" scoped="" ref="0x2ad148cac310"/>
        <function-ref name="start" scoped="" ref="0x2ad148cab130"/>
        <function-ref name="stop" scoped="" ref="0x2ad148cab5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ad148caa698" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ad148caa698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad148ca6020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ca8d08"/>
        <function-ref name="get" scoped="" ref="0x2ad148ca83a8"/>
        <function-ref name="reset" scoped="" ref="0x2ad148ca71f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148ca64a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148ca8830"/>
        <function-ref name="start" scoped="" ref="0x2ad148ca7680"/>
        <function-ref name="stop" scoped="" ref="0x2ad148ca7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148c89020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148c89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148c850f8"/>
        <function-ref name="test" scoped="" ref="0x2ad148c867a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148c89ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148c85580"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148c85a58"/>
        <function-ref name="reset" scoped="" ref="0x2ad148c879e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148c87560"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148c86c30"/>
        <function-ref name="set" scoped="" ref="0x2ad148c87088"/>
        <function-ref name="start" scoped="" ref="0x2ad148c87e70"/>
        <function-ref name="stop" scoped="" ref="0x2ad148c86320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148d25020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148d25020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ad1481d8388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ad1481d8388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148d25370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148d25740" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148d25740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148d4d930"/>
        <function-ref name="test" scoped="" ref="0x2ad148d4d020"/>
        <function-ref name="get" scoped="" ref="0x2ad148d503a8"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148d4ddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148d4c2f0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148d4f1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d50d08"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148d4d4a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148d50830"/>
        <function-ref name="start" scoped="" ref="0x2ad148d4f680"/>
        <function-ref name="stop" scoped="" ref="0x2ad148d4fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad148d495a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148d495a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="TOne" ref="0x2ad14828d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148d703a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148d70cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148d70830"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d6f190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148d6f6f0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148d6f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad148d6b930"/>
        <function-ref name="test" scoped="" ref="0x2ad148d6b020"/>
        <function-ref name="get" scoped="" ref="0x2ad148d6d3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2ad148d6bdb8"/>
        <function-ref name="getScale" scoped="" ref="0x2ad148d692f0"/>
        <function-ref name="reset" scoped="" ref="0x2ad148d6c1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d6dd08"/>
        <function-ref name="isOn" scoped="" ref="0x2ad148d6b4a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148d6d830"/>
        <function-ref name="start" scoped="" ref="0x2ad148d6c680"/>
        <function-ref name="stop" scoped="" ref="0x2ad148d6cb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ad148d82e20" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ad148d82e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="TOne" ref="0x2ad14828d720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148d81be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148d80548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148d800c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d809d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad148d66c50" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148d66c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148d849f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148d82330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148d84e78"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d827b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad148c83c38" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad148c83c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148d7d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad148d7de48" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad148d7de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ad148256178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad148d7cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad148d7b548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad148d7b0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad148d7b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148d78e10" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148d78e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148dab0c0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148dae798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148dad4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148dad088"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148dab960"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148dab510"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148daebe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148daf9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148dadaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148dafe80"/>
        <function-ref name="stop" scoped="" ref="0x2ad148dae348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad148dce568" loc="46:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad148dce568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad148dce8b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad148dcea40"/>
        <function-ref name="led1On" scoped="" ref="0x2ad148dcebc8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad148dced50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad148dcb020"/>
        <function-ref name="get" scoped="" ref="0x2ad148dcb1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad148dcb330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad148dcb950"/>
        <function-ref name="set" scoped="" ref="0x2ad148dcb4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad148dcb640"/>
        <function-ref name="led2On" scoped="" ref="0x2ad148dcb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ad148dc5540" loc="50:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ad148dc5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148dc5890"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148dc5a18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148dc5ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148dc5d28"/>
        <function-ref name="get" scoped="" ref="0x2ad148dc4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148dc41a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148dc4330"/>
        <function-ref name="clr" scoped="" ref="0x2ad148dc44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad148dca840" loc="46:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148dca840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148dcab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ad148dc47d0" loc="51:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ad148dc47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148dc4b20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148dc4ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148dc4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148dc3020"/>
        <function-ref name="get" scoped="" ref="0x2ad148dc31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148dc3330"/>
        <function-ref name="set" scoped="" ref="0x2ad148dc34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148dc3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad148dcae08" loc="47:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad148dcae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad148dc61a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad148dc6330"/>
        <function-ref name="led1On" scoped="" ref="0x2ad148dc64b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad148dc6640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad148dc67c8"/>
        <function-ref name="get" scoped="" ref="0x2ad148dc6950"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad148dc6ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad148dc51a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148dc6c60"/>
        <function-ref name="led0On" scoped="" ref="0x2ad148dc6de8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad148dc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ad148dc3958" loc="52:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ad148dc3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148dc3ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148dc3e30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148dc2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148dc21a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148dc2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148dc24b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148dc2640"/>
        <function-ref name="clr" scoped="" ref="0x2ad148dc27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ad148dc8d60" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ad148dc8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148de20d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148de2260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148de23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148de2570"/>
        <function-ref name="get" scoped="" ref="0x2ad148de26f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148de2880"/>
        <function-ref name="set" scoped="" ref="0x2ad148de2a08"/>
        <function-ref name="clr" scoped="" ref="0x2ad148de2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ad148de1020" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ad148de1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148de1370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148de14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148de1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148de1808"/>
        <function-ref name="get" scoped="" ref="0x2ad148de1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148de1b18"/>
        <function-ref name="set" scoped="" ref="0x2ad148de1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148de1e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ad148ddf2d8" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad148ddf2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad148ddf628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ad148de01b0" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ad148de01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148de0500"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148de0688"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148de0810"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148de0998"/>
        <function-ref name="get" scoped="" ref="0x2ad148de0b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148de0ca8"/>
        <function-ref name="set" scoped="" ref="0x2ad148de0e30"/>
        <function-ref name="clr" scoped="" ref="0x2ad148ddf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148dd96e0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148dd96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148dd6a18"/>
        <function-ref name="fired" scoped="" ref="0x2ad148dd7158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148dd7e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148dd79f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148dd52e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148dd6e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148dd75a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148dd8370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148dd6448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148dd8810"/>
        <function-ref name="stop" scoped="" ref="0x2ad148dd8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148dd3be8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148dd3be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148dd0e18"/>
        <function-ref name="fired" scoped="" ref="0x2ad148dd1548"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148dd0278"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148dd1de8"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148e08728"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148e082d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148dd1998"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148dd2768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148dd0848"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148dd2c08"/>
        <function-ref name="stop" scoped="" ref="0x2ad148dd10f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148e06020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148e06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148e022b8"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e05978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148e046c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148e04278"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148e02b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148e02708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148e05dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148e06b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148e04c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148e05088"/>
        <function-ref name="stop" scoped="" ref="0x2ad148e05528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148e00dc0" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148e00dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148dff930"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148dffd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x2ad148df8020" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x2ad148df8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148df8b68"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148df6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x2ad148df16a8" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x2ad148df16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148df0370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148df07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x2ad148df6c98" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x2ad148df6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148df5820"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148df5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x2ad148df49d0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x2ad148df49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148df3560"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148df39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2ad148e24398" loc="21:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2ad148e24398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148e246e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e24870"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148e249f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2ad148dec9a8" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2ad148dec9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148deccf8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148dece80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148e24030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148defbc8" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148defbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148dec020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148dec1a8"/>
        <function-ref name="request" scoped="" ref="0x2ad148dec330"/>
        <function-ref name="granted" scoped="" ref="0x2ad148dec4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148dec640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad148e23550" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148e23550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148e238a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148e23a28"/>
        <function-ref name="start" scoped="" ref="0x2ad148e23bb0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148e23d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2ad148e20ad0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2ad148e20ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148e20e20"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e1f020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148e1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x2ad148e16c00" loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x2ad148e16c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e18020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x2ad148e16560" loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x2ad148e16560"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e168b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2ad148e20108" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2ad148e20108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148e20458"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e205e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148e20768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2ad148e0a190" loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2ad148e0a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148e0a4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148e0a668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x2ad148e1a690" loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x2ad148e1a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e1a9e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e1ab68"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e1acf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e1ae78"/>
        <function-ref name="get" scoped="" ref="0x2ad148e19030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e191b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e19340"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e194c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148e1f5f0" loc="22:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148e1f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148e1c8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e1d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148e1dd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148e1d8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148e1a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148e1cd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148e1d470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148e1e198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148e1c320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148e1e638"/>
        <function-ref name="stop" scoped="" ref="0x2ad148e1ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2ad148e31020" loc="36:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2ad148e31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e31370"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e314f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148e31680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148e31808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2ad148e28980" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2ad148e28980"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e28cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2ad148e3cde0" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2ad148e3cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e3b170"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e3b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e3b480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e3b608"/>
        <function-ref name="get" scoped="" ref="0x2ad148e3b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e3b918"/>
        <function-ref name="set" scoped="" ref="0x2ad148e3baa0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e3bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2ad148e38328" loc="26:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2ad148e38328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e38678"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e38800"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e38988"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e38b10"/>
        <function-ref name="get" scoped="" ref="0x2ad148e38c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e38e20"/>
        <function-ref name="set" scoped="" ref="0x2ad148e37020"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2ad148e27d00" loc="48:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2ad148e27d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e260a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2ad148e26a30" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2ad148e26a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2ad148e357d0" loc="30:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2ad148e357d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e35b20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e35ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e35e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e34020"/>
        <function-ref name="get" scoped="" ref="0x2ad148e341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e34330"/>
        <function-ref name="set" scoped="" ref="0x2ad148e344b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2ad148e29808" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2ad148e29808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e29b58"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e29ce0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e29e68"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e28020"/>
        <function-ref name="get" scoped="" ref="0x2ad148e281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e28330"/>
        <function-ref name="set" scoped="" ref="0x2ad148e284b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e28640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2ad148e3ead0" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2ad148e3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e3ee20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e3d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e3d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e3d330"/>
        <function-ref name="get" scoped="" ref="0x2ad148e3d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e3d640"/>
        <function-ref name="set" scoped="" ref="0x2ad148e3d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e3d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2ad148e3a020" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2ad148e3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e3a370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e3a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e3a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e3a808"/>
        <function-ref name="get" scoped="" ref="0x2ad148e3a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e3ab18"/>
        <function-ref name="set" scoped="" ref="0x2ad148e3aca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e3ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2ad148e30858" loc="38:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2ad148e30858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e30ba8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e30d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148e2b020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148e2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2ad148e27020" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2ad148e27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e27370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2ad148e2a680" loc="41:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2ad148e2a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e2a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e2ab58"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e2ace0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e2ae68"/>
        <function-ref name="get" scoped="" ref="0x2ad148e29020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e291a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e29330"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2ad148e374b0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2ad148e374b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e37800"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e37988"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e37b10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e37c98"/>
        <function-ref name="get" scoped="" ref="0x2ad148e37e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e36020"/>
        <function-ref name="set" scoped="" ref="0x2ad148e361a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2ad148e2c2b0" loc="35:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2ad148e2c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e2c700"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e2c888"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148e2ca10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148e2cb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2ad148e61340" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2ad148e61340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e61690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2ad148e34958" loc="31:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2ad148e34958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e34ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e34e30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e33020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e331a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148e33330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e334b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e33640"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e337c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2ad148e3dc58" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2ad148e3dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e3c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e3c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e3c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e3c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad148e3c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e3c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e3c950"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e3cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2ad148e39180" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2ad148e39180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e394d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e39658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e397e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e39968"/>
        <function-ref name="get" scoped="" ref="0x2ad148e39af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e39c78"/>
        <function-ref name="set" scoped="" ref="0x2ad148e39e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2ad148e27690" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2ad148e27690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2ad148e263c0" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2ad148e263c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e26710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2ad148e36648" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2ad148e36648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e36998"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e36b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e36ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e36e30"/>
        <function-ref name="get" scoped="" ref="0x2ad148e35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e351a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e35330"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2ad148e31ba8" loc="37:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2ad148e31ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e30020"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e301a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148e30330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148e304b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2ad148e2b4f8" loc="40:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2ad148e2b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e2b848"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e2b9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e2bb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e2bce0"/>
        <function-ref name="get" scoped="" ref="0x2ad148e2be68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e2a020"/>
        <function-ref name="set" scoped="" ref="0x2ad148e2a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e2a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2ad148e619b0" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2ad148e619b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e61d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2ad148e41970" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2ad148e41970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e41cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e41e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e3e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e3e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad148e3e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e3e4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad148e3e640"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e3e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2ad148e33ae0" loc="32:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2ad148e33ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148e33e30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148e32020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148e321a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148e32330"/>
        <function-ref name="get" scoped="" ref="0x2ad148e324b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148e32640"/>
        <function-ref name="set" scoped="" ref="0x2ad148e327c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148e32950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2ad148e5fc28" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2ad148e5fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2ad148e5b060" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2ad148e5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2ad148e5bd40" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2ad148e5bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2ad148e5c340" loc="19:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2ad148e5c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5c690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2ad148e5a3f8" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2ad148e5a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5a748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2ad148e5c9b0" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2ad148e5c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2ad148e5b6d0" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2ad148e5b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2ad148e5aa68" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2ad148e5aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148e5adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2ad148e7fb38" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2ad148e7fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e7e020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e7e1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e7e330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e7e4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e7e640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e7e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2ad148e4cc88" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2ad148e4cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e4b020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e4b1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e4b330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e4b4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e4b640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e4b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2ad148e45b38" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2ad148e45b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e44020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e441a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e44330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e444b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e44640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2ad148e7eb38" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2ad148e7eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e7d020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e7d1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e7d330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e7d4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e7d640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2ad148e4bb38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2ad148e4bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e46020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e461a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e46330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e464b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e46640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e467c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2ad148e44b38" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2ad148e44b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e7f020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e7f1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e7f330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e7f4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e7f640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e7f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2ad148e48da0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2ad148e48da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e4c170"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e4c2f8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e4c480"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e4c608"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e4c790"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e4c918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2ad148e46b38" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2ad148e46b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e45020"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e451a8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e45330"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e454b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e45640"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e457c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2ad148e75758" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2ad148e75758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e75aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2ad148e79020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2ad148e79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e79370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2ad148e77758" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2ad148e77758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e77aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2ad148e74020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2ad148e74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e74370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2ad148e79758" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2ad148e79758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e79aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2ad148e75020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2ad148e75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e75370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2ad148e76850" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2ad148e76850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e76ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2ad148e77020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2ad148e77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e77370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148e94258" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148e94258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148e945a8"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e94730"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e948b8"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e94a40"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e94bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e94d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148e80060" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148e80060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e803b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148ebacf8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148ebacf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148eb90a0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148eb9228"/>
        <function-ref name="disable" scoped="" ref="0x2ad148eb93b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad148eb9538"/>
        <function-ref name="enable" scoped="" ref="0x2ad148eb96c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148eb9848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148eb9b10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148eb9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148eb57e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148eb57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148eb5b38"/>
        <function-ref name="fired" scoped="" ref="0x2ad148eb5cc0"/>
        <function-ref name="disable" scoped="" ref="0x2ad148eb5e48"/>
        <function-ref name="edge" scoped="" ref="0x2ad148eb4020"/>
        <function-ref name="enable" scoped="" ref="0x2ad148eb41a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148eb4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148eb45f8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148eb4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148eb13e0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148eb13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148eb1730"/>
        <function-ref name="fired" scoped="" ref="0x2ad148eb18b8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148eb1a40"/>
        <function-ref name="edge" scoped="" ref="0x2ad148eb1bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ad148eb1d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148eb02e8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eb02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148eb0638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148ead180" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148ead180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ead4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ead658"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ead7e0"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ead968"/>
        <function-ref name="enable" scoped="" ref="0x2ad148eadaf0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148eadc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148eab020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148eab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148eab370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148ea8020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148ea8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ea8370"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ea84f8"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ea8680"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ea8808"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ea8990"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ea8b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148ea8de0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148ea8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ea7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148ea5cd8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148ea5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ea40a0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ea4228"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ea43b0"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ea4538"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ea46c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ea4848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148ea4b10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148ea4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ea4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ad148ea09d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ad148ea09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ea0d28"/>
        <function-ref name="fired" scoped="" ref="0x2ad148e9f020"/>
        <function-ref name="disable" scoped="" ref="0x2ad148e9f1a8"/>
        <function-ref name="edge" scoped="" ref="0x2ad148e9f330"/>
        <function-ref name="enable" scoped="" ref="0x2ad148e9f4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148e9f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ad148e9f908" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ad148e9f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148e9fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ad148ecfb10" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ecfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ecfe60"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ec2020"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ec21a8"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ec2330"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ec24b8"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ec2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad148ecf060" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ad148ecf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ecf3b0"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ecf538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148ecf6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148ecf848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ad148ebe2e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ebe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ebe638"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ebe7c0"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ebe948"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ebead0"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ebec58"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ebede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad148ebf728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ad148ebf728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ebfa78"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ebfc00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148ebfd88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148ebe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ad148ef9ad0" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ef9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ef9e20"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ef8020"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ef81a8"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ef8330"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ef84b8"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ef8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad148ef9020" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ad148ef9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ef9370"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ef94f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148ef9680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148ef9808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ad148ef52e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ad148ef52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad148ef5638"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ef57c0"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ef5948"/>
        <function-ref name="edge" scoped="" ref="0x2ad148ef5ad0"/>
        <function-ref name="enable" scoped="" ref="0x2ad148ef5c58"/>
        <function-ref name="getValue" scoped="" ref="0x2ad148ef5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ad148ef6728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ad148ef6728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad148ef6a78"/>
        <function-ref name="disable" scoped="" ref="0x2ad148ef6c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad148ef6d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad148ef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148ee6dc0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148ee6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148ee1088"/>
        <function-ref name="fired" scoped="" ref="0x2ad148ee4708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148ee2470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148ee2020"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148ee1928"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148ee14d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148ee4b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148ee5930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148ee2a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148ee5dd0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148ee42b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad148edd820" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148edd820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad148eddb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148eddd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148edb550" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148edb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148edb8c0"/>
        <function-ref name="configure" scoped="" ref="0x2ad148edba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad148edc020" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148edc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148edc370"/>
        <function-ref name="requested" scoped="" ref="0x2ad148edc4f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148edc680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148edc808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148edc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148edfa58" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148edfa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148edfdc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148edd020"/>
        <function-ref name="request" scoped="" ref="0x2ad148edd1a8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148edd330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148edd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad148edcbd8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148edcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148edb020"/>
        <function-ref name="userId" scoped="" ref="0x2ad148edb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1497181d8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1497181d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad149718528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad1497187b0" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497187b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149718b00"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad149718c88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149718e10"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149716020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad149714698" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149714698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad149714a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149714b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad1497123e8" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1497123e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad149712758"/>
        <function-ref name="configure" scoped="" ref="0x2ad1497128e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad149712b68" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad149712b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149711020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad1497111a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149711330"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad1497114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad149714dd8" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149714dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149713170"/>
        <function-ref name="requested" scoped="" ref="0x2ad1497132f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad149713480"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149713608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149713790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad149711700" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149711700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad149711a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad149711bd8"/>
        <function-ref name="led1On" scoped="" ref="0x2ad149711d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad149710020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad1497101a8"/>
        <function-ref name="get" scoped="" ref="0x2ad149710330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad1497104b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149710ad8"/>
        <function-ref name="set" scoped="" ref="0x2ad1497107c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad149710640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad149710950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad149715830" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad149715830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149715ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad149715d28"/>
        <function-ref name="request" scoped="" ref="0x2ad149714020"/>
        <function-ref name="granted" scoped="" ref="0x2ad1497141a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149714330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad1497139d8" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1497139d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149713d28"/>
        <function-ref name="userId" scoped="" ref="0x2ad149712020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad149710da0" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad149710da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14970e170"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14970e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad148f180e0" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148f180e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148f18430"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148f185b8"/>
        <function-ref name="start" scoped="" ref="0x2ad148f18740"/>
        <function-ref name="stop" scoped="" ref="0x2ad148f188c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad148f18b10" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f18b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad148f18e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad148f2b0e0" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f2b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f2b430"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f2b5b8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f2b740"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f2b8c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f2ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad148f2bc98" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f2bc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f2a020"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad14973b740" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad14973b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad14973ba90"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad14973bc18"/>
        <function-ref name="start" scoped="" ref="0x2ad14973bda0"/>
        <function-ref name="stop" scoped="" ref="0x2ad14973a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad14973a268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14973a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad14973a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2ad149739b90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2ad149739b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149738020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1497381a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad14973a800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14973a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14973ab50"/>
        <function-ref name="requested" scoped="" ref="0x2ad14973acd8"/>
        <function-ref name="granted" scoped="" ref="0x2ad14973ae60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149739020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1497391a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2ad149738470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2ad149738470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1497387c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad149738948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2ad14973b020" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ad14973b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad14973b370"/>
        <function-ref name="stop" scoped="" ref="0x2ad14973b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad1497393f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1497393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149739740"/>
        <function-ref name="userId" scoped="" ref="0x2ad1497398c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148f24020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148f24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f24b88"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2ad148f22860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2ad148f22860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f21458"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f218c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad148f1f020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148f1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f1f390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f1f518"/>
        <function-ref name="request" scoped="" ref="0x2ad148f1f6a0"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f1f828"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f1f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148f1d790" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148f1d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f1c370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f1c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2ad148f1b060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2ad148f1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f1bbc8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f58088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad148f58720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148f58720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f58a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f58c18"/>
        <function-ref name="request" scoped="" ref="0x2ad148f58da0"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f57020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f571a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad14965a8c8" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad14965a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad14965ac18"/>
        <function-ref name="configure" scoped="" ref="0x2ad14965ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad14965ca10" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad14965ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad14965b5a0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad14965b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad14965a020" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad14965a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad14965a370"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad14965a4f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad14965a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148f440a0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148f440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f44be8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148ff9088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148f3e788" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148f3e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f3d370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f3d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x2ad148f741c8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x2ad148f741c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f74d10"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f721c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x2ad148f3cc58" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x2ad148f3cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f79020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f791a8"/>
        <function-ref name="request" scoped="" ref="0x2ad148f79330"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f794b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x2ad148f77020" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2ad148f77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f77370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f774f8"/>
        <function-ref name="request" scoped="" ref="0x2ad148f77680"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f77808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f77990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x2ad148f763f0" loc="7:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x2ad148f763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148f75020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148f75470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x2ad148f6fce8" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x2ad148f6fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad148f6e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2ad148f6f2d8" loc="16:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148f6f2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148f6f628"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148f6f7b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148f6f938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad148f69510" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f69510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad148f69880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f69a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148f66140" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f66140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148f664b0"/>
        <function-ref name="configure" scoped="" ref="0x2ad148f66638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad148f69c50" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f69c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f67020"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f671a8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f67330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f674b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f67640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148f707c0" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148f707c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f70b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f70cb8"/>
        <function-ref name="request" scoped="" ref="0x2ad148f70e40"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f69020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad148f67888" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f67888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f67bd8"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f67d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad149768dc8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad149768dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad149767170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad1497673f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497673f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149767748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad1497678d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149767a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149767be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad149763200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149763200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad149763570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1497636f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149762e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149762e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1497611c0"/>
        <function-ref name="configure" scoped="" ref="0x2ad149761348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad1497615d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad1497615d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149761920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad149761aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149761c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149761db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad149763940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149763940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149763c90"/>
        <function-ref name="requested" scoped="" ref="0x2ad149763e18"/>
        <function-ref name="granted" scoped="" ref="0x2ad149762020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1497621a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149762330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad149760060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149760060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad1497603b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad149760538"/>
        <function-ref name="led1On" scoped="" ref="0x2ad1497606c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad149760848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad1497609d0"/>
        <function-ref name="get" scoped="" ref="0x2ad149760b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad149760ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad14975f330"/>
        <function-ref name="set" scoped="" ref="0x2ad14975f020"/>
        <function-ref name="led2On" scoped="" ref="0x2ad149760e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad14975f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1497654b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1497654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149765820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1497659a8"/>
        <function-ref name="request" scoped="" ref="0x2ad149765b30"/>
        <function-ref name="granted" scoped="" ref="0x2ad149765cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149765e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad149762578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149762578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1497628c8"/>
        <function-ref name="userId" scoped="" ref="0x2ad149762a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad14975f5f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad14975f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14975f948"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14975fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad148f63698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f63698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad148f63a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f63b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148f613c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f613c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148f61738"/>
        <function-ref name="configure" scoped="" ref="0x2ad148f618c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad148f63dd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f63dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f62170"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f622f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f62480"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f62608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f62790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148f64910" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148f64910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f64c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f64e08"/>
        <function-ref name="request" scoped="" ref="0x2ad148f63020"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f631a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad148f629d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f629d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f62d28"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14978c020" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14978c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14978c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad14978c5f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14978c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad14978c948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad14978cad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad14978cc58"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad14978cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad149788388" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149788388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad1497886f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149788880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149786020" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149786020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad149786390"/>
        <function-ref name="configure" scoped="" ref="0x2ad149786518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad1497867a0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad1497867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149786af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad149786c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149786e00"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149785020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad149788ac8" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149788ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149788e18"/>
        <function-ref name="requested" scoped="" ref="0x2ad149787020"/>
        <function-ref name="granted" scoped="" ref="0x2ad1497871a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149787330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1497874b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad149785268" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149785268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad1497855b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad149785740"/>
        <function-ref name="led1On" scoped="" ref="0x2ad1497858c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad149785a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad149785bd8"/>
        <function-ref name="get" scoped="" ref="0x2ad149785d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad149784020"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149784640"/>
        <function-ref name="set" scoped="" ref="0x2ad149784330"/>
        <function-ref name="led2On" scoped="" ref="0x2ad1497841a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad1497844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad149789630" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad149789630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1497899a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad149789b28"/>
        <function-ref name="request" scoped="" ref="0x2ad149789cb0"/>
        <function-ref name="granted" scoped="" ref="0x2ad149789e38"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad149787700" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149787700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149787a50"/>
        <function-ref name="userId" scoped="" ref="0x2ad149787bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad149784908" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad149784908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149784c58"/>
        <function-ref name="runTask" scoped="" ref="0x2ad149784de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad148f5d9a8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad148f5d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad148f5dd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148f5b6d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148f5b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148f5ba48"/>
        <function-ref name="configure" scoped="" ref="0x2ad148f5bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad148f5c268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f5c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f5c5b8"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f5c740"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f5c8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f5ca50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f5cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148f5fb28" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148f5fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f5d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148f5d1a8"/>
        <function-ref name="request" scoped="" ref="0x2ad148f5d330"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f5d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f5d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad148f5ce20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f5ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f5b1a8"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f5b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad1497b2d10" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad1497b2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1497b10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad1497b1328" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad1497b1328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad1497b1678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad1497b1800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad1497b1988"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad1497b1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad1497ae200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1497ae200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad1497ae570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1497ae6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad14980fe18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad14980fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad14980d1c0"/>
        <function-ref name="configure" scoped="" ref="0x2ad14980d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad14980d5d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad14980d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad14980d920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad14980daa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad14980dc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad14980ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad1497ae940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1497ae940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1497aec90"/>
        <function-ref name="requested" scoped="" ref="0x2ad1497aee18"/>
        <function-ref name="granted" scoped="" ref="0x2ad14980f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14980f1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14980f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad14980c060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad14980c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad14980c3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad14980c538"/>
        <function-ref name="led1On" scoped="" ref="0x2ad14980c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad14980c848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad14980c9d0"/>
        <function-ref name="get" scoped="" ref="0x2ad14980cb58"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad14980cce0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad14980b330"/>
        <function-ref name="set" scoped="" ref="0x2ad14980b020"/>
        <function-ref name="led2On" scoped="" ref="0x2ad14980ce68"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad14980b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1497af4b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1497af4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1497af820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1497af9a8"/>
        <function-ref name="request" scoped="" ref="0x2ad1497afb30"/>
        <function-ref name="granted" scoped="" ref="0x2ad1497afcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1497afe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad14980f578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad14980f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad14980f8c8"/>
        <function-ref name="userId" scoped="" ref="0x2ad14980fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad14980b5f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad14980b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14980b948"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14980bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad148f996d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148f996d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148f99a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148f99bb0"/>
        <function-ref name="start" scoped="" ref="0x2ad148f99d38"/>
        <function-ref name="stop" scoped="" ref="0x2ad148f98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad148f98268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f98268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad148f985b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad148f98800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f98800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f98b50"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f98cd8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f98e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f97020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f971a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad148f973f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f97740"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f978c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad14983cd58" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad14983cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad14983b0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad14983b260"/>
        <function-ref name="start" scoped="" ref="0x2ad14983b3e8"/>
        <function-ref name="stop" scoped="" ref="0x2ad14983b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad14983b7b8" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14983b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad14983bb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2ad149839120" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2ad149839120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149839470"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1498395f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad14983bd50" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14983bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14983a0d8"/>
        <function-ref name="requested" scoped="" ref="0x2ad14983a260"/>
        <function-ref name="granted" scoped="" ref="0x2ad14983a3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14983a570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14983a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2ad1498398c0" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2ad1498398c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149839c10"/>
        <function-ref name="runTask" scoped="" ref="0x2ad149839d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2ad14983c638" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ad14983c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad14983c988"/>
        <function-ref name="stop" scoped="" ref="0x2ad14983cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad14983a940" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad14983a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad14983ac90"/>
        <function-ref name="userId" scoped="" ref="0x2ad14983ae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad148f951c8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148f951c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148f95518"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148f956a0"/>
        <function-ref name="start" scoped="" ref="0x2ad148f95828"/>
        <function-ref name="stop" scoped="" ref="0x2ad148f959b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad148f95bf8" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad148f95bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad148f93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad148f93268" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad148f93268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148f935b8"/>
        <function-ref name="requested" scoped="" ref="0x2ad148f93740"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f938c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f93a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad148f93bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad148f93e20" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad148f93e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad148f921a8"/>
        <function-ref name="userId" scoped="" ref="0x2ad148f92330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad149825020" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad149825020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad149825370"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad1498254f8"/>
        <function-ref name="start" scoped="" ref="0x2ad149825680"/>
        <function-ref name="stop" scoped="" ref="0x2ad149825808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad149825a50" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad149825a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad149825da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2ad149822470" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2ad149822470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1498227c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad149822948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad149823020" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149823020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149823370"/>
        <function-ref name="requested" scoped="" ref="0x2ad1498234f8"/>
        <function-ref name="granted" scoped="" ref="0x2ad149823680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149823808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149823990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2ad149822c10" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2ad149822c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149821020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1498211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2ad1498268d8" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ad1498268d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad149826c28"/>
        <function-ref name="stop" scoped="" ref="0x2ad149826db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad149823bd8" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149823bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149822020"/>
        <function-ref name="userId" scoped="" ref="0x2ad1498221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad148fb1540" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148fb1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148fb1890"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148fb1a18"/>
        <function-ref name="start" scoped="" ref="0x2ad148fb1ba0"/>
        <function-ref name="stop" scoped="" ref="0x2ad148fb1d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2ad148faf7d8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2ad148faf7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148fafb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148fafcb0"/>
        <function-ref name="request" scoped="" ref="0x2ad148fafe38"/>
        <function-ref name="granted" scoped="" ref="0x2ad148fad020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148fad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148fb01c0" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148fb01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fb0d28"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148faf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2ad148fa6d98" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2ad148fa6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148fa5170"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148fa52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2ad148fa84a0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2ad148fa84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148fa87f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148fa8978"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148fa8b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148fa8c88"/>
        <function-ref name="get" scoped="" ref="0x2ad148fa8e10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148fa7020"/>
        <function-ref name="set" scoped="" ref="0x2ad148fa71a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad148fa7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2ad148fa76c0" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2ad148fa76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fa6370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fa67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148fad4f8" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148fad4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148faa768"/>
        <function-ref name="fired" scoped="" ref="0x2ad148face18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148fabb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148fab728"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148fa8088"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148faabb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148fab2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148fac088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148faa198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148fac528"/>
        <function-ref name="stop" scoped="" ref="0x2ad148fac9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad148fa3600" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148fa3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148fa3950"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148fa3ad8"/>
        <function-ref name="start" scoped="" ref="0x2ad148fa3c60"/>
        <function-ref name="stop" scoped="" ref="0x2ad148fa3de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2ad148fa18f0" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2ad148fa18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148fa1c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148fa1dc8"/>
        <function-ref name="request" scoped="" ref="0x2ad148f9f020"/>
        <function-ref name="granted" scoped="" ref="0x2ad148f9f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148f9f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148fa2288" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148fa2288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fa2df0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fa12d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2ad148fd9e00" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2ad148fd9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad148fd81a8"/>
        <function-ref name="runTask" scoped="" ref="0x2ad148fd8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2ad148f9a5d8" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2ad148f9a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad148f9a928"/>
        <function-ref name="isInput" scoped="" ref="0x2ad148f9aab0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad148f9ac38"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad148f9adc0"/>
        <function-ref name="get" scoped="" ref="0x2ad148fda020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad148fda1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad148fda330"/>
        <function-ref name="clr" scoped="" ref="0x2ad148fda4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2ad148fda848" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2ad148fda848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fd93d8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fd9828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad148f9f680" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148f9f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148f9c8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148f9d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148f9dd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148f9d8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148f9a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148f9cd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148f9d470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148f9e1f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148f9c320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148f9e698"/>
        <function-ref name="stop" scoped="" ref="0x2ad148f9eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad148fd65e8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad148fd65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad148fd28f0"/>
        <function-ref name="fired" scoped="" ref="0x2ad148fd3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad148fd3d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad148fd38c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad148fd11c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad148fd2d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad148fd3470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad148fd5158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad148fd2320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad148fd55f8"/>
        <function-ref name="stop" scoped="" ref="0x2ad148fd5a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad148fcd908" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad148fcd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad148fcdc58"/>
        <function-ref name="configure" scoped="" ref="0x2ad148fcdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148fd0aa8" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148fd0aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fcf620"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fcfa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad148fcd060" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fcd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148fcd3b0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148fcd538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148fcd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148fbfd58" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148fbfd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fbd8f0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fbdd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2ad148fbc5e8" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2ad148fbc5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fbb198"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fbb608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad148fbbca0" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148fbbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148ffb0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148ffb228"/>
        <function-ref name="request" scoped="" ref="0x2ad148ffb3b0"/>
        <function-ref name="granted" scoped="" ref="0x2ad148ffb538"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148ffb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad1491e2380" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad1491e2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1491e1020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1491e1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2ad1491e1a08" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2ad1491e1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2ad1491e1d58"/>
        <function-ref name="disable" scoped="" ref="0x2ad1491e0020"/>
        <function-ref name="stopMic" scoped="" ref="0x2ad1491e01a8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2ad1491e0330"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2ad1491e04b8"/>
        <function-ref name="enable" scoped="" ref="0x2ad1491e0640"/>
        <function-ref name="muxSel" scoped="" ref="0x2ad1491e07c8"/>
        <function-ref name="startMic" scoped="" ref="0x2ad1491e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad148fea6f8" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad148fea6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fe9370"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fe97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2ad148fe7538" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2ad148fe7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad148fe60c0"/>
        <function-ref name="readDone" scoped="" ref="0x2ad148fe6510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2ad148fe0c10" loc="43:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2ad148fe0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2ad148fde020"/>
        <function-ref name="disable" scoped="" ref="0x2ad148fde1a8"/>
        <function-ref name="stopMic" scoped="" ref="0x2ad148fde330"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2ad148fde4b8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2ad148fde640"/>
        <function-ref name="enable" scoped="" ref="0x2ad148fde7c8"/>
        <function-ref name="muxSel" scoped="" ref="0x2ad148fde950"/>
        <function-ref name="startMic" scoped="" ref="0x2ad148fdead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2ad148fe0300" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad148fe0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad148fe0650"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad148fe07d8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad148fe0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad148fe1598" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad148fe1598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad148fe18e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad148fe1a70"/>
        <function-ref name="request" scoped="" ref="0x2ad148fe1bf8"/>
        <function-ref name="granted" scoped="" ref="0x2ad148fe1d80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad148fe0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad148fdd668" loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad148fdd668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad148fdd9b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad148fddb40"/>
        <function-ref name="start" scoped="" ref="0x2ad148fddcc8"/>
        <function-ref name="stop" scoped="" ref="0x2ad148fdde50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x2ad1490136d8" loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x2ad1490136d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149013a28"/>
        <function-ref name="isInput" scoped="" ref="0x2ad149013bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149013d38"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad149012020"/>
        <function-ref name="get" scoped="" ref="0x2ad1490121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149012330"/>
        <function-ref name="set" scoped="" ref="0x2ad1490124b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad149012640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x2ad14901b438" loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2ad14901b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad14901b788"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad14901b910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad14901ba98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x2ad1490150b8" loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x2ad1490150b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad149015408"/>
        <function-ref name="isInput" scoped="" ref="0x2ad149015590"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149015718"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad1490158a0"/>
        <function-ref name="get" scoped="" ref="0x2ad149015a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149015bb0"/>
        <function-ref name="set" scoped="" ref="0x2ad149015d38"/>
        <function-ref name="clr" scoped="" ref="0x2ad149014020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x2ad1490143a8" loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x2ad1490143a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad1490146f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad149014880"/>
        <function-ref name="toggle" scoped="" ref="0x2ad149014a08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad149014b90"/>
        <function-ref name="get" scoped="" ref="0x2ad149014d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad149013020"/>
        <function-ref name="set" scoped="" ref="0x2ad1490131a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad149013330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2ad14901c188" loc="48:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2ad14901c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2ad14901c4d8"/>
        <function-ref name="disable" scoped="" ref="0x2ad14901c660"/>
        <function-ref name="stopMic" scoped="" ref="0x2ad14901c7e8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2ad14901c970"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2ad14901caf8"/>
        <function-ref name="enable" scoped="" ref="0x2ad14901cc80"/>
        <function-ref name="muxSel" scoped="" ref="0x2ad14901ce08"/>
        <function-ref name="startMic" scoped="" ref="0x2ad14901b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2ad149003828" loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2ad149003828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149003b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad149003d00"/>
        <function-ref name="request" scoped="" ref="0x2ad149002020"/>
        <function-ref name="granted" scoped="" ref="0x2ad1490021a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149002330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x2ad1490129b0" loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x2ad1490129b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2ad149012d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2ad149006c30" loc="56:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2ad149006c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad149010820"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad149004ba0"/>
        <function-ref name="write" scoped="" ref="0x2ad1490053c8"/>
        <function-ref name="readDone" scoped="" ref="0x2ad149004020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x2ad149002710" loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x2ad149002710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad149002a60"/>
        <function-ref name="disable" scoped="" ref="0x2ad149002be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ad149002d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ad149001020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad14901a020" loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad14901a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad1490162b8"/>
        <function-ref name="fired" scoped="" ref="0x2ad149019978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad1490186c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad149018278"/>
        <function-ref name="getdt" scoped="" ref="0x2ad149016b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ad149016708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad149019dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad14901ab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad149018c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad149019088"/>
        <function-ref name="stop" scoped="" ref="0x2ad149019528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad14905e1d0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad14905e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14905e520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad14905e6a8"/>
        <function-ref name="request" scoped="" ref="0x2ad14905e830"/>
        <function-ref name="granted" scoped="" ref="0x2ad14905e9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14905eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2ad14917b020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2ad14917b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad14917bba0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad149178020"/>
        <function-ref name="write" scoped="" ref="0x2ad14917a790"/>
        <function-ref name="readDone" scoped="" ref="0x2ad149179388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad149050538" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad149050538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149050888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad149050a10"/>
        <function-ref name="request" scoped="" ref="0x2ad149050b98"/>
        <function-ref name="granted" scoped="" ref="0x2ad149050d20"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14904f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2ad14904f9b0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2ad14904f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad14904e560"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad14904b8b0"/>
        <function-ref name="write" scoped="" ref="0x2ad14904c130"/>
        <function-ref name="readDone" scoped="" ref="0x2ad14904ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad149060af8" loc="92:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149060af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad149060e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1490a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad1490a26d8" loc="96:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1490a26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1490a2a48"/>
        <function-ref name="configure" scoped="" ref="0x2ad1490a2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad1490a3268" loc="93:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1490a3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1490a35b8"/>
        <function-ref name="requested" scoped="" ref="0x2ad1490a3740"/>
        <function-ref name="granted" scoped="" ref="0x2ad1490a38c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1490a3a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1490a3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad149061d80" loc="91:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad149061d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149060170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1490602f8"/>
        <function-ref name="request" scoped="" ref="0x2ad149060480"/>
        <function-ref name="granted" scoped="" ref="0x2ad149060608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149060790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad1490a3e20" loc="94:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1490a3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1490a21a8"/>
        <function-ref name="userId" scoped="" ref="0x2ad1490a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad149896d88" loc="44:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad149896d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad149895170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad1498953f8" loc="45:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad1498953f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149895748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad1498958d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149895a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149895be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad149892200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad149892200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad149892570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1498926f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149890e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149890e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad14988f1c0"/>
        <function-ref name="configure" scoped="" ref="0x2ad14988f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad14988f5d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad14988f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad14988f920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad14988faa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad14988fc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad14988fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad149892940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad149892940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149892c90"/>
        <function-ref name="requested" scoped="" ref="0x2ad149892e18"/>
        <function-ref name="granted" scoped="" ref="0x2ad149890020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1498901a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad149890330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad14988e060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad14988e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad14988e3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad14988e538"/>
        <function-ref name="led1On" scoped="" ref="0x2ad14988e6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad14988e848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad14988e9d0"/>
        <function-ref name="get" scoped="" ref="0x2ad14988eb58"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad14988ece0"/>
        <function-ref name="led0On" scoped="" ref="0x2ad14988d330"/>
        <function-ref name="set" scoped="" ref="0x2ad14988d020"/>
        <function-ref name="led2On" scoped="" ref="0x2ad14988ee68"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad14988d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1498934b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1498934b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad149893820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1498939a8"/>
        <function-ref name="request" scoped="" ref="0x2ad149893b30"/>
        <function-ref name="granted" scoped="" ref="0x2ad149893cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149893e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad149890578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad149890578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1498908c8"/>
        <function-ref name="userId" scoped="" ref="0x2ad149890a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad14988d5f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad14988d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14988d948"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14988dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad1490a0d20" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1490a0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad14909f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad14909f2e8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14909f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14909f638"/>
        <function-ref name="requested" scoped="" ref="0x2ad14909f7c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad14909f948"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14909fad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14909fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ad1490a0600" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1490a0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad1490a0950"/>
        <function-ref name="stop" scoped="" ref="0x2ad1490a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad14909e020" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad14909e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad14909e370"/>
        <function-ref name="userId" scoped="" ref="0x2ad14909e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2ad1490e6420" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2ad1490e6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad1490e6770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad1490a5a10" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad1490a5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1490a45d8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad1490e88e8"/>
        <function-ref name="write" scoped="" ref="0x2ad1490e9190"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1490e9d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad1490e69f8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad1490e69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad1490e6d48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad1490e5020"/>
        <function-ref name="led1On" scoped="" ref="0x2ad1490e51a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad1490e5330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad1490e54b8"/>
        <function-ref name="get" scoped="" ref="0x2ad1490e5640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad1490e57c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad1490e5de8"/>
        <function-ref name="set" scoped="" ref="0x2ad1490e5ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad1490e5950"/>
        <function-ref name="led0On" scoped="" ref="0x2ad1490e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad14909a140" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad14909a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14909a4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad14909a638"/>
        <function-ref name="request" scoped="" ref="0x2ad14909a7c0"/>
        <function-ref name="granted" scoped="" ref="0x2ad14909a948"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14909aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2ad1490aa020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2ad1490aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1490aabc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad1490a7020"/>
        <function-ref name="write" scoped="" ref="0x2ad1490a9790"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1490a8388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2ad1490a7c70" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2ad1490a7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1490a5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1490a51a8"/>
        <function-ref name="request" scoped="" ref="0x2ad1490a5330"/>
        <function-ref name="granted" scoped="" ref="0x2ad1490a54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1490a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2ad14914f318" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2ad14914f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ad14914f668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2ad14914f930" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2ad14914f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2ad14914fc80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2ad14914fe08"/>
        <function-ref name="setStart" scoped="" ref="0x2ad14914e020"/>
        <function-ref name="status" scoped="" ref="0x2ad14914e1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2ad14914e330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad14914e4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad14914e640"/>
        <function-ref name="read" scoped="" ref="0x2ad14914e7c8"/>
        <function-ref name="init" scoped="" ref="0x2ad14914e950"/>
        <function-ref name="enableAck" scoped="" ref="0x2ad14914ead8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad14914ec60"/>
        <function-ref name="hasStart" scoped="" ref="0x2ad14914ede8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad14914d020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2ad14914d2a8"/>
        <function-ref name="enable" scoped="" ref="0x2ad14914d430"/>
        <function-ref name="write" scoped="" ref="0x2ad14914d5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2ad14914d740"/>
        <function-ref name="off" scoped="" ref="0x2ad14914d8c8"/>
        <function-ref name="setStop" scoped="" ref="0x2ad14914da50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2ad14914dbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad14914dd60"/>
        <function-ref name="hasStop" scoped="" ref="0x2ad14914c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2ad14914c2e8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2ad14914c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad14914c638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad14914c7c0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad14914c948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad14914cad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad14914cc58"/>
        <function-ref name="get" scoped="" ref="0x2ad14914cde0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad14914b020"/>
        <function-ref name="led2On" scoped="" ref="0x2ad14914b640"/>
        <function-ref name="set" scoped="" ref="0x2ad14914b330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad14914b1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad14914b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2ad14914b908" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2ad14914b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad14914bc58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad14914bde0"/>
        <function-ref name="led1On" scoped="" ref="0x2ad149149020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad1491491a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad149149330"/>
        <function-ref name="get" scoped="" ref="0x2ad1491494b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad149149640"/>
        <function-ref name="led2On" scoped="" ref="0x2ad149149c60"/>
        <function-ref name="set" scoped="" ref="0x2ad149149950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad1491497c8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149149ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ad1490e1e60" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad1490e1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad14910d1e8"/>
        <function-ref name="stop" scoped="" ref="0x2ad14910d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2ad14910d700" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2ad14910d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2ad148fe58c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2ad148fe5b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1491523a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ad149150790"/>
        <function-ref name="write" scoped="" ref="0x2ad149151020"/>
        <function-ref name="readDone" scoped="" ref="0x2ad149151ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2ad149146830" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2ad149146830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2ad149146b80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2ad149146d08"/>
        <function-ref name="setStart" scoped="" ref="0x2ad149143020"/>
        <function-ref name="status" scoped="" ref="0x2ad1491431a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2ad149143330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad1491434b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad149143640"/>
        <function-ref name="read" scoped="" ref="0x2ad1491437c8"/>
        <function-ref name="init" scoped="" ref="0x2ad149143950"/>
        <function-ref name="enableAck" scoped="" ref="0x2ad149143ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad149143c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2ad149143de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad149142020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2ad1491422a8"/>
        <function-ref name="enable" scoped="" ref="0x2ad149142430"/>
        <function-ref name="write" scoped="" ref="0x2ad1491425b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2ad149142740"/>
        <function-ref name="off" scoped="" ref="0x2ad1491428c8"/>
        <function-ref name="setStop" scoped="" ref="0x2ad149142a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2ad149142bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad149142d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2ad149141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2ad14913e1d8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2ad14913e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2ad14913e528"/>
        <function-ref name="sendCommand" scoped="" ref="0x2ad14913e6b0"/>
        <function-ref name="setStart" scoped="" ref="0x2ad14913e838"/>
        <function-ref name="status" scoped="" ref="0x2ad14913e9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x2ad14913eb48"/>
        <function-ref name="isEnabled" scoped="" ref="0x2ad14913ecd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad14913ee58"/>
        <function-ref name="read" scoped="" ref="0x2ad14913d020"/>
        <function-ref name="init" scoped="" ref="0x2ad14913d1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x2ad14913d330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad14913d4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x2ad14913d640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad14913d7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x2ad14913da50"/>
        <function-ref name="enable" scoped="" ref="0x2ad14913dbd8"/>
        <function-ref name="write" scoped="" ref="0x2ad14913dd60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2ad14913c020"/>
        <function-ref name="off" scoped="" ref="0x2ad14913c1a8"/>
        <function-ref name="setStop" scoped="" ref="0x2ad14913c330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2ad14913c4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad14913c640"/>
        <function-ref name="hasStop" scoped="" ref="0x2ad14913c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2ad14913cb50" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2ad14913cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14913b020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14913b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14913b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14913b4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad14913b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14913b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad14913b950"/>
        <function-ref name="clr" scoped="" ref="0x2ad14913bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2ad14913be08" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2ad14913be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad14913a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad14913a330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad14913a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad14913a640"/>
        <function-ref name="get" scoped="" ref="0x2ad14913a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad14913a950"/>
        <function-ref name="set" scoped="" ref="0x2ad14913aad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad14913ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad149197d10" loc="46:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad149197d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad1491940a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad149194358" loc="47:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149194358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad1491946a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad149194830"/>
        <function-ref name="led1On" scoped="" ref="0x2ad1491949b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad149194b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad149194cc8"/>
        <function-ref name="get" scoped="" ref="0x2ad149194e50"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad149193020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad149193640"/>
        <function-ref name="set" scoped="" ref="0x2ad1491931a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149193330"/>
        <function-ref name="led2On" scoped="" ref="0x2ad1491934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad1491bd020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad1491bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad148257608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad148257960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad1491ba2b8"/>
        <function-ref name="fired" scoped="" ref="0x2ad1491bc978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad1491bb6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad1491bb278"/>
        <function-ref name="getdt" scoped="" ref="0x2ad1491bab58"/>
        <function-ref name="gett0" scoped="" ref="0x2ad1491ba708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad1491bcdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad1491bdb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad1491bbc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad1491bc088"/>
        <function-ref name="stop" scoped="" ref="0x2ad1491bc528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad1491b6af8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad1491b6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad1491b6e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1491b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad1491b46d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad1491b46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1491b4a48"/>
        <function-ref name="configure" scoped="" ref="0x2ad1491b4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad1491b5268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1491b55b8"/>
        <function-ref name="requested" scoped="" ref="0x2ad1491b5740"/>
        <function-ref name="granted" scoped="" ref="0x2ad1491b58c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1491b5a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1491b5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad1491b7d88" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1491b7d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1491b6170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1491b62f8"/>
        <function-ref name="request" scoped="" ref="0x2ad1491b6480"/>
        <function-ref name="granted" scoped="" ref="0x2ad1491b6608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1491b6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad1491b5e20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491b5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1491b41a8"/>
        <function-ref name="userId" scoped="" ref="0x2ad1491b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad14993f980" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad14993f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad14993fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ad14993e020" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ad14993e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad14993e370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad14993e4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad14993e680"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad14993e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad14993cd58" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad14993cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad14993a0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14993a278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149939980" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149939980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad149939cf0"/>
        <function-ref name="configure" scoped="" ref="0x2ad149939e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad149938130" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad149938130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad149938480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad149938608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad149938790"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad149938918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ad14993a4c0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14993a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14993a810"/>
        <function-ref name="requested" scoped="" ref="0x2ad14993a998"/>
        <function-ref name="granted" scoped="" ref="0x2ad14993ab20"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14993aca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad14993ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad149938b60" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad149938b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad149937020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad1499371a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ad149937330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad1499374b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad149937640"/>
        <function-ref name="get" scoped="" ref="0x2ad1499377c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad149937950"/>
        <function-ref name="led0On" scoped="" ref="0x2ad149936020"/>
        <function-ref name="set" scoped="" ref="0x2ad149937c60"/>
        <function-ref name="led2On" scoped="" ref="0x2ad149937ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad149937de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad14993c060" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad14993c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14993c3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad14993c558"/>
        <function-ref name="request" scoped="" ref="0x2ad14993c6e0"/>
        <function-ref name="granted" scoped="" ref="0x2ad14993c868"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad14993c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad1499390e0" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1499390e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149939430"/>
        <function-ref name="userId" scoped="" ref="0x2ad1499395b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad1499362e8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad1499362e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149936638"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1499367c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad1491b26d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad1491b26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad1491b2a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad1491b2bb0"/>
        <function-ref name="start" scoped="" ref="0x2ad1491b2d38"/>
        <function-ref name="stop" scoped="" ref="0x2ad1491b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad1491b1268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad1491b1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad1491b15b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad1491b1800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad1491b1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1491b1b50"/>
        <function-ref name="requested" scoped="" ref="0x2ad1491b1cd8"/>
        <function-ref name="granted" scoped="" ref="0x2ad1491b1e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1491af020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1491af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad1491af3f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1491af3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad1491af740"/>
        <function-ref name="userId" scoped="" ref="0x2ad1491af8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ad14996c780" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad14996c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad14996cad0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad14996cc58"/>
        <function-ref name="start" scoped="" ref="0x2ad14996cde0"/>
        <function-ref name="stop" scoped="" ref="0x2ad14996b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ad14996b268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ad14996b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ad14996b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2ad149969b90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2ad149969b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad149968020"/>
        <function-ref name="runTask" scoped="" ref="0x2ad1499681a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ad14996b800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ad14996b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad14996bb50"/>
        <function-ref name="requested" scoped="" ref="0x2ad14996bcd8"/>
        <function-ref name="granted" scoped="" ref="0x2ad14996be60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad149969020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad1499691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2ad149968470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2ad149968470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad1499687c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad149968948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2ad14996c060" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ad14996c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad14996c3b0"/>
        <function-ref name="stop" scoped="" ref="0x2ad14996c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad1499693f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad1499693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad149969740"/>
        <function-ref name="userId" scoped="" ref="0x2ad1499698c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad1491a5020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad1491a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1491a5b88"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1491a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2ad1491a3860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2ad1491a3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad1491a2458"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1491a28c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad1491a1020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad1491a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad1491a1390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad1491a1518"/>
        <function-ref name="request" scoped="" ref="0x2ad1491a16a0"/>
        <function-ref name="granted" scoped="" ref="0x2ad1491a1828"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad1491a19b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad149846578" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad149846578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad1498468c8"/>
        <function-ref name="configure" scoped="" ref="0x2ad149846a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2ad1498485f0" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2ad1498485f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ad149847198"/>
        <function-ref name="readDone" scoped="" ref="0x2ad1498475e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2ad149847ba0" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2ad149847ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2ad149846020"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad1498461a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2ad149846330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad14923dd20" loc="49:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad14923dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad14923c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14923c228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14923c3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14923c538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad14923c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad14923c908" loc="50:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad14923c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad14923cc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad14923cde0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14923b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14923b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad14923b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad14923b578" loc="51:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad14923b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad14923b8c8"/>
        <function-ref name="source" scoped="" ref="0x2ad14923ba50"/>
        <function-ref name="address" scoped="" ref="0x2ad14923bbd8"/>
        <function-ref name="destination" scoped="" ref="0x2ad14923bd60"/>
        <function-ref name="setSource" scoped="" ref="0x2ad14923a020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad14923a1a8"/>
        <function-ref name="type" scoped="" ref="0x2ad14923a330"/>
        <function-ref name="setType" scoped="" ref="0x2ad14923a4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad14923a640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad14923a7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad14923a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad14923abd8" loc="52:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ad14923abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad149239020"/>
        <function-ref name="noAck" scoped="" ref="0x2ad1492391a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad149239330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad149946978" loc="49:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad149946978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad149946cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad149946e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad149945020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1499451a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad149945330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad149945578" loc="50:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad149945578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad1499458c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad149945a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad149945bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad149945d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad149944020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad149944268" loc="51:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad149944268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad1499445b8"/>
        <function-ref name="source" scoped="" ref="0x2ad149944740"/>
        <function-ref name="address" scoped="" ref="0x2ad1499448c8"/>
        <function-ref name="destination" scoped="" ref="0x2ad149944a50"/>
        <function-ref name="setSource" scoped="" ref="0x2ad149944bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad149944d60"/>
        <function-ref name="type" scoped="" ref="0x2ad149943020"/>
        <function-ref name="setType" scoped="" ref="0x2ad1499431a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad149943330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad1499434b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad149943640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad1499438c8" loc="52:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ad1499438c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad149943c18"/>
        <function-ref name="noAck" scoped="" ref="0x2ad149943da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad1499aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad1499a1378" loc="44:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad1499a1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1499a16c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1499a1850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1499a19d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1499a1b60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1499a1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad1499a0020" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad1499a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad1499a0370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1499a04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad1499a0680"/>
        <function-ref name="cancel" scoped="" ref="0x2ad1499a0808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad1499a0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad1499a0bd8" loc="47:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad1499a0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad14999f020"/>
        <function-ref name="source" scoped="" ref="0x2ad14999f1a8"/>
        <function-ref name="address" scoped="" ref="0x2ad14999f330"/>
        <function-ref name="destination" scoped="" ref="0x2ad14999f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad14999f640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad14999f7c8"/>
        <function-ref name="type" scoped="" ref="0x2ad14999f950"/>
        <function-ref name="setType" scoped="" ref="0x2ad14999fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad14999fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad14999fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad14999e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad1492034f8" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad1492034f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad149203848"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad1492039d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad149203b58"/>
        <function-ref name="cancel" scoped="" ref="0x2ad149203ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad149203e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ad14924f6f8" loc="48:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad14924f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad14924fa68"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14924fbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14924fd78"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14924e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad14924e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad149251920" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad149251920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad149251c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad149251e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14924f020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad14924f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad14924f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad14924da10" loc="50:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad14924da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad14924dd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad14924c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad14924c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad14924c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad14924c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ad14924c780" loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2ad14924c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14924cad0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14924cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ad14924b020" loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2ad14924b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad14924b370"/>
        <function-ref name="runTask" scoped="" ref="0x2ad14924b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad14924e3f0" loc="49:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad14924e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad14924e740"/>
        <function-ref name="source" scoped="" ref="0x2ad14924e8c8"/>
        <function-ref name="address" scoped="" ref="0x2ad14924ea50"/>
        <function-ref name="destination" scoped="" ref="0x2ad14924ebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad14924ed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad14924d020"/>
        <function-ref name="type" scoped="" ref="0x2ad14924d1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ad14924d330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad14924d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad14924d640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad14924d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad149230408" loc="46:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad149230408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad149230758"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad1492308e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad149230a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad149230bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad149230d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad149236e38" loc="45:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad149236e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad1492301c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad14922f020" loc="47:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad14922f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad14922f370"/>
        <function-ref name="source" scoped="" ref="0x2ad14922f4f8"/>
        <function-ref name="address" scoped="" ref="0x2ad14922f680"/>
        <function-ref name="destination" scoped="" ref="0x2ad14922f808"/>
        <function-ref name="setSource" scoped="" ref="0x2ad14922f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad14922fb18"/>
        <function-ref name="type" scoped="" ref="0x2ad14922fca0"/>
        <function-ref name="setType" scoped="" ref="0x2ad14922fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad14927a020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad14927a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad14927a330"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ad1482cebe0" loc="60:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2ad1482f2600" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad1482f4cd8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad1482f2060" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad1482f2370" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad1482fba68" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1482fb4a0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad1482fb7b0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad1482fdc58" loc="123:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad1482f08c8" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1482f0658" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad1482fccf8" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1482fc750" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad1482fca78" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ad1482d8e40" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad1482d8bd0" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ad1482d6290" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad1482d6020" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad1482d8258" loc="104:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad1482d7680" loc="130:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad1482d4d10" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad1482d4d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad148309760" loc="136:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad1482ff110" loc="83:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ad14830bd40" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad14830b7a8" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad14830bac0" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ad14830b070" loc="98:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ad1483076b0" loc="151:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ad148309e80" loc="144:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad1482ff888" loc="92:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ad148301820" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad1483015b0" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ad14830ad28" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad14830a790" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad14830aaa8" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ad148300290" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad148300020" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad148300a38" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ad1483155a0" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1483155a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ad148315dd8" loc="55:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ad148320a98" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1483155a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ad148320518" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ad148320818" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1483155a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ad1482f7920" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
              <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1482f7020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ad1482f7348" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad1482f7658" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ad148324070" loc="61:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ad1483247a8" loc="67:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ad148323020" loc="72:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ad148323e70" loc="83:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ad148321480" loc="100:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad148321c18" loc="117:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ad148323738" loc="77:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad14832f768" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ad14832f4f8" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ad148326900" loc="56:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ad148322608" loc="89:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ad148322d20" loc="94:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad14836d020" loc="62:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ad1483750a8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ad148377de0" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ad1483697f8" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ad148378290" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ad148378020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ad148378d18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ad148378aa8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ad148377590" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ad148385020" loc="44:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ad1483856e8" loc="45:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ad148386178" loc="42:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ad1483834a0" loc="47:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad148386818" loc="43:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ad148385da0" loc="46:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad148387438" loc="40:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ad148387aa8" loc="41:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2ad1483dc5d8" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ad1483d2da0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2ad1483dcdb8" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad1483d0600" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2ad1483cfc68" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad1483cf9f8" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad1483cf2a0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad1483d0ca0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad1483cf020" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x2ad1483df428" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x2ad1483fe020" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x2ad1483fc020" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2ad1483fd7f8" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2ad1483ff778" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad1483ff508" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2ad1483fd020" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2ad1483fc700" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x2ad1483fe7d8" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2ad1483fce30" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ad14840c7f8" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad14840c588" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad1481d3970" loc="57:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ad1481d5878" loc="72:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ad1481d50d8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ad1481e1608" loc="67:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ad1481e1df8" loc="75:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ad14829b450" loc="76:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ad1482b6d28" loc="62:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ad148237940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ad1482b46d8" loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad1485ca020" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485b3c60" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ad1485c9020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485cad58" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad1485c4150" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485c6b20" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad1485c6e30" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad1485c6290" loc="106:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ad1485c73e0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485c9e00" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad1485c7160" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ad1485cdae0" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad1485cdae0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad1485cdd10" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1485cdd10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ad1485dc9d8" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1485cdd10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485dc768" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ad1485dbab8" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485db848" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ad1485df870" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485df600" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad1485f3d10" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1485cdd10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485f3750" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ad1485f3a90" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1485cdd10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ad1485e9728" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485e9140" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ad1485e94a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ad1485e77e8" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485e7578" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ad1485ea978" loc="57:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ad1485ea020" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ad1485edd60" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ad1485e40a8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485c3dd8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ad1485e3290" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485e3020" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ad1485e1338" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485e10c8" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ad1485d0680" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d0410" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ad1485d9418" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d91a8" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ad1485cc988" loc="68:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad1485c1418" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485c11a8" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad1485d6bc0" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d6608" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad1485d6940" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad1485d8760" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d81a8" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad1485d84e0" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ad1485d3290" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d3020" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ad1485d15a0" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d1020" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ad1485d1320" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad1482e1628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ad1485d4020" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485d7d60" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ad1485cfa50" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad1485cf4a0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad1485cf7d0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ad1485e6818" loc="195:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ad148603c40" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1486039d0" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ad148608d10" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad148608aa0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad148601ac0" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad148601850" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad148602b70" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad148602900" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ad1485f5370" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1485f5100" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad14860f5b0" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad14860f020" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad14860f330" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad14860e878" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad14860e2b0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad14860e5c0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad148624a58" loc="112:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad148627828" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1486275b8" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad148626c10" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad148626668" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad148626990" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x2ad148667d98" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x2ad1486675f8" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x2ad1486634d8" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2ad148663268" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x2ad148664510" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2ad1486642a0" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad1486bd420" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad1486bd420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad1486bd650" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1486bd650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ad1486bc118" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1486bd650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad1486bde78" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad1486bd650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ad1486ba378" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1486ba378"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ad1486babe8" loc="58:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ad1486b88e8" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1486ba378"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ad1486b8368" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ad1486b8668" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ad1486ba378"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ad1486a7dc8" loc="52:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ad1486a7630" loc="46:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2ad1486a9798" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x2ad1486a8020" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x2ad1486a9020" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad148698cd0" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x2ad1486b4708" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x2ad1486b4498" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x2ad1486b0890" loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x2ad1486afaf0" loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x2ad1486b3290" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x2ad1486b3020" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x2ad1486ae4c0" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x2ad1486ae250" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2ad1486a2d78" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x2ad1486aec98" loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x2ad1486b00d8" loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2ad1486b1258" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x2ad1486ac488" loc="147:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2ad1486b1968" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2ad1486b3b18" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x2ad1486af2d0" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x2ad1486af060" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ad14868abd8" loc="95:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad1486a33a0" loc="105:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x2ad1486a1020" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad1486a5d68" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2ad14869d1d8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x2ad14869cad8" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2ad14869aa30" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x2ad14869ea70" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x2ad14869c290" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x2ad14869c020" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x2ad1486a1720" loc="32:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x2ad14869e290" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x2ad14869e020" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad14869f7d0" loc="44:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2ad14869d8c8" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x2ad14869f020" loc="39:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad1482f5020"/>
              <typename><typedef-ref name="message_t" ref="0x2ad1482f4570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x2ad14869a360" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad1487517d8" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad1487517d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad14874e0d8" loc="61:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad14786d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ad148854870" loc="120:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ad148855960" loc="97:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ad148855070" loc="88:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ad148854110" loc="102:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ad148853290" loc="128:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ad1488dd020" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ad1488de6f8" loc="59:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2ad1488ee768" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ad1488efa60" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2ad1488efdb8" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2ad1488ee178" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2ad1488ee4c8" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ad1489123f0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad148913368" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2ad148913688" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2ad1489139c0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2ad148913d70" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2ad148912140" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2ad1488f3020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ad1488f4250" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2ad1488f45a8" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2ad1488f4910" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2ad1488f4c60" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad1488f1898" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ad1488f1020" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad1488f3a28" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2ad1488f3d48" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2ad1489260d8" loc="114:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2ad1489081d8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad148254020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2ad1482544d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2ad148924338" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ad1489240c8" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2ad148926918" loc="122:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2ad148905d18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2ad148908bb0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad148254020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2ad1482544d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2ad148908940" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad148254020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2ad1482544d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2ad148904b88" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2ad148925870" loc="133:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad148924ad0" loc="150:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2ad148904448" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2ad148903a48" loc="99:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2ad148903328" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2ad1489011d8" loc="106:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2ad1489250d8" loc="127:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2ad148906dd0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad14825aa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2ad148258178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2ad148906b60" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad14825aa10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2ad148258178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2ad148901990" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2ad1489063e0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad14825aa10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2ad148258178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ad1489055b8" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ad148922640" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad1489223d0" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ad14890b020" loc="95:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad14890b7f8" loc="105:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ad148978c98" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ad14899d5c0" loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ad14899ba78" loc="56:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2ad148999a70" loc="73:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ad14899b258" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ad1489992a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ad148998360" loc="81:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ad148996020" loc="90:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ad148996810" loc="98:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ad14898b020" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad148992218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad14898dc60" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad148992218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ad14898e0d8" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ad14898eb58" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad148992218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad14898e8e8" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad148992218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ad14898d428" loc="70:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ad148992218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2ad1489f2c20" loc="62:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ad148a85020" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad148a85020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ad148a85ac8" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad148a85020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ad148a85858" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad148a85020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad148aa03f8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad148aa03f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad148aa0628" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aa0628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad148a9f020" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aa0628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad148aca070" loc="76:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad148a9f838" loc="71:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad148aca760" loc="82:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad148aaddd8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad148aaddd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad148aaa068" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad148aa6958" loc="109:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad148aa9a78" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ad148aa6020" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad148aa7a08" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ad148aa7d28" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad148aa7258" loc="88:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ad148aa5110" loc="116:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad148aaab28" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad148aaa8b8" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148aaa068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad148aa9328" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ad148ad2a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148264a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad148264e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ad148acee18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148271100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad148271508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ad148acfc70" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148269980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad148269d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ad148ace678" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148269980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad148269d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ad148ace408" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148269980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad148269d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ad148acc828" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148271100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad148271508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad148acc5b8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148271100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad148271508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ad148acf4c8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148264a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad148264e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad148acf258" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148264a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad148264e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2ad148aed998" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ad148aeb1d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2ad148aed290" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ad148aeb988" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ad148aee0d8" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14826b118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad14826b520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ad148aeea88" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14826b118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad14826b520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ad148aee818" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14826b118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad14826b520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ad148af8020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148af8020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ad148af4738" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad148af79d0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad148af88d8" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148af8020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad148af5110" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad148af3020" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad148af7290" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148af8020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad148af7020" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148af8020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad148af5808" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad148af4020" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ad148add418" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148add418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ad148ad8900" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ad148ad9a40" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad148addcb8" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148add418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ad148ad6290" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ad148ad6020" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ad148ad6a10" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad148ada4c0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad148adcd50" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad148ad81d8" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad148adc630" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148add418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad148adc3c0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad148add418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad148adabb8" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad148ad9328" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ad148c39648" loc="50:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ad148c374d0" loc="60:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ad148c39da8" loc="55:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ad148c3ce38" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ad148c3c880" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad1482e19d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad148c3cbb8" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad1482e1d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ad148c6a3e0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148290928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ad148290d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2ad148c6c0a8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14827b478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ad14827b880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad148c6edc8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14827b478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ad14827b880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ad148c6b258" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148286578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ad148286980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2ad148c72c18" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148277da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ad148276228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ad148c6bc18" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148286578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ad148286980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ad148c6b9a8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148286578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ad148286980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ad148c6ada0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148290928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ad148290d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad148c6ab30" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148290928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ad148290d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2ad148c6fc20" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148279890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ad148279c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2ad148c6f470" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad14827b478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ad14827b880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2ad148c6e640" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148277da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ad148276228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad148c6e3d0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148277da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ad148276228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2ad148c6ca78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148279890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ad148279c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad148c6c808" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad148279890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ad148279c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ad148c70b68" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2ad148c95648" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2ad148c953d8" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ad148c96568" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad148c9a498" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ad148c997c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad148c99558" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad148c98020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad148c96cb8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad148c9add0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad148c9ab60" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad148c70b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad148c98718" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad148c98e00" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2ad148e16178" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ad148e2de70" loc="68:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad148e2d720" loc="61:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ad148e2d020" loc="54:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ad148e2f648" loc="53:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad148e49020" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad148e48a48" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad148e4a8d0" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ad148e48290" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ad148e48020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ad148e4a1d8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ad148e49760" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ad148e764e0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x2ad148feda98" loc="110:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad148fefc40" loc="97:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x2ad148ff0dc0" loc="87:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x2ad148ff0020" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ad148ff1d50" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x2ad148fef540" loc="92:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ad148fed360" loc="102:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x2ad148ff1698" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x2ad148ff1428" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x2ad148ff06f8" loc="82:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x2ad149011528" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2ad149011528"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ad14900ea30" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2ad148fe2020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad149011da8" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2ad148fe2020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad14900e108" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2ad14900e438" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad14900e790" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ad149006020" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad149007290" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad1490075c0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2ad1490078f0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad149007c48" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad14900c778" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2ad148fe2020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad14900baf8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2ad148fe2020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad14900be28" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2ad14900c180" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad14900c4d8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ad14900a3e0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad149009760" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad1481da1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad149009a90" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad14786cb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2ad149009dc0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ad14900a140" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2ad14908d918" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2ad1490d7db8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2ad1490d64c0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2ad1490d54c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ad1490d5258" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2ad1490d76f8" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2ad1490d2b68" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2ad1490cd700" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2ad1490d14d8" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2ad1490d1268" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2ad1490cbe18" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2ad1490d88f0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2ad1490d8680" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2ad1490d24a0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2ad1490d2230" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2ad1490d1d10" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2ad1490d5ba0" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ad1490cfc50" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2ad1490d6ba8" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ad1490cd020" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ad1490ced00" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad1490cb750" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad1490cb4e0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad14786c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2ad1490cf4f8" loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2ad1490d7020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2ad1490d34b0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ad1490d3240" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2ad1490ce6c0" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ad1490ce450" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2ad1490cde28" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2ad1490d3b78" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad1481d19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
