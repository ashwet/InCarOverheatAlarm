<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="36:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b63c107e020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b63c11218b8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b63c11218b8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b63c1357640"/></to>
    </wire>
    <wire loc="37:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b63c10876f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1365080"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c1365080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c139a638"/></to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c10a9958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c1fedd20"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c1fedd20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c2745978"/></to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b63c1085020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c1fe5e38"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b63c1fe5e38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c137d1c8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c10b8c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1b896e0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1b896e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b63c10b6d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1b83be8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1b83be8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer3" scoped="" ref="0x2b63c10bd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1bb6020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1bb6020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c10c5020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1bb0dc0"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1bb0dc0"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x2b63c1ba7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:OscilloscopeAppC.nc">
      <from><interface-ref name="Read2" scoped="" ref="0x2b63c10c4780"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1cf30a0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1cf30a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1cee788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:OscilloscopeAppC.nc">
      <from><interface-ref name="Read3" scoped="" ref="0x2b63c10ce020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1f92380"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1f92380"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d9a6f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b63c10e0c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b63c1b7d568"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b63c1b7d568"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b63c1b79e08"/></to>
    </wire>
    <wire loc="49:OscilloscopeAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c10df020"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c2029770"/></to>
    </wire>
    <wire loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c2029770"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c2025560"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c26d5980"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c262dd88"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c25abd10"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c2583020"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c255edc8"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c24ae7b8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1840e40"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c18316a0"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c236c520"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c143d708"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c15eac10"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b63c1357c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b63c0f86be8"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b63c0f86be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b63c1045448"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b63c13706a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c111dc10"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c111dc10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1128be8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c1370d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b63c11299a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1b0c020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b63c11299a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c16a0d48"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c1124b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c1346d18"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b63c1131a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c13466e8"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b63c1131370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1b8e2d8"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b63c1131370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112c140"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112c140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112bce0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112c140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113c358"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b63c112c7d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b63c11299a0"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113c358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b63c1182ac0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113c358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113a870"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b63c1137020"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b63c11dfe00"/></to>
    </wire>
    <wire loc="141:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b63c11dfe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c1262740"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b63c1136198"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b63c112c7d0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x2b63c1190108"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b63c11db1a0"/></to>
    </wire>
    <wire loc="143:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b63c11db1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c1260a50"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x2b63c118c338"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b63c11ff968"/></to>
    </wire>
    <wire loc="168:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b63c11ff968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c128e430"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x2b63c11884c0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b63c11fcc78"/></to>
    </wire>
    <wire loc="170:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b63c11fcc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c128b740"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x2b63c1199650"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b63c11fbe00"/></to>
    </wire>
    <wire loc="171:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b63c11fbe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c128a8c8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x2b63c11ae100"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b63c11ec658"/></to>
    </wire>
    <wire loc="147:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b63c11ec658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c126dd60"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x2b63c11ba350"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b63c11ea968"/></to>
    </wire>
    <wire loc="149:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b63c11ea968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c126a020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x2b63c11b94d8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b63c11eb7e0"/></to>
    </wire>
    <wire loc="148:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b63c11eb7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c126ce18"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x2b63c11b8648"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b63c11e51a0"/></to>
    </wire>
    <wire loc="153:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b63c11e51a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c127c5b8"/></to>
    </wire>
    <wire loc="191:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b63c1210968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c12f4970"/></to>
    </wire>
    <wire loc="165:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b63c11ee4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c1291020"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c1291020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2171480"/></to>
    </wire>
    <wire loc="176:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b63c120a4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c1296d60"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c1296d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21fd480"/></to>
    </wire>
    <wire loc="185:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b63c12011a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c12b35b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c12b35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2293480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c1260a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c206c480"/></to>
    </wire>
    <wire loc="183:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b63c1204e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c129f2a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c129f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2245480"/></to>
    </wire>
    <wire loc="146:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b63c11d94d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c126ebd0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c126ebd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20b23e0"/></to>
    </wire>
    <wire loc="157:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b63c11f6658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c1273740"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c1273740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2134480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c128e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21ba480"/></to>
    </wire>
    <wire loc="179:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b63c1207968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c12a8120"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c12a8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21f4480"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b63c11e2968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c12662a8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c12662a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c207b480"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c126a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20f8480"/></to>
    </wire>
    <wire loc="160:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b63c11f3af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c1286bd8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c1286bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c212b480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c128a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21b1480"/></to>
    </wire>
    <wire loc="188:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b63c1212658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c12b0a50"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c12b0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c228a480"/></to>
    </wire>
    <wire loc="194:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b63c120c348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c12fd020"/></to>
    </wire>
    <wire loc="174:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b63c11f81a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c1299a50"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c1299a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2204480"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c1262740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2072480"/></to>
    </wire>
    <wire loc="152:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b63c11e6020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c1267430"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c1267430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20ef480"/></to>
    </wire>
    <wire loc="192:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b63c120e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c12f0ab0"/></to>
    </wire>
    <wire loc="155:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b63c11e4348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c1275500"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c1275500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c213b3e0"/></to>
    </wire>
    <wire loc="166:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b63c11ed658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c1290120"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c1290120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21c0480"/></to>
    </wire>
    <wire loc="177:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b63c1209658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c1295e18"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c1295e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21fa480"/></to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b63c1214348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c12b2740"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c12b2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2290480"/></to>
    </wire>
    <wire loc="144:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b63c11da348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c125fbd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c125fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2069480"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c126dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20af480"/></to>
    </wire>
    <wire loc="158:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b63c11f57e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c12728c8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c12728c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2131480"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b63c11feaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c128d5b8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c128d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21b7480"/></to>
    </wire>
    <wire loc="180:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b63c1206af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c12a72a8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c12a72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21f1480"/></to>
    </wire>
    <wire loc="139:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b63c11e1af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c1265430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c1265430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2078480"/></to>
    </wire>
    <wire loc="150:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b63c11e9af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c1269120"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c1269120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20f5480"/></to>
    </wire>
    <wire loc="161:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b63c11f2c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b63c1285d60"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c1285d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2128480"/></to>
    </wire>
    <wire loc="189:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b63c12117e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c12afbd8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c12afbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2287480"/></to>
    </wire>
    <wire loc="164:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b63c11ef020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c127de40"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c127de40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21753e0"/></to>
    </wire>
    <wire loc="175:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b63c11f7348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c1298bd8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c1298bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2200480"/></to>
    </wire>
    <wire loc="184:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b63c1202020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b63c129e430"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c129e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2296480"/></to>
    </wire>
    <wire loc="195:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b63c120b4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c12f9180"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b63c11dd020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c12618c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c12618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c206f480"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c127c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20ec480"/></to>
    </wire>
    <wire loc="182:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b63c1205c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c12a01e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c12a01e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c22483e0"/></to>
    </wire>
    <wire loc="156:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b63c11e34d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b63c12745b8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b63c12745b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2137480"/></to>
    </wire>
    <wire loc="167:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b63c12007e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c128f2a8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c128f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21bd480"/></to>
    </wire>
    <wire loc="178:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b63c12087e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c1293020"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c1293020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21f7480"/></to>
    </wire>
    <wire loc="187:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b63c12134d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c12b18c8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c12b18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c228d480"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b63c11b1780"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c12511e8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c12511e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c207e3e0"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b63c126ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20ac480"/></to>
    </wire>
    <wire loc="159:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b63c11f4968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b63c1287a50"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b63c1287a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c212e480"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b63c128b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c21b4480"/></to>
    </wire>
    <wire loc="193:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b63c120d1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c1303c38"/></to>
    </wire>
    <wire loc="173:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b63c11f9020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b63c129a930"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b63c129a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c22073e0"/></to>
    </wire>
    <wire loc="162:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b63c11f1e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b63c1284e18"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b63c1284e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2125480"/></to>
    </wire>
    <wire loc="140:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b63c11e0c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b63c12635b8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b63c12635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c2075480"/></to>
    </wire>
    <wire loc="151:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b63c11e8e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b63c12682a8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b63c12682a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b63c20f2480"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c10432b0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b63c104c758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b63c1068660"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b63c10632b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b63c18fa268"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c139a638"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c13c9d10"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c1364020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c13ac5f0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c13ac5f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c13c6ba0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b63c137dd10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b63c13aa348"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b63c13aa348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b63c13c3968"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c13711f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c13a8020"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c13a8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c141aa10"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c13a0860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c13a6738"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c13a6738"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c1411060"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c139b080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c13c7e18"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c13c7e18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c14141a0"/></to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b63c137d1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c13ab7a0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b63c13ab7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c13c5dc0"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c1390cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c13a8cb8"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c13a8cb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c14171d0"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c13aa938"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c13aa938"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c13c2020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c13a1968"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c13ba670"/></to>
    </wire>
    <wire loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c13ba670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c1428020"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c13c9d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c143dd20"/></to>
    </wire>
    <wire loc="133:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c1428020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c150b478"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c141aa10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c14f4d20"/></to>
    </wire>
    <wire loc="132:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c1411060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c14ef510"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c13c7338"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c1426ac8"/></to>
    </wire>
    <wire loc="134:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c1426ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c1507020"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c14141a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c143b7f0"/></to>
    </wire>
    <wire loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c14171d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c14f01a0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c13bece0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c1417b30"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c1417b30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c14f0b00"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b63c13d0c58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b63c141b7b0"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b63c141b7b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b63c14f5a20"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b63c13c0978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c141a438"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b63c141a438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b63c14f4748"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b63c13d1070"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b63c19eb6f0"/></to>
    </wire>
    <wire loc="88:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c13bf020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c141aa10"/></to>
    </wire>
    <wire loc="101:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x2b63c1416c30"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x2b63c143c7f0"/></to>
    </wire>
    <wire loc="102:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x2b63c14129a8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x2b63c143b020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b63c145b770"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b63c1625620"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b63c1473df0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b63c1836208"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b63c1836208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b63c182f080"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c145a080"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c16132f0"/></to>
    </wire>
    <wire loc="110:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x2b63c1459770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c184ea60"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c184ea60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x2b63c14499d8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x2b63c14f2968"/></to>
    </wire>
    <wire loc="112:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x2b63c14563e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c14f6b58"/></to>
    </wire>
    <wire loc="113:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x2b63c1452540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b63c14f52d0"/></to>
    </wire>
    <wire loc="115:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x2b63c1507b78"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x2b63c1625620"/></to>
    </wire>
    <wire loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c15056f8"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c1699908"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c1699908"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c11bbd60"/></to>
    </wire>
    <wire loc="117:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x2b63c1501070"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x2b63c19eb6f0"/></to>
    </wire>
    <wire loc="118:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x2b63c1503618"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b63c15e76d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c1504a98"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c16132f0"/></to>
    </wire>
    <wire loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b63c14678e0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b63c15e76d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b63c1469168"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b63c15e76d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b63c14839c8"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x2b63c15e76d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x2b63c14813e0"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x2b63c16081d8"/></to>
    </wire>
    <wire loc="125:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b63c146e348"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b63c1a0d568"/></to>
    </wire>
    <wire loc="127:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x2b63c16074b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x2b63c169c4e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x2b63c169c4e0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b63c1813680"/></to>
    </wire>
    <wire loc="128:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1603620"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x2b63c169bb80"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b63c169bb80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1694980"/></to>
    </wire>
    <wire loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x2b63c1623118"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b63c1698bf8"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x2b63c1698bf8"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x2b63c118dba0"/></to>
    </wire>
    <wire loc="130:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b63c1623e48"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b63c1a0d568"/></to>
    </wire>
    <wire loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b63c1b2de48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c1a32638"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b63c1a32638"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c1b16c50"/></to>
    </wire>
    <wire loc="138:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b63c14fe900"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b63c1a33c38"/></to>
    </wire>
    <wire loc="142:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b63c1500b18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b63c1864c48"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b63c1864c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b63c19d1128"/></to>
    </wire>
    <wire loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x2b63c147cde8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x2b63c14a0778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x2b63c14abc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x2b63c14a5298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x2b63c157e3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x2b63c15b2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b63c1813680"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b63c16af620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1694980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1812c70"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x2b63c118a698"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1812c70"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1811578"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1690a08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1809680"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b63c16af620"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b63c17d8428"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c181b720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c16ab050"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c17d59a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b63c181c060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c17da6a0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c17d6b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c16a1cb8"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c16a1cb8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c16bd488"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b63c16c19b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b63c16bdde0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c17ab840"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c17ab840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c236abb8"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c17a73c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c16d2940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c16ef020"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c16ef020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c17121e8"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c16b9d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c1124b98"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c17a4060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c16bbc10"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17a4d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17aadd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17aadd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2368268"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b63c1710640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b63c1065a80"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c17aa698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c23699a8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c17a99d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2368e20"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c23666f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c17a73c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c2366e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c236caf8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c2363020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c238e020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c17a4060"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c238e740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c17a4780"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c238ecd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17a4d18"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c238d908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c17b9908"/></to>
    </wire>
    <wire loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b63c17ef4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b63c18371a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b63c1830020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c1838310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c18316a0"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c183db68"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b63c183db68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c19e05e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c1840e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1860d90"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c1860d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c195f1f0"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b63c19da858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1996ab0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b63c1991c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b63c1855748"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b63c1855748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b63c195f998"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b63c19fb330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b63c1879e40"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b63c1879e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c195ca90"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b63c195ca90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c23cb020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c195f1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c23d0600"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b63c195f998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b63c23d0da8"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c23c8168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c18e6de8"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c18e6de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c19040f8"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c23c3020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18de020"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18de020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18ff160"/></to>
    </wire>
    <wire loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b63c23c2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b63c18dc020"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b63c18dc020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b63c18fe190"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b63c23be0a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b63c18d9228"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b63c18d9228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b63c18fa968"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b63c198ecf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b63c19d5930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b63c1b32e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c1a2d3a0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b63c1a2d3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b63c1af95a8"/></to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1b1e6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1a27098"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1a27098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1a38020"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c1a21140"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c1a67020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b63c1a45b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b63c1a66680"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b63c1a429c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b63c1a62e60"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b63c1a429c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b63c1a5d2b8"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b63c1a429c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b63c1a59698"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b63c1a56a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18de020"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1b0c740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1a27098"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1b60e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b63c1b8e2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b63c1b79840"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b63c1b75540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b63c1b77d60"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b63c1b77d60"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b63c11e1af0"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b63c1b747d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b63c1b90020"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b63c1b90020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b63c11e2968"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b63c1b73958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b63c1b8f1b0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b63c1b8f1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b63c11b1780"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x2b63c1ba49d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c244e128"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c244e128"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1690a08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c244c6b0"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2b63c1bd59a8"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x2b63c1bd59a8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2b63c1bd0108"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x2b63c1ba7020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1cd3020"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x2b63c1ba6c98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1ccd790"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1ccf020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1b9fbc8"/></to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1b9fbc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1c8ea58"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b63c1cd2860"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x2b63c1ba49d0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d08720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1b9fbc8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b63c1d09060"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x2b63c1ba16a8"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x2b63c1bd4398"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2b63c1bd0ad0"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1c8ea58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c24ace20"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1cdb0e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1c8c020"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1c8c020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c24a93f0"/></to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1cdbc98"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1c8cbd8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1c8cbd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c24a8020"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c1cc80e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1bd3550"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1bcf5f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1c96dc0"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1c96dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x2b63c1bca690"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x2b63c1bea020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2b63c1bea020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b63c11f4968"/></to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x2b63c1bc6560"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b63c1bd7d00"/></to>
    </wire>
    <wire loc="95:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2b63c1bd7d00"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b63c1c0b060"/></to>
    </wire>
    <wire loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x2b63c1bc6c00"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b63c1c113c0"/></to>
    </wire>
    <wire loc="96:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2b63c1c113c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b63c1c0b6d0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b63c1bba190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b63c1be0020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b63c1c6f728"/></to>
    </wire>
    <wire loc="92:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2b63c1bd8980"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2b63c1c0fc28"/></to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2b63c1becde0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b63c11f57e0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2b63c1be8328"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b63c11f2c78"/></to>
    </wire>
    <wire loc="97:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2b63c1c11a30"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2b63c1c0bd40"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b63c1be57d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b63c12087e0"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2b63c1bd9808"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b63c12007e0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2b63c1beead0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b63c11e34d0"/></to>
    </wire>
    <wire loc="90:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b63c1bdf858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b63c1ca6728"/></to>
    </wire>
    <wire loc="93:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2b63c1bd7020"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b63c1c0c340"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2b63c1bda680"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b63c11ed658"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2b63c1be74b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b63c11f1e00"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b63c1bdc2b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b63c1c7f060"/></to>
    </wire>
    <wire loc="98:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2b63c1c10340"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2b63c1c0a3f8"/></to>
    </wire>
    <wire loc="69:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b63c1be4958"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b63c1207968"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2b63c1bedc58"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b63c11f6658"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2b63c1be9180"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b63c11f3af0"/></to>
    </wire>
    <wire loc="94:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2b63c1bd7690"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b63c1c0c9b0"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b63c1be6648"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b63c1209658"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b63c1be0ba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b63c1ca9020"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2b63c1bdb4f8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b63c11feaf0"/></to>
    </wire>
    <wire loc="99:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2b63c1c109b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2b63c1c0aa68"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2b63c1bf1970"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b63c11e4348"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b63c1be2ae0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b63c1206af0"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1c7fb10"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2b63c1bf5b38"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b63c1bf5b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c5c180"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1c6e2e8"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2b63c1c30b38"/></to>
    </wire>
    <wire loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b63c1c30b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c58020"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1ca9ad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b63c1c2fb38"/></to>
    </wire>
    <wire loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b63c1c2fb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c55cd8"/></to>
    </wire>
    <wire loc="89:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1ca52e8"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2b63c1c2eb38"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b63c1c2eb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c509d8"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b63c1bfcc88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c6acf8"/></to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b63c1bfbb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c657e8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b63c1bf7da0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c44258"/></to>
    </wire>
    <wire loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b63c1bf6b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b63c1c613e0"/></to>
    </wire>
    <wire loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c6c060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b63c1c26850"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c68b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b63c1c29020"/></to>
    </wire>
    <wire loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c645f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b63c1c29758"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c602e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b63c1c27020"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c5b020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b63c1c27758"/></to>
    </wire>
    <wire loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c58de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b63c1c24020"/></to>
    </wire>
    <wire loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c53b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b63c1c24758"/></to>
    </wire>
    <wire loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c4f908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b63c1c23020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1c8d820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c24aab48"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c24a88c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1ccb550"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c24a70a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c24aed90"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c24a5100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c24d2740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1cc80e0"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c24d1268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1cc8b10"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c24d1800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1cdb0e0"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c252e3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1cdbc98"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b63c252eb90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b63c252d470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c244c6b0"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c16ab050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c244b020"/></to>
    </wire>
    <wire loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1cee788"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d6ed58"/></to>
    </wire>
    <wire loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b63c1d6c5e8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x2b63c1d231c8"/></to>
    </wire>
    <wire loc="46:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x2b63c1d231c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d52288"/></to>
    </wire>
    <wire loc="12:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d6bca0"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x2b63c1d27020"/></to>
    </wire>
    <wire loc="33:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2b63c1d27020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1d0eb28"/></to>
    </wire>
    <wire loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x2b63c1cebc58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1d14910"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d14910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c2581630"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d0eb28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c25a74b0"/></to>
    </wire>
    <wire loc="30:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x2b63c1d263f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d601c0"/></to>
    </wire>
    <wire loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d48800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d13dd8"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d13dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c257fac8"/></to>
    </wire>
    <wire loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d463f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d129d8"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d129d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c257e700"/></to>
    </wire>
    <wire loc="26:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d496d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d61540"/></to>
    </wire>
    <wire loc="27:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b63c1d5e7d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1d207c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1d5d4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1d865e8"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1d865e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b63c1d584a0"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x2b63c1be57d0"/></to>
    </wire>
    <wire loc="31:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d576c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d7faa8"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1d7faa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1690a08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d43268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d0c268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d0c268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c25a6940"/></to>
    </wire>
    <wire loc="35:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d43e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d0ce20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d0ce20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c25a5578"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d441c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d53600"/></to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b63c1d508f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1d207c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1d4f680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1d865e8"/></to>
    </wire>
    <wire loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b63c1d8b5d8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x2b63c1bf1970"/></to>
    </wire>
    <wire loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d8a848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1d7faa8"/></to>
    </wire>
    <wire loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d7d060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d1f2d8"/></to>
    </wire>
    <wire loc="50:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b63c1d1fce8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b63c1bd7020"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d18510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c255a200"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d18c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c255a940"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d207c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c255b4b0"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d17888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2559578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2559e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d16140"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c25585d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c255d3f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c25555f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d13698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c257f388"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c257d020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d113c8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c257d7a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c25835f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c257b908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d0d9a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c25a6200"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c25a5e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d0b6d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c25a45d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c25aa328"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c25a25f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c25d2d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d496d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c25d17b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1d48268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c25d1d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d48800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c25d0940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d463f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b63c25cf120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b63c25cf8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c261e020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d441c8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c261ea50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1d44bf8"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c261d020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d43268"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c261dbd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d43e20"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b63c261c470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b63c261cc10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b63c1d56d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b63c1d89e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d7d060"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c16ab050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d7d908"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2b63c1f91a08"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2b63c1d8fc10"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2b63c1d8fc10"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2b63c1dcc188"/></to>
    </wire>
    <wire loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d97538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c26435f0"/></to>
    </wire>
    <wire loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c26435f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1690a08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c2642ba0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d8f300"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d8f300"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b63c1dcb438"/></to>
    </wire>
    <wire loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b63c1d9a6f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b63c1f54020"/></to>
    </wire>
    <wire loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1f50020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1d90598"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1d90598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1f67d88"/></to>
    </wire>
    <wire loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b63c1f53860"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d97538"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1f67d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c26d2060"/></to>
    </wire>
    <wire loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f60800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f65268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f65268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c26d14c0"/></to>
    </wire>
    <wire loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f5f3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f65e20"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f65e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c26d00e0"/></to>
    </wire>
    <wire loc="59:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c1f626d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d8d668"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1dca020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c1f6d020"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c1f6d020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x2b63c1dc50b8"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2b63c1becde0"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x2b63c1dc43a8"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x2b63c1be8328"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x2b63c1dc36d8"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2b63c1be2ae0"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x2b63c1dc29b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b63c1bd7690"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1db6c30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1f2b020"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1f2b020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1dff9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2b63c1db3828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1e0e1d0"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1e0e1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1e00538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x2b63c1db2710"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b63c1bdf858"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1e00538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1e4a140"/></to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1dff9b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1e5a020"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b63c1e56c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c1e11d80"/></to>
    </wire>
    <wire loc="105:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c1e11d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c26294b0"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b63c1e55a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1f03700"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2b63c1e96420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2b63c1eff318"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c1e50600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c1e91e60"/></to>
    </wire>
    <wire loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1e4e2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1e53268"/></to>
    </wire>
    <wire loc="107:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1e53268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2628940"/></to>
    </wire>
    <wire loc="70:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b63c1eff930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b63c1ef6830"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b63c1ef6830"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b63c1eee1d8"/></to>
    </wire>
    <wire loc="71:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b63c1efb2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b63c1f43358"/></to>
    </wire>
    <wire loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b63c1efa908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b63c1f43358"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1e54af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c2628200"/></to>
    </wire>
    <wire loc="108:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1e53e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2627578"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2627e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1e526d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c26265d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b63c262b3f8"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c26245f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2b63c1eecb50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b63c11ef020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2b63c1eebe08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b63c11ee4d0"/></to>
    </wire>
    <wire loc="106:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1f66af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c26d2d58"/></to>
    </wire>
    <wire loc="109:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c26d0980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1f646d8"/></to>
    </wire>
    <wire loc="111:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b63c26ce130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c26d4020"/></to>
    </wire>
    <wire loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b63c26cc2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b63c2702780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b63c1f626d8"/></to>
    </wire>
    <wire loc="81:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c2701268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1f60268"/></to>
    </wire>
    <wire loc="83:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2701800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f60800"/></to>
    </wire>
    <wire loc="84:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c27003f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f5f3f0"/></to>
    </wire>
    <wire loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b63c2700b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b63c26ff470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c2642ba0"/></to>
    </wire>
    <wire loc="38:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b63c16ab050"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2640578"/></to>
    </wire>
    <wire loc="63:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c2745978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c2737378"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c1fec908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c2743578"/></to>
    </wire>
    <wire loc="64:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c2743578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c13711f0"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c1feb578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c2742268"/></to>
    </wire>
    <wire loc="65:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c2742268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></to>
    </wire>
    <wire loc="67:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b63c1fe9bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b63c27418c8"/></to>
    </wire>
    <wire loc="66:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b63c27418c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c1390cb0"/></to>
    </wire>
    <wire loc="60:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b63c2736020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b63c1fb34f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c2736bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></to>
    </wire>
    <wire loc="53:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b63c1fb34f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b63c2000920"/></to>
    </wire>
    <wire loc="54:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b63c1fff6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b63c1364020"/></to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c1ffe3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c1ffda10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c13711f0"/></to>
    </wire>
    <wire loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b63c1ffc780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b63c1ffb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b63c1fe0408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b63c13711f0"/></to>
    </wire>
    <wire loc="56:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b63c202b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></to>
    </wire>
    <wire loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c2025cd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b63c2023518"/></to>
    </wire>
    <wire loc="52:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b63c2023518"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x2b63c201fe08"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x2b63c1bedc58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rahul/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b63c1877c50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b63c103e720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b63c103e720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b63c103d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rahul/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer" loc="44(OscilloscopeAppC.Timer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer2" loc="44(OscilloscopeAppC.Timer2):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer3" loc="44(OscilloscopeAppC.Timer3):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1" loc="18(OscilloscopeAppC.Sensor1):/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1.AdcX" loc="21(OscilloscopeAppC.Sensor1.AdcX):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor2" loc="18(OscilloscopeAppC.Sensor2):/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3" loc="40(OscilloscopeAppC.Sensor3):/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor3.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor3.AdcReadClientC):/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b63c121b750" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b63c121ba98" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b63c121bde0" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b63c121f020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b63c121f388" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b63c121f6f0" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b63c121fa20" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b63c12bc020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b63c12bc388" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b63c12bc6f0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b63c12bca20" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b63c172db08" loc="89:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b63c1742748" loc="42:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b63c17755c0" loc="52:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b63c18081d0" loc="23:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b63c18081d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b63c1877c50" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b63c1877c50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b63c1874020" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b63c1869410" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b63c1869410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b63c1869700" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c185ec60" loc="46:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c185ec60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c198bcd0" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c198bcd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b63c1988020" loc="46:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c19d39f8" loc="46:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c19d39f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b63c1ad6e50" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c1ad6e50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b63c1b0b1e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b63c1ad7740" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b63c1ad7740"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b63c1af7020" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c1af7020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b63c1b15550" loc="55:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b63c1b15550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b63c1b15cb8" loc="56:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b63c1b15cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b63c1b130a8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b63c1b130a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b63c1b13820" loc="58:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b63c1b13820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b63c1b13bc8" loc="59:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b63c1b12380" loc="60:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b63c1b12380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b63c1c43020" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b63c1c43388" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b63c1c436f0" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b63c1c43a20" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TempC" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MicC" loc="40:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b63c1df55a0" loc="89:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b63c1defd20" loc="42:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b63c1f8fe18" loc="47:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b63c1f88950" loc="47:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b63c1f7e380" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b63c1fb0738" loc="45:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b63c1fe7d08" loc="43:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2b63c107e020" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b63c107e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b63c107e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b63c10a9958" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c10a9958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c10a9ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c10a9e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1086020"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c10861a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1086330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b63c10876f0" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b63c10876f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1087a40"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1087bc8"/>
        <function-ref name="start" scoped="" ref="0x2b63c1087d50"/>
        <function-ref name="stop" scoped="" ref="0x2b63c108b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer3" ref="0x2b63c10bd020" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer3" scoped="" ref="0x2b63c10bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c10c72b8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c10ca978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c10c96c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c10c9278"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c10c7b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c10c7708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c10cadc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c10bdb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c10c9c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c10ca088"/>
        <function-ref name="stop" scoped="" ref="0x2b63c10ca528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b63c10c5020" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c10c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c10c5b68"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c10c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read2" ref="0x2b63c10c4780" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read2" scoped="" ref="0x2b63c10c4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c10cf370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c10cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b63c1085020" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c1085020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c1085370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read3" ref="0x2b63c10ce020" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read3" scoped="" ref="0x2b63c10ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c10ceb68"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c10cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c10e0c38" loc="32:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c10e0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c10cc020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c10cc1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c10cc330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c10cc4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c10cc640"/>
        <function-ref name="get" scoped="" ref="0x2b63c10cc7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c10cc950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c10cb020"/>
        <function-ref name="set" scoped="" ref="0x2b63c10ccad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c10ccc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c10ccde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x2b63c10df020" loc="33:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c10df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b63c10df370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b63c10b6d20" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b63c10b6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c10be088"/>
        <function-ref name="fired" scoped="" ref="0x2b63c10c1688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c10c0470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c10c0020"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c10be928"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c10be4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c10c1ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c10c28b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c10c0a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c10c2d58"/>
        <function-ref name="stop" scoped="" ref="0x2b63c10c1238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c10b8c00" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c10b8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c10b7e78"/>
        <function-ref name="fired" scoped="" ref="0x2b63c10b55a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c10b72d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c10b5e48"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c10b6748"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c10b62f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c10b59f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c10aa7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c10b78a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c10aac88"/>
        <function-ref name="stop" scoped="" ref="0x2b63c10b5158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b63c111ed18" loc="58:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c111ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c111d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b63c11218b8" loc="57:/home/rahul/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b63c11218b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b63c1121c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b63c11299a0" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b63c11299a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1129cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c111dc10" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c111dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c111a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b63c1124b98" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c1124b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b63c1129020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b63c11291a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b63c1129330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b63c11294b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b63c1129640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b63c1131370" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b63c1131370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c11316c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1128be8" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1128be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1131020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b63c1131a38" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b63c1131a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1131d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b63c112c7d0" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b63c112c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c112cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b63c112c140" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c112c490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b63c1136198" loc="19:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b63c1136198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c11364e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b63c1137020" loc="18:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b63c1137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1137370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11374f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1137680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1137808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1137990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1137b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1137ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1137e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b63c112bce0" loc="17:/home/rahul/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c112bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c11380a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b63c113c358" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113c358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c113c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x2b63c11884c0" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x2b63c11884c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1188810"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1188998"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1188b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1188ca8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1188e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1199020"/>
        <function-ref name="set" scoped="" ref="0x2b63c11991a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1199330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x2b63c1190108" loc="60:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x2b63c1190108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1190458"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11905e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1190768"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11908f0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1190a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1190c00"/>
        <function-ref name="set" scoped="" ref="0x2b63c1190d88"/>
        <function-ref name="clr" scoped="" ref="0x2b63c118c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x2b63c118a698" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x2b63c118a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c118a9e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c118ab70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c118acf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x2b63c118c338" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x2b63c118c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c118c688"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c118c810"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c118c998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c118cb20"/>
        <function-ref name="get" scoped="" ref="0x2b63c118cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c118ce30"/>
        <function-ref name="set" scoped="" ref="0x2b63c1188020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b63c1182ac0" loc="54:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c1182ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1182e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x2b63c1199650" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x2b63c1199650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11999a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1199b28"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1199cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1199e38"/>
        <function-ref name="get" scoped="" ref="0x2b63c1198020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11981a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1198330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b63c118dba0" loc="55:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b63c118dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1180020"/>
        <function-ref name="read" scoped="" ref="0x2b63c11801a8"/>
        <function-ref name="write" scoped="" ref="0x2b63c1180330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b63c11804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b63c11bbd60" loc="53:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c11bbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b63c11af0d8"/>
        <function-ref name="initSlave" scoped="" ref="0x2b63c11af260"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b63c11af3e8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b63c11af570"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b63c11af6f8"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c11af880"/>
        <function-ref name="readByte" scoped="" ref="0x2b63c11afa08"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c11afb90"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c11afd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x2b63c11ae100" loc="56:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x2b63c11ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ae450"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11ae760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11ae8e8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11aea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11aebf8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11aed80"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b63c113a870" loc="52:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c113a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c113abc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x2b63c11ba350" loc="57:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x2b63c11ba350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ba6a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ba828"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11ba9b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11bab38"/>
        <function-ref name="get" scoped="" ref="0x2b63c11bacc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11bae48"/>
        <function-ref name="set" scoped="" ref="0x2b63c11b9020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x2b63c11b94d8" loc="58:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x2b63c11b94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11b9828"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11b99b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11b9b38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11b9cc0"/>
        <function-ref name="get" scoped="" ref="0x2b63c11b9e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11b8020"/>
        <function-ref name="set" scoped="" ref="0x2b63c11b81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11b8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x2b63c11b8648" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x2b63c11b8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11b8998"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11b8b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11b8ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11b8e30"/>
        <function-ref name="get" scoped="" ref="0x2b63c11b7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11b71a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11b7330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11b74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b63c1210968" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b63c1210968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120f0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120f278"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120f588"/>
        <function-ref name="get" scoped="" ref="0x2b63c120f710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c120f898"/>
        <function-ref name="set" scoped="" ref="0x2b63c120fa20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c120fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b63c11ee4d0" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b63c11ee4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ee820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ee9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11eeb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11eecb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11eee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11ed020"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b63c120a4d0" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b63c120a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120acb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c120ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1209020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1209330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b63c12011a0" loc="94:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b63c12011a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12014f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1201678"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1201800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1201988"/>
        <function-ref name="get" scoped="" ref="0x2b63c1201b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1201c98"/>
        <function-ref name="set" scoped="" ref="0x2b63c1201e20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1214020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b63c11db1a0" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b63c11db1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11db4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11db678"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11db800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11db988"/>
        <function-ref name="get" scoped="" ref="0x2b63c11dbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11dbc98"/>
        <function-ref name="set" scoped="" ref="0x2b63c11dbe20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b63c1204e00" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b63c1204e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12031a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1203330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1203640"/>
        <function-ref name="get" scoped="" ref="0x2b63c12037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1203950"/>
        <function-ref name="set" scoped="" ref="0x2b63c1203ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1203c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b63c11d94d0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b63c11d94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11d9820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11d99a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11d9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11d9cb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11d9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11ec020"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b63c11f6658" loc="66:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b63c11f6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f6e40"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f51a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f5330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b63c11ff968" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b63c11ff968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ffcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ffe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11fe1a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11fe330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11fe4b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11fe640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11fe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b63c1207968" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b63c1207968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1207cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1207e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1206020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12061a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1206330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12064b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1206640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b63c11e2968" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b63c11e2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e11a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e14b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e1640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b63c11ea968" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b63c11ea968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11eacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11eae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e91a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e94b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e9640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b63c11f3af0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b63c11f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f3e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f2330"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f2640"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b63c11fbe00" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b63c11fbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11fa1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11fa330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11fa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11fa640"/>
        <function-ref name="get" scoped="" ref="0x2b63c11fa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11fa950"/>
        <function-ref name="set" scoped="" ref="0x2b63c11faad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11fac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b63c1212658" loc="97:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b63c1212658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12129a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1212b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1212cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1212e40"/>
        <function-ref name="get" scoped="" ref="0x2b63c1211020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12111a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1211330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b63c120c348" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b63c120c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120c698"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120c820"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120cb30"/>
        <function-ref name="get" scoped="" ref="0x2b63c120ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c120ce40"/>
        <function-ref name="set" scoped="" ref="0x2b63c120b020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c120b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b63c11f81a0" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b63c11f81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f8678"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f8988"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f8c98"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f8e20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b63c11dfe00" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b63c11dfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11de1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11de330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11de4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11de640"/>
        <function-ref name="get" scoped="" ref="0x2b63c11de7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11de950"/>
        <function-ref name="set" scoped="" ref="0x2b63c11dead8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11dec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b63c11e6020" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b63c11e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e6808"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e6b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b63c120e020" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b63c120e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120e808"/>
        <function-ref name="get" scoped="" ref="0x2b63c120e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c120eb18"/>
        <function-ref name="set" scoped="" ref="0x2b63c120eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c120ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b63c11e4348" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b63c11e4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e4698"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e4820"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e49a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e4b30"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e4cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e4e40"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e3020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b63c11ed658" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b63c11ed658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ed9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11edb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11edcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11ede40"/>
        <function-ref name="get" scoped="" ref="0x2b63c1200020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12001a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1200330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b63c1209658" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b63c1209658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12099a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1209b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1209cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1209e40"/>
        <function-ref name="get" scoped="" ref="0x2b63c1208020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12081a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1208330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12084b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b63c1214348" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b63c1214348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1214698"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1214820"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12149a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1214b30"/>
        <function-ref name="get" scoped="" ref="0x2b63c1214cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1214e40"/>
        <function-ref name="set" scoped="" ref="0x2b63c1213020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b63c11da348" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b63c11da348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11da698"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11da820"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11da9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11dab30"/>
        <function-ref name="get" scoped="" ref="0x2b63c11dacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11dae40"/>
        <function-ref name="set" scoped="" ref="0x2b63c11d9020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b63c11ec658" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b63c11ec658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ec9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ecb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11eccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11ece40"/>
        <function-ref name="get" scoped="" ref="0x2b63c11eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11eb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11eb330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b63c11f57e0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b63c11f57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f4020"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f4330"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b63c11feaf0" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b63c11feaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11fee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11fc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11fc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11fc330"/>
        <function-ref name="get" scoped="" ref="0x2b63c11fc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11fc640"/>
        <function-ref name="set" scoped="" ref="0x2b63c11fc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11fc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b63c1206af0" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b63c1206af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1206e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1205020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1205330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1205640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12057c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1205950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b63c11e1af0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b63c11e1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e0330"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e0640"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b63c11e9af0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b63c11e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e84b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e87c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e8950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b63c11f2c78" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b63c11f2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f14b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f17c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f1950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b63c12117e0" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b63c12117e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1211b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1211cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1211e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1210020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1210330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12104b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1210640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b63c11ef020" loc="73:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b63c11ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ef570"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ef6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11ef880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11efa08"/>
        <function-ref name="get" scoped="" ref="0x2b63c11efb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11efd18"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ee020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b63c11f7348" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b63c11f7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f7698"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f7820"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f7b30"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f7e40"/>
        <function-ref name="set" scoped="" ref="0x2b63c120a020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c120a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b63c1202020" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b63c1202020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1202370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12024f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1202680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1202808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1202990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1202b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1202ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1202e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b63c120b4d0" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b63c120b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c120be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c121d020"/>
        <function-ref name="set" scoped="" ref="0x2b63c121d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c121d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b63c11dd020" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b63c11dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11dd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11dd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11dd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11dd808"/>
        <function-ref name="get" scoped="" ref="0x2b63c11dd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11ddb18"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ddca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11dde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b63c11e51a0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b63c11e51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e54f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e5678"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e5800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e5988"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e5c98"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e5e20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b63c1205c78" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b63c1205c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1204020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12041a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1204330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12044b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1204640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12047c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1204950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1204ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b63c11e34d0" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b63c11e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e3820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e39a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e3b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e3cb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f6020"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b63c12007e0" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b63c12007e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1200b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1200cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1200e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11ff020"/>
        <function-ref name="get" scoped="" ref="0x2b63c11ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11ff330"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b63c12087e0" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b63c12087e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1208b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1208cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1208e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1207020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1207330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12074b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1207640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b63c12134d0" loc="96:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b63c12134d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1213820"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12139a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1213b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1213cb8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1213e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1212020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12121a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1212330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b63c11b1780" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b63c11b1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11b1ad0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11b1c58"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11b1de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e2020"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e2330"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b63c11eb7e0" loc="57:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b63c11eb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11ebb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11ebcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11ebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11ea020"/>
        <function-ref name="get" scoped="" ref="0x2b63c11ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11ea330"/>
        <function-ref name="set" scoped="" ref="0x2b63c11ea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b63c11f4968" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b63c11f4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f4e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b63c11fcc78" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b63c11fcc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11fb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11fb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11fb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11fb4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11fb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11fb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11fb950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11fbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b63c120d1a0" loc="102:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b63c120d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c120d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c120d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c120d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c120d988"/>
        <function-ref name="get" scoped="" ref="0x2b63c120db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c120dc98"/>
        <function-ref name="set" scoped="" ref="0x2b63c120de20"/>
        <function-ref name="clr" scoped="" ref="0x2b63c120c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b63c11f9020" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b63c11f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f9808"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f9b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b63c11f1e00" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b63c11f1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11f01a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11f0330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11f04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11f0640"/>
        <function-ref name="get" scoped="" ref="0x2b63c11f07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11f0950"/>
        <function-ref name="set" scoped="" ref="0x2b63c11f0ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11f0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b63c11e0c78" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b63c11e0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11df020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11df1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11df330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11df4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c11df640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11df7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c11df950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b63c11e8e00" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b63c11e8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c11e71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c11e7330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c11e74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c11e7640"/>
        <function-ref name="get" scoped="" ref="0x2b63c11e77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c11e7950"/>
        <function-ref name="set" scoped="" ref="0x2b63c11e7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c11e7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c1265430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c1265430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1265780"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1265908"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1265a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1265c18"/>
        <function-ref name="get" scoped="" ref="0x2b63c1265da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1263020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12631a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1263330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c12618c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c12618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1261c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1261da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1260020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12601a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1260330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12604b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1260640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c12511e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c12511e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1251538"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12516c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1251848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12519d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1251b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1251ce0"/>
        <function-ref name="set" scoped="" ref="0x2b63c1251e68"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1266020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c12635b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c12635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1263908"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1263a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1263c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1263da0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1262020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12621a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1262330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c1260a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c1260a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1260da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c125f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c125f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c125f330"/>
        <function-ref name="get" scoped="" ref="0x2b63c125f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c125f640"/>
        <function-ref name="set" scoped="" ref="0x2b63c125f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c125f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c12662a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c12662a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12665f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1266780"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1266908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1266a90"/>
        <function-ref name="get" scoped="" ref="0x2b63c1266c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1266da0"/>
        <function-ref name="set" scoped="" ref="0x2b63c1265020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c1262740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c1262740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1262a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1262c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1262da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1261020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1261330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12614b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1261640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c125fbd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c125fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c125e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c125e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c125e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c125e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c125e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c125e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c125e950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c125ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c207e3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c207e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c207e730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c207e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c207ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c207ebc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c207ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c207d020"/>
        <function-ref name="set" scoped="" ref="0x2b63c207d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c207d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c207b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c207b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c207b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c207b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c207bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c207bc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c207bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c207a020"/>
        <function-ref name="set" scoped="" ref="0x2b63c207a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c207a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2078480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2078480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20787d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2078958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2078ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2078c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2078df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2077020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20771a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2077330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2075480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2075480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20757d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2075958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2075ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2075c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2075df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2074020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20741a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2074330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2072480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2072480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20727d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2072958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2072ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2072c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2072df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2071020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20711a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2071330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c206f480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c206f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c206f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c206f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c206fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c206fc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c206fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c206e020"/>
        <function-ref name="set" scoped="" ref="0x2b63c206e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c206e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c206c480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c206c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c206c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c206c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c206cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c206cc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c206cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c206b020"/>
        <function-ref name="set" scoped="" ref="0x2b63c206b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c206b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2069480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2069480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20697d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2069958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2069ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2069c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2069df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2068020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2068330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c126ce18" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c126ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c126b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c126b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c126b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c126b640"/>
        <function-ref name="get" scoped="" ref="0x2b63c126b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c126b950"/>
        <function-ref name="set" scoped="" ref="0x2b63c126bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c126bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c12682a8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c12682a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12685f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1268780"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1268908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1268a90"/>
        <function-ref name="get" scoped="" ref="0x2b63c1268c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1268da0"/>
        <function-ref name="set" scoped="" ref="0x2b63c1267020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c126ebd0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c126ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c126d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c126d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c126d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c126d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c126d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c126d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c126d950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c126dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c126a020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c126a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c126a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c126a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c126a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c126a808"/>
        <function-ref name="get" scoped="" ref="0x2b63c126a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c126ab18"/>
        <function-ref name="set" scoped="" ref="0x2b63c126aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c126ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c1267430" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c1267430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1267780"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1267908"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1267a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1267c18"/>
        <function-ref name="get" scoped="" ref="0x2b63c1267da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c127c020"/>
        <function-ref name="set" scoped="" ref="0x2b63c127c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c127c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c126dd60" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c126dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c126c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c126c260"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c126c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c126c570"/>
        <function-ref name="get" scoped="" ref="0x2b63c126c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c126c880"/>
        <function-ref name="set" scoped="" ref="0x2b63c126ca08"/>
        <function-ref name="clr" scoped="" ref="0x2b63c126cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c1269120" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c1269120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1269470"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12695f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1269780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1269908"/>
        <function-ref name="get" scoped="" ref="0x2b63c1269a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1269c18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1269da0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1268020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c127c5b8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c127c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c127c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c127ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c127cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c127cda0"/>
        <function-ref name="get" scoped="" ref="0x2b63c127b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c127b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c127b330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c127b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20b23e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20b23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20b2730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20b28b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20b2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20b2bc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c20b2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20b1020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20b11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20af480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20af480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20af7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20af958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20afae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20afc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20afdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20ae020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20ac480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20ac7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20ac958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20acae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20acc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20acdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20ab020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20ab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20f8480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20f87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20f8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20f8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20f8c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20f8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20f7020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20f71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20f5480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20f5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20f57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20f5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20f5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20f5c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20f5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20f4020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20f41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20f2480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20f27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20f2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20f2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20f2c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20f2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20f1020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20f11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20f1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20ef480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20ef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20ef7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20ef958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20efae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20efc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20efdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20ee020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20ee1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20ee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c20ec480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c20ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c20ec7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c20ec958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c20ecae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c20ecc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c20ecdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c20eb020"/>
        <function-ref name="set" scoped="" ref="0x2b63c20eb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c20eb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c1273740" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c1273740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1273a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1273c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1273da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1272020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1272330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12724b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1272640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c1286bd8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c1286bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1285020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12851a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1285330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12854b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1285640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12857c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1285950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1285ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c1275500" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c1275500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1275850"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12759d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1275b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1275ce8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1275e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1274020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12741a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1274330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c12728c8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c12728c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1272c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1272da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1287020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12871a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1287330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12874b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1287640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12877c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c1285d60" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c1285d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12840d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1284260"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12843e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1284570"/>
        <function-ref name="get" scoped="" ref="0x2b63c12846f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1284880"/>
        <function-ref name="set" scoped="" ref="0x2b63c1284a08"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1284b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c12745b8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c12745b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1274908"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1274a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1274c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1274da0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1273020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12731a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1273330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c1287a50" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c1287a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1287da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1286020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12861a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1286330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12864b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1286640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12867c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1286950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c1284e18" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c1284e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12831a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1283330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1283640"/>
        <function-ref name="get" scoped="" ref="0x2b63c12837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1283950"/>
        <function-ref name="set" scoped="" ref="0x2b63c1283ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1283c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c213b3e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c213b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c213b730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c213b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c213ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c213bbc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c213bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2139020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21391a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2139330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2137480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2137480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21377d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2137958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2137ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2137c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2137df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2136020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2136330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2134480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2134480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21347d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2134958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2134ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2134c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2134df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2133020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2133330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2131480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2131480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21317d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2131958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2131ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2131c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2131df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2130020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2130330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c212e480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c212e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c212e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c212e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c212eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c212ec68"/>
        <function-ref name="get" scoped="" ref="0x2b63c212edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c212d020"/>
        <function-ref name="set" scoped="" ref="0x2b63c212d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c212d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c212b480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c212b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c212b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c212b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c212bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c212bc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c212bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c212a020"/>
        <function-ref name="set" scoped="" ref="0x2b63c212a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c212a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2128480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2128480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21287d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2128958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2128ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2128c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2128df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2127020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21271a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2127330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2125480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2125480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21257d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2125958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2125ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2125c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2125df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2124020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2124330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c1290120" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c1290120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1290470"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12905f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1290780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1290908"/>
        <function-ref name="get" scoped="" ref="0x2b63c1290a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1290c18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1290da0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c128f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c128d5b8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c128d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c128d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c128da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c128dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c128dda0"/>
        <function-ref name="get" scoped="" ref="0x2b63c128b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c128b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c128b330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c128b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c127de40" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c127de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12921c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1292348"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12924d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1292658"/>
        <function-ref name="get" scoped="" ref="0x2b63c12927e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1292968"/>
        <function-ref name="set" scoped="" ref="0x2b63c1292af0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1292c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c128f2a8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c128f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c128f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c128f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c128f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c128fa90"/>
        <function-ref name="get" scoped="" ref="0x2b63c128fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c128fda0"/>
        <function-ref name="set" scoped="" ref="0x2b63c128e020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c128e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c128b740" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c128b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c128ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c128bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c128bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c128a020"/>
        <function-ref name="get" scoped="" ref="0x2b63c128a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c128a330"/>
        <function-ref name="set" scoped="" ref="0x2b63c128a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c128a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c1291020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c1291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1291370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12914f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1291680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1291808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1291990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1291b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1291ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1291e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c128e430" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c128e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c128e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c128e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c128ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c128ec18"/>
        <function-ref name="get" scoped="" ref="0x2b63c128eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c128d020"/>
        <function-ref name="set" scoped="" ref="0x2b63c128d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c128d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c128a8c8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c128a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c128ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c128ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1289020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12891a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1289330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12894b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1289640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21753e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c2175730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21758b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2175a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2175bc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c2175d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2173020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2173330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2171480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2171480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21717d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2171958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2171ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2171c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2171df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21c2020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21c21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21c2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21c0480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21c07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21c0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21c0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21c0c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21c0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21bf020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21bf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21bd480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21bd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21bd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21bd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21bdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21bdc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21bddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21bc020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21bc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21bc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21ba480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21ba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21ba7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21ba958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21baae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21bac68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21badf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21b9020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21b91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21b7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21b77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21b7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21b7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21b7c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21b7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21b6020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21b61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21b4480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21b47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21b4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21b4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21b4c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21b4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21b3020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21b1480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21b17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21b1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21b1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21b1c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21b1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21b0020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c1298bd8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c1298bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1296020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1296330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12964b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1296640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12967c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1296950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1296ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c1293020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c1293020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1293370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12934f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1293680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1293808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1293990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1293b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1293ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1293e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c129a930" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c129a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c129ac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c129ae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1299020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12991a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1299330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12994b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1299640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c1296d60" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c1296d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12950d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1295260"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12953e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1295570"/>
        <function-ref name="get" scoped="" ref="0x2b63c12956f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1295880"/>
        <function-ref name="set" scoped="" ref="0x2b63c1295a08"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1295b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c12a8120" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c12a8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12a8470"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12a85f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12a8780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12a8908"/>
        <function-ref name="get" scoped="" ref="0x2b63c12a8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12a8c18"/>
        <function-ref name="set" scoped="" ref="0x2b63c12a8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c1299a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c1299a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1299da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1298020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1298330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1298640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12987c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1298950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c1295e18" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c1295e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12941a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1294330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1294640"/>
        <function-ref name="get" scoped="" ref="0x2b63c12947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1294950"/>
        <function-ref name="set" scoped="" ref="0x2b63c1294ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1294c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c12a72a8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c12a72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12a75f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12a7780"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12a7908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12a7a90"/>
        <function-ref name="get" scoped="" ref="0x2b63c12a7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12a7da0"/>
        <function-ref name="set" scoped="" ref="0x2b63c12a6020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c22073e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c22073e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c2207730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c22078b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2207a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2207bc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c2207d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2206020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2206330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2204480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2204480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22047d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2204958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2204ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2204c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2204df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2202020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22021a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2202330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2200480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2200480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22007d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2200958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2200ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2200c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2200df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21ff020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21ff1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21ff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21fd480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21fd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21fd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21fd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21fdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21fdc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21fddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21fc020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21fc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21fa480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21fa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21fa958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21faae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21fac68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21fadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21f9020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21f91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21f7480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21f7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21f77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21f7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21f7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21f7c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21f7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21f6020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21f61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21f4480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21f47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21f4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21f4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21f4c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21f4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21f3020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21f31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c21f1480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c21f1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c21f17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c21f1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c21f1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c21f1c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c21f1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c21f0020"/>
        <function-ref name="set" scoped="" ref="0x2b63c21f01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c21f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b63c129e430" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b63c129e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c129e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c129e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c129ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c129ec18"/>
        <function-ref name="get" scoped="" ref="0x2b63c129eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12b3020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b63c12b18c8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b63c12b18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12b1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12b1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12b01a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c12b0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12b04b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c12b0640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b63c12a01e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b63c12a01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12a0538"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12a06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12a0848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12a09d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c12a0b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12a0ce0"/>
        <function-ref name="set" scoped="" ref="0x2b63c12a0e68"/>
        <function-ref name="clr" scoped="" ref="0x2b63c129f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b63c12b35b8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b63c12b35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12b3908"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12b3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12b3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12b3da0"/>
        <function-ref name="get" scoped="" ref="0x2b63c12b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12b21a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c12b2330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b63c12b0a50" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b63c12b0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12b0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12af020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12af1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12af330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12af4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12af640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12af7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12af950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b63c129f2a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b63c129f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c129f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c129f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c129f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c129fa90"/>
        <function-ref name="get" scoped="" ref="0x2b63c129fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c129fda0"/>
        <function-ref name="set" scoped="" ref="0x2b63c129e020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c129e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b63c12b2740" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b63c12b2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12b2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12b2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12b2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12b1020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12b1330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b63c12afbd8" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b63c12afbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12ae020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12ae1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12ae330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12ae4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c12ae640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12ae7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c12ae950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12aead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c22483e0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c22483e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c2248730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c22488b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2248a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2248bc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c2248d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2247020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22471a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2247330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2245480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2245480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22457d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2245958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2245ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2245c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2245df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2243020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22431a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2243330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2296480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2296480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2296958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2296ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2296c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2296df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2295020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2295330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2293480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2293480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2293958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2293ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2293c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2293df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2292020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2292330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2290480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2290480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22907d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2290958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2290ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2290c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2290df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c228f020"/>
        <function-ref name="set" scoped="" ref="0x2b63c228f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c228f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c228d480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c228d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c228d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c228d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c228dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c228dc68"/>
        <function-ref name="get" scoped="" ref="0x2b63c228ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c228c020"/>
        <function-ref name="set" scoped="" ref="0x2b63c228c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c228c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c228a480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c228a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c228a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c228a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c228aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c228ac68"/>
        <function-ref name="get" scoped="" ref="0x2b63c228adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2289020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22891a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2289330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c2287480" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c2287480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c22877d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c2287958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c2287ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c2287c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c2287df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c2286020"/>
        <function-ref name="set" scoped="" ref="0x2b63c22861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c2286330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12bdac0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12bdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12bde10"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12d3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12d31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12d3330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12d34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12d3640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12d37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12d3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12d0db8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12d0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12cf170"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12cf2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12cf480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12cf608"/>
        <function-ref name="get" scoped="" ref="0x2b63c12cf790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12cf918"/>
        <function-ref name="set" scoped="" ref="0x2b63c12cfaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12cfc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12ca3e0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12ca3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12ca730"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12ca8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12caa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12cabc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c12cad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12e0020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12dd7e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12dd7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12ddb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12ddcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12dde48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12db020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12db330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12db4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12d8c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12d8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12d7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12d71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12d7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12d74b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c12d7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12d77c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c12d7950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12d7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12ea020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12ea370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12ea4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12ea680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12ea808"/>
        <function-ref name="get" scoped="" ref="0x2b63c12ea990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12eab18"/>
        <function-ref name="set" scoped="" ref="0x2b63c12eaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12eae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12e6480" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12e67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12e6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12e6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12e6c68"/>
        <function-ref name="get" scoped="" ref="0x2b63c12e6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12e5020"/>
        <function-ref name="set" scoped="" ref="0x2b63c12e51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12e17e8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12e17e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12e1b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12e1cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12e1e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12f8020"/>
        <function-ref name="get" scoped="" ref="0x2b63c12f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12f8330"/>
        <function-ref name="set" scoped="" ref="0x2b63c12f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12f4970" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12f4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12f4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12f4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c12f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c12f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12f0ab0" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12f0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12f0e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12ef020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12ef1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12ef330"/>
        <function-ref name="get" scoped="" ref="0x2b63c12ef4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12ef640"/>
        <function-ref name="set" scoped="" ref="0x2b63c12ef7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12ef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c1303c38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c1303c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1302020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c13021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1302330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c13024b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1302640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c13027c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1302950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1302ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12fd020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12fd808"/>
        <function-ref name="get" scoped="" ref="0x2b63c12fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b63c12fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c12fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b63c12f9180" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b63c12f9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c12f94d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c12f9658"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c12f97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c12f9968"/>
        <function-ref name="get" scoped="" ref="0x2b63c12f9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c12f9c78"/>
        <function-ref name="set" scoped="" ref="0x2b63c12f9e00"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1310020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c13466e8" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c13466e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b63c0f896f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b63c0f896f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1346a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b63c1346d18" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c1346d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b63c13440a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b63c1344228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b63c13443b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b63c1344538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b63c13446c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b63c1370d70" loc="60:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b63c1370d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c136f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b63c1357640" loc="57:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b63c1357640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b63c1357990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b63c13706a8" loc="59:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b63c13706a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c13709f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b63c1357c78" loc="58:/home/rahul/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b63c1357c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1370020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b63c13701a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b63c1370330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b63c0f91728" loc="48:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b63c0f91728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c0f91a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c0f91c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b63c0f86be8" loc="47:/home/rahul/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b63c0f86be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c0f88020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b63c0f881a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b63c0f88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b63c10432b0" loc="56:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b63c10432b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1043600"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1043788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b63c104c758" loc="57:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b63c104c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b63c104caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b63c1045448" loc="55:/home/rahul/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b63c1045448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1045798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b63c1045920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b63c1045aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b63c10632b0" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b63c10632b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b63c1063600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b63c1068660" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b63c1068660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b63c10689b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b63c1065a80" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b63c1065a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b63c1065dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c1365080" loc="59:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1365080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c13653d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1365558"/>
        <function-ref name="start" scoped="" ref="0x2b63c13656e0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1365868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c1364020" loc="61:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c1364020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c1364370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13644f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1364680"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1364808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1364990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b63c137dd10" loc="63:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b63c137dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c137c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c13711f0" loc="65:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c13711f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1371540"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c13716c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1371850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13719d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c1371b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b63c13a0860" loc="69:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c13a0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c139fcc0"/>
        <function-ref name="clear" scoped="" ref="0x2b63c139d420"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c139f5e0"/>
        <function-ref name="set" scoped="" ref="0x2b63c139db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b63c139b080" loc="70:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c139b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b63c139b3d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b63c139b558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b63c139b6e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b63c139b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c137d1c8" loc="62:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c137d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c137d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b63c1390cb0" loc="67:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c1390cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c13960a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c1396228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c13963b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c1395b58" loc="66:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c1395b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c137a020"/>
        <function-ref name="source" scoped="" ref="0x2b63c137a1a8"/>
        <function-ref name="address" scoped="" ref="0x2b63c137a330"/>
        <function-ref name="destination" scoped="" ref="0x2b63c137a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c137a640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c137a7c8"/>
        <function-ref name="type" scoped="" ref="0x2b63c137a950"/>
        <function-ref name="setType" scoped="" ref="0x2b63c137aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c137ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c137ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c1372020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b63c13a1968" loc="68:/home/rahul/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c13a1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c1394e10"/>
        <function-ref name="clear" scoped="" ref="0x2b63c13a3558"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c1394730"/>
        <function-ref name="set" scoped="" ref="0x2b63c13a3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c139a638" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c139a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c139a988"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c139ab10"/>
        <function-ref name="start" scoped="" ref="0x2b63c139ac98"/>
        <function-ref name="stop" scoped="" ref="0x2b63c139ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b63c13ba670" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c13ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c13b9ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b63c13b81f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c13b93f0"/>
        <function-ref name="set" scoped="" ref="0x2b63c13b88d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c13ac5f0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c13ac5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c13ac940"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13acac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13acc50"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c13acdd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c13ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b63c13aa348" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b63c13aa348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c13aa698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c13a8020" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c13a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c13a8370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c13a84f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13a8680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13a8808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c13a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b63c13a6738" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c13a6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c13a5c58"/>
        <function-ref name="clear" scoped="" ref="0x2b63c13bd380"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c13a5578"/>
        <function-ref name="set" scoped="" ref="0x2b63c13bda60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b63c13c7338" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c13c7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c13c7688"/>
        <function-ref name="isSet" scoped="" ref="0x2b63c13c7810"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c13c7998"/>
        <function-ref name="set" scoped="" ref="0x2b63c13c7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c13ab7a0" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c13ab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c13abaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b63c13c7e18" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c13c7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b63c13b51a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b63c13b5330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b63c13b54b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b63c13b5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b63c13a8cb8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c13a8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c13a70a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c13a7228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c13a73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c13aa938" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c13aa938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c13aac88"/>
        <function-ref name="source" scoped="" ref="0x2b63c13aae10"/>
        <function-ref name="address" scoped="" ref="0x2b63c13a9020"/>
        <function-ref name="destination" scoped="" ref="0x2b63c13a91a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c13a9330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c13a94b8"/>
        <function-ref name="type" scoped="" ref="0x2b63c13a9640"/>
        <function-ref name="setType" scoped="" ref="0x2b63c13a97c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c13a9950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c13a9ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c13a9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b63c13bece0" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c13bece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b63c13a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b63c13d0c58" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b63c13d0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c13c0020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13c01a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13c0330"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c13c04b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c13c0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b63c13c0978" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b63c13c0978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c13c0cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c13c6ba0" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c13c6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c13c5020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13c51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13c5330"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c13c54b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c13c5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b63c13c3968" loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b63c13c3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c13c3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b63c13bf020" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c13bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c13bf370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c13bf4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c13bf680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c13bf808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c13bf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c13c5dc0" loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c13c5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c13c3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c13c2020" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c13c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c13c2370"/>
        <function-ref name="source" scoped="" ref="0x2b63c13c24f8"/>
        <function-ref name="address" scoped="" ref="0x2b63c13c2680"/>
        <function-ref name="destination" scoped="" ref="0x2b63c13c2808"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c13c2990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c13c2b18"/>
        <function-ref name="type" scoped="" ref="0x2b63c13c2ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b63c13c2e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c13c1020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c13c11a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c13c1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c13c9d10" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c13c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c141b0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c141b228"/>
        <function-ref name="start" scoped="" ref="0x2b63c141b3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c141b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c141aa10" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c141aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c141ad60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c1419020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c14191a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1419330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c14194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b63c141b7b0" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b63c141b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c141bb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c141bc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c141be10"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c141a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c141a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b63c14141a0" loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c14141a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b63c14144f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b63c1414678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b63c1414800"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b63c1414988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b63c1416c30" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b63c1416c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b63c1418020"/>
        <function-ref name="enableCca" scoped="" ref="0x2b63c14181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b63c1411060" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c1411060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c142b4b8"/>
        <function-ref name="clear" scoped="" ref="0x2b63c142bb98"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c1411db0"/>
        <function-ref name="set" scoped="" ref="0x2b63c142a2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c141a438" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c141a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c141a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b63c1426ac8" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c1426ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1426e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b63c1424020"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c14241a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1424330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b63c14171d0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c14171d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c1417520"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c14176a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c1417830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b63c14129a8" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b63c14129a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b63c1412cf8"/>
        <function-ref name="initial" scoped="" ref="0x2b63c1412e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b63c1428020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c1428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c1427478"/>
        <function-ref name="clear" scoped="" ref="0x2b63c1427b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c1428d70"/>
        <function-ref name="set" scoped="" ref="0x2b63c1426278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b63c1417b30" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c1417b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b63c1417e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c143dd20" loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c143dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c143c0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c143c228"/>
        <function-ref name="start" scoped="" ref="0x2b63c143c3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c143c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b63c146e348" loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b63c146e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1007588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b63c10078e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b63c146d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x2b63c147cde8" loc="119:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x2b63c147cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c147b170"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c147b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x2b63c14a0778" loc="186:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x2b63c14a0778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c14a0ac8"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c14a0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x2b63c14678e0" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x2b63c14678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c146a490"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c146a918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b63c1473df0" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b63c1473df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b63c1459170"/>
        <function-ref name="rand32" scoped="" ref="0x2b63c14592f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b63c143b7f0" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b63c143b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b63c143bb40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b63c143bcc8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b63c143be50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b63c1456020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x2b63c143c7f0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x2b63c143c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x2b63c143cb40"/>
        <function-ref name="enableCca" scoped="" ref="0x2b63c143ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c143d708" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c143d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c143da58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x2b63c1469168" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x2b63c1469168"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1469ce8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c14831f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b63c145a080" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c145a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c145a3d0"/>
        <function-ref name="settled" scoped="" ref="0x2b63c145a558"/>
        <function-ref name="adjust" scoped="" ref="0x2b63c145a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x2b63c14abc60" loc="304:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x2b63c14abc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c14aa020"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c14aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x2b63c1459770" loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x2b63c1459770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1470a18"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1472158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1472e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c14729f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c146f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1470e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c14725a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1474370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1470448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1474810"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1474cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x2b63c14563e0" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x2b63c14563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1456730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x2b63c14a5298" loc="327:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x2b63c14a5298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c14a55e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c14a5770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b63c145b770" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b63c145b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b63c145bac0"/>
        <function-ref name="biasOn" scoped="" ref="0x2b63c145bc48"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b63c145bdd0"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b63c1465020"/>
        <function-ref name="selectLock" scoped="" ref="0x2b63c14651a8"/>
        <function-ref name="init" scoped="" ref="0x2b63c1465330"/>
        <function-ref name="getLock" scoped="" ref="0x2b63c14654b8"/>
        <function-ref name="coreOn" scoped="" ref="0x2b63c1465640"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c14657c8"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b63c1465950"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c1465ad8"/>
        <function-ref name="off" scoped="" ref="0x2b63c1465c60"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b63c1465de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x2b63c1452540" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x2b63c1452540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c1452890"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1452a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x2b63c14839c8" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x2b63c14839c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1482598"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1482a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x2b63c143b020" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x2b63c143b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x2b63c143b370"/>
        <function-ref name="initial" scoped="" ref="0x2b63c143b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x2b63c14499d8" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b63c14499d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b63c1449d28"/>
        <function-ref name="listen" scoped="" ref="0x2b63c1455020"/>
        <function-ref name="syncing" scoped="" ref="0x2b63c14551a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b63c1455330"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b63c14554b8"/>
        <function-ref name="idleByte" scoped="" ref="0x2b63c1455640"/>
        <function-ref name="cts" scoped="" ref="0x2b63c14557c8"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b63c1455950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1455ad8"/>
        <function-ref name="off" scoped="" ref="0x2b63c1455c60"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b63c1455de8"/>
        <function-ref name="rx" scoped="" ref="0x2b63c1454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c14f4d20" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c14f4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c14f20a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c14f2228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c14f23b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c14f2538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c14f26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x2b63c15056f8" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c15056f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b63c1505b48"/>
        <function-ref name="initSlave" scoped="" ref="0x2b63c1505cd0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b63c1505e58"/>
        <function-ref name="writeByte" scoped="" ref="0x2b63c1504020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b63c15041a8"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c1504330"/>
        <function-ref name="readByte" scoped="" ref="0x2b63c15044b8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c1504640"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c15047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b63c14f5a20" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b63c14f5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c14f5d70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c14f4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c14f41a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c14f4330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c14f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b63c14ef510" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b63c14ef510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c14eea88"/>
        <function-ref name="clear" scoped="" ref="0x2b63c150d190"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c14ee3a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c150d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c14f6b58" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c14f6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c14f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b63c1507020" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b63c1507020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1507370"/>
        <function-ref name="isSet" scoped="" ref="0x2b63c15074f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1507680"/>
        <function-ref name="set" scoped="" ref="0x2b63c1507808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c14f4748" loc="71:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c14f4748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c14f4a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x2b63c1504a98" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c1504a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1504de8"/>
        <function-ref name="settled" scoped="" ref="0x2b63c1503020"/>
        <function-ref name="adjust" scoped="" ref="0x2b63c15031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x2b63c1503618" loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x2b63c1503618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c15021d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1502658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b63c14fe900" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b63c14fe900"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c15004c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x2b63c157e3f0" loc="417:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x2b63c157e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c157e740"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c157e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b63c14f01a0" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b63c14f01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c14f04f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c14f0678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c14f0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x2b63c1507b78" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b63c1507b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b63c1506020"/>
        <function-ref name="biasOn" scoped="" ref="0x2b63c15061a8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b63c1506330"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b63c15064b8"/>
        <function-ref name="selectLock" scoped="" ref="0x2b63c1506640"/>
        <function-ref name="init" scoped="" ref="0x2b63c15067c8"/>
        <function-ref name="getLock" scoped="" ref="0x2b63c1506950"/>
        <function-ref name="coreOn" scoped="" ref="0x2b63c1506ad8"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c1506c60"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b63c1506de8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c1505020"/>
        <function-ref name="off" scoped="" ref="0x2b63c15051a8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b63c1505330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b63c1500b18" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b63c1500b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c14ff728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x2b63c15b2020" loc="594:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x2b63c15b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c15b2370"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c15b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b63c150b478" loc="78:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b63c150b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b63c150a900"/>
        <function-ref name="clear" scoped="" ref="0x2b63c1509020"/>
        <function-ref name="isValid" scoped="" ref="0x2b63c150a220"/>
        <function-ref name="set" scoped="" ref="0x2b63c1509700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b63c14f52d0" loc="69:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b63c14f52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c14f5620"/>
        <function-ref name="stop" scoped="" ref="0x2b63c14f57a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b63c14f0b00" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b63c14f0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b63c14f0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x2b63c14f2968" loc="73:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x2b63c14f2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x2b63c14f2cb8"/>
        <function-ref name="listen" scoped="" ref="0x2b63c14f2e40"/>
        <function-ref name="syncing" scoped="" ref="0x2b63c14f1020"/>
        <function-ref name="rxDone" scoped="" ref="0x2b63c14f11a8"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x2b63c14f1330"/>
        <function-ref name="idleByte" scoped="" ref="0x2b63c14f14b8"/>
        <function-ref name="cts" scoped="" ref="0x2b63c14f1640"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x2b63c14f17c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c14f1950"/>
        <function-ref name="off" scoped="" ref="0x2b63c14f1ad8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x2b63c14f1c60"/>
        <function-ref name="rx" scoped="" ref="0x2b63c14f1de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x2b63c16074b8" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x2b63c16074b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1602088"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1602510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c1603620" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1603620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1603970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1603af8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1603c80"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1603e08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x2b63c15e76d8" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x2b63c15e76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c160a3a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c160a830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c15eac10" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c15eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x2b63c16132f0" loc="55:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x2b63c16132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1613640"/>
        <function-ref name="settled" scoped="" ref="0x2b63c16137c8"/>
        <function-ref name="adjust" scoped="" ref="0x2b63c1613950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b63c1623e48" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b63c1623e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1007588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b63c10078e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b63c1622be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x2b63c1623118" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x2b63c1623118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1623468"/>
        <function-ref name="read" scoped="" ref="0x2b63c16235f0"/>
        <function-ref name="write" scoped="" ref="0x2b63c1623778"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b63c1623900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x2b63c1625620" loc="54:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x2b63c1625620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x2b63c1625970"/>
        <function-ref name="biasOn" scoped="" ref="0x2b63c1625af8"/>
        <function-ref name="getRFPower" scoped="" ref="0x2b63c1625c80"/>
        <function-ref name="tuneManual" scoped="" ref="0x2b63c1625e08"/>
        <function-ref name="selectLock" scoped="" ref="0x2b63c1624020"/>
        <function-ref name="init" scoped="" ref="0x2b63c16241a8"/>
        <function-ref name="getLock" scoped="" ref="0x2b63c1624330"/>
        <function-ref name="coreOn" scoped="" ref="0x2b63c16244b8"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c1624640"/>
        <function-ref name="getLOStatus" scoped="" ref="0x2b63c16247c8"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c1624950"/>
        <function-ref name="off" scoped="" ref="0x2b63c1624ad8"/>
        <function-ref name="setRFPower" scoped="" ref="0x2b63c1624c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x2b63c1699908" loc="50:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x2b63c1699908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x2b63c1699c58"/>
        <function-ref name="initSlave" scoped="" ref="0x2b63c1699de0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b63c1698020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b63c16981a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b63c1698330"/>
        <function-ref name="txMode" scoped="" ref="0x2b63c16984b8"/>
        <function-ref name="readByte" scoped="" ref="0x2b63c1698640"/>
        <function-ref name="rxMode" scoped="" ref="0x2b63c16987c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c1698950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x2b63c169c4e0" loc="48:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x2b63c169c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c169b088"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c169b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x2b63c169bb80" loc="49:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b63c169bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1699020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c16991a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1699330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c16994b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1699640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x2b63c1698bf8" loc="51:/home/rahul/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x2b63c1698bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1697020"/>
        <function-ref name="read" scoped="" ref="0x2b63c16971a8"/>
        <function-ref name="write" scoped="" ref="0x2b63c1697330"/>
        <function-ref name="getLOCK" scoped="" ref="0x2b63c16974b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1811578" loc="28:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1811578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c18118c8"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1811a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b63c1813680" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b63c1813680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1812230"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c18126b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c1812c70" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1812c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1811020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c18111a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1811330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1694980" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1694980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1694cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1694e58"/>
        <function-ref name="request" scoped="" ref="0x2b63c1813020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c18131a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1813330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1690a08" loc="18:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1690a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c16b0578"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c16b09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b63c16af620" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b63c16af620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c16ae1d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c16ae658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c16ac208" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c16ac208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c16ac558"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c16ac6e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c16ac868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c16ab050" loc="23:/home/rahul/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c16ab050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c16ab3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c16ab528"/>
        <function-ref name="request" scoped="" ref="0x2b63c16ab6b0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c16ab838"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c16ab9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c16a5890" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c16a5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c16a5be0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c16a5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b63c16c19b0" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b63c16c19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b63c16c1d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b63c16a1cb8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c16a1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b63c16a60a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c16a6228"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16a63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c16aaaf8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c16aaaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c16aae48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c16a7020"/>
        <function-ref name="request" scoped="" ref="0x2b63c16a71a8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c16a7330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c16a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c16a0d48" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c16a0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c16be0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b63c16bdde0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b63c16bdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b63c16bc170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16bc2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b63c16bd488" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c16bd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b63c16bd7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c16bd960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16bdae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b63c16d2940" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c16d2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b63c16d2c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b63c16d2e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b63c16ba020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c16ba1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b63c16ba330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b63c16ba4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b63c16ba640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b63c16ba7c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c16ba950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b63c16baad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b63c16bac60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b63c16bade8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b63c16b9020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b63c16b92a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b63c16b9430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b63c16b95b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b63c16b9740"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c16b98c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16b9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b63c16bbc10" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c16bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c16bd020"/>
        <function-ref name="stop" scoped="" ref="0x2b63c16bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b63c16b9d30" loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b63c16b9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b63c16d10d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b63c16d1260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b63c16d13e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b63c16d1570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b63c16d16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b63c16ef020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c16ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b63c16ef370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b63c16ef4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b63c16ef680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c16ef808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b63c16ef990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b63c16efb18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b63c16efca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b63c16efe28"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c16ee020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b63c16ee1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b63c16ee330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b63c16ee4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b63c16ee640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b63c16ee8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b63c16eea50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b63c16eebd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b63c16eed60"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c16ed020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c16ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b63c17121e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b63c17121e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b63c1712538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b63c17126c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b63c1712848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c17129d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b63c1712b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b63c1712ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b63c1712e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b63c1711020"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c17111a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b63c1711330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b63c17114b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b63c1711640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b63c17117c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b63c1711a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b63c1711bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b63c1711d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b63c1710020"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c17101a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c1710330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b63c1710640" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b63c1710640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b63c1710990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c17aa698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c17aa698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c17aaa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c17aab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c17a73c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c17a73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c17a7738"/>
        <function-ref name="configure" scoped="" ref="0x2b63c17a78c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c17aadd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17aadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c17a9170"/>
        <function-ref name="requested" scoped="" ref="0x2b63c17a92f8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c17a9480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c17a9608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c17a9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c17ab840" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c17ab840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c17abbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c17abd38"/>
        <function-ref name="request" scoped="" ref="0x2b63c17aa020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c17aa1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c17aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c17a99d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c17a99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c17a9d28"/>
        <function-ref name="userId" scoped="" ref="0x2b63c17a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c236c520" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c236c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c236c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c236caf8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c236caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c236ce48"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c236b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c236b1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c236b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c23699a8" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c23699a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c2369d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c2368020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c23666f8" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c23666f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c2366a68"/>
        <function-ref name="configure" scoped="" ref="0x2b63c2366bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c2366e78" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c2366e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c23651f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c2365380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c2365508"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c2365690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c2368268" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2368268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c23685b8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c2368740"/>
        <function-ref name="granted" scoped="" ref="0x2b63c23688c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c2368a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c2368bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c23658d8" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c23658d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c2365c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c2365db0"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c2364020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c23641a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c2364330"/>
        <function-ref name="get" scoped="" ref="0x2b63c23644b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c2364640"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c2364c60"/>
        <function-ref name="set" scoped="" ref="0x2b63c2364950"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c23647c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c2364ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c236abb8" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c236abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c2369020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c23691a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c2369330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c23694b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c2369640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c2368e20" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2368e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c23661a8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c2366330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c2363020" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c2363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c2363370"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c23634f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c17a4780" loc="72:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c17a4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c17a4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c17a4d18" loc="73:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c17a4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c17b90a0"/>
        <function-ref name="requested" scoped="" ref="0x2b63c17b9228"/>
        <function-ref name="granted" scoped="" ref="0x2b63c17b93b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c17b9538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c17b96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b63c17a4060" loc="70:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c17a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c17a43b0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c17a4538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c17b9908" loc="74:/home/rahul/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c17b9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c17b9c58"/>
        <function-ref name="userId" scoped="" ref="0x2b63c17b9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c238e740" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c238e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c238ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c238ecd8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c238ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c238d0a0"/>
        <function-ref name="requested" scoped="" ref="0x2b63c238d228"/>
        <function-ref name="granted" scoped="" ref="0x2b63c238d3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c238d538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c238d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b63c238e020" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c238e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c238e370"/>
        <function-ref name="stop" scoped="" ref="0x2b63c238e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c238d908" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c238d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c238dc58"/>
        <function-ref name="userId" scoped="" ref="0x2b63c238dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c17da6a0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c17da6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c17d9370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c17d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b63c17d8428" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b63c17d8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c17d6020"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c17d64a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c17d59a0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c17d59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c17d5cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c17d5e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c17d4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b63c17d6b18" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b63c17d6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b63c17d6e68"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c17d5020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b63c17d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b63c17ef4d8" loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b63c17ef4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c17ef828"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c17ef9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1809680" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1809680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c181d370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c181d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b63c181c060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b63c181c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c181cbc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c181b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c181b720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c181b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c181ba90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c181bc18"/>
        <function-ref name="request" scoped="" ref="0x2b63c181bda0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1819020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c18191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b63c1836208" loc="46:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b63c1836208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b63c1836558"/>
        <function-ref name="rand32" scoped="" ref="0x2b63c18366e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b63c18371a0" loc="45:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b63c18371a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1837ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1838310" loc="44:/home/rahul/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1838310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1838660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b63c182f080" loc="48:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b63c182f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b63c182f3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b63c182f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b63c1830020" loc="47:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b63c1830020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1830b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c18316a0" loc="46:/home/rahul/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c18316a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c18319f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c184ea60" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c184ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c19f1d60"/>
        <function-ref name="fired" scoped="" ref="0x2b63c19f2470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c19f11c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c19f2d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c19f0648"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c19f01f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c19f28c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c19f4620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c19f1790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c19f4ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c19f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b63c1845510" loc="49:/home/rahul/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b63c1845510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1842768"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1844e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1843b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1843728"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1840088"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1842bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c18432d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1844088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1842198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1844528"/>
        <function-ref name="stop" scoped="" ref="0x2b63c18449c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b63c183db68" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b63c183db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1865d98"/>
        <function-ref name="fired" scoped="" ref="0x2b63c183a4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c18651f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c183ad78"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1864688"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1864238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c183a928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c183c6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c18657c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c183cb90"/>
        <function-ref name="stop" scoped="" ref="0x2b63c183a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b63c1864c48" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b63c1864c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1862820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1840e40" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1840e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c183d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b63c1879e40" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b63c1879e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1852be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1851548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c18510c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c18519d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1860d90" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1860d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c185d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b63c1855748" loc="28:/home/rahul/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b63c1855748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1853020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1854020"/>
        <function-ref name="startAt" scoped="" ref="0x2b63c1854930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c18544a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b63c18534a8"/>
        <function-ref name="start" scoped="" ref="0x2b63c185b578"/>
        <function-ref name="stop" scoped="" ref="0x2b63c185ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b63c195f998" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b63c195f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c195c020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c195d0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b63c195d9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c195d548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b63c195c4a8"/>
        <function-ref name="start" scoped="" ref="0x2b63c195e730"/>
        <function-ref name="stop" scoped="" ref="0x2b63c195ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c195f1f0" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c195f1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b63c0f89388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b63c0f89388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c195f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c195ca90" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c195ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c195a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1959190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c195acb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1959618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b63c23c3020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c23c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b63c23c3370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c23c34f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c23c3680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c23c3808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c23c3990"/>
        <function-ref name="setControl" scoped="" ref="0x2b63c23c3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b63c23d0da8" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b63c23d0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c23cc470"/>
        <function-ref name="fired" scoped="" ref="0x2b63c23cd510"/>
        <function-ref name="startAt" scoped="" ref="0x2b63c23cde20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c23cd998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b63c23cc8f8"/>
        <function-ref name="start" scoped="" ref="0x2b63c23ceb38"/>
        <function-ref name="stop" scoped="" ref="0x2b63c23cd088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c23d0600" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c23d0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c23d0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c23cb020" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c23cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c23cbd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c23c96b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c23c9230"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c23c9b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b63c23be0a0" loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b63c23be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b63c23be3f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b63c23be578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b63c23be700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b63c23be888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b63c23bea10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b63c23beb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b63c23c2020" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b63c23c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c23bf7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c23c1560"/>
        <function-ref name="get" scoped="" ref="0x2b63c23c2ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c23c19e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c23bfc30"/>
        <function-ref name="set" scoped="" ref="0x2b63c23c1088"/>
        <function-ref name="start" scoped="" ref="0x2b63c23c1e70"/>
        <function-ref name="stop" scoped="" ref="0x2b63c23bf320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c23c8168" loc="30:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c23c8168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c23c4270"/>
        <function-ref name="test" scoped="" ref="0x2b63c23c6930"/>
        <function-ref name="get" scoped="" ref="0x2b63c23c8ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c23c46f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c23c4bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c23c7b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c23c76d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c23c6db8"/>
        <function-ref name="set" scoped="" ref="0x2b63c23c71f8"/>
        <function-ref name="start" scoped="" ref="0x2b63c23c6020"/>
        <function-ref name="stop" scoped="" ref="0x2b63c23c64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b63c18de020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b63c18de370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c18de4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c18de680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c18de808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c18de990"/>
        <function-ref name="setControl" scoped="" ref="0x2b63c18deb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b63c18d9228" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b63c18d9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b63c18d9578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b63c18d9700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b63c18d9888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b63c18d9a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b63c18d9b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b63c18d9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b63c18dc020" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b63c18dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c18da7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c18db560"/>
        <function-ref name="get" scoped="" ref="0x2b63c18dcba0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c18db9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c18dac30"/>
        <function-ref name="set" scoped="" ref="0x2b63c18db088"/>
        <function-ref name="start" scoped="" ref="0x2b63c18dbe70"/>
        <function-ref name="stop" scoped="" ref="0x2b63c18da320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c18e6de8" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c18e6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c18df0f8"/>
        <function-ref name="test" scoped="" ref="0x2b63c18e0798"/>
        <function-ref name="get" scoped="" ref="0x2b63c18e3a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c18df580"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c18dfa58"/>
        <function-ref name="reset" scoped="" ref="0x2b63c18e2980"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c18e24f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c18e0c20"/>
        <function-ref name="set" scoped="" ref="0x2b63c18e2020"/>
        <function-ref name="start" scoped="" ref="0x2b63c18e2e08"/>
        <function-ref name="stop" scoped="" ref="0x2b63c18e0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b63c18ff160" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c18ff160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b63c18ff4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c18ff638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c18ff7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c18ff948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c18ffad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b63c18ffc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b63c18fa268" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b63c18fa268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b63c18fa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b63c18fa968" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b63c18fa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b63c18facb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b63c18fae40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b63c18f9020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b63c18f91a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b63c18f9330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b63c18f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b63c18fe190" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b63c18fe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c18fc930"/>
        <function-ref name="fired" scoped="" ref="0x2b63c18fd6d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c18fed10"/>
        <function-ref name="reset" scoped="" ref="0x2b63c18fdb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c18fcdb8"/>
        <function-ref name="set" scoped="" ref="0x2b63c18fd1f8"/>
        <function-ref name="start" scoped="" ref="0x2b63c18fc020"/>
        <function-ref name="stop" scoped="" ref="0x2b63c18fc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c19040f8" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c19040f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c1901270"/>
        <function-ref name="test" scoped="" ref="0x2b63c1902930"/>
        <function-ref name="get" scoped="" ref="0x2b63c1904c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c19016f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c1901bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1903a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1903608"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1902db8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1903130"/>
        <function-ref name="start" scoped="" ref="0x2b63c1902020"/>
        <function-ref name="stop" scoped="" ref="0x2b63c19024a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b63c198ecf0" loc="74:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b63c198ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c198c0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c198c228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b63c1991c70" loc="49:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b63c1991c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c198e410"/>
        <function-ref name="fired" scoped="" ref="0x2b63c198f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b63c198fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c198f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b63c198e898"/>
        <function-ref name="start" scoped="" ref="0x2b63c19909f0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c198f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1996ab0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1996ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1993d60"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1994470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c19931c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1994d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1991648"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c19911f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c19948c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1995620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1993790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1995ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1994020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b63c19d5930" loc="71:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b63c19d5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c19d5c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c19d5e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b63c19da858" loc="49:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b63c19da858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c19d7bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c19d81c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c19d7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c19d8a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c19d54d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c19d5088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c19d8610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c19d93d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c19d75f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c19d9878"/>
        <function-ref name="stop" scoped="" ref="0x2b63c19d9d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c19e05e0" loc="48:/home/rahul/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c19e05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c19dc988"/>
        <function-ref name="fired" scoped="" ref="0x2b63c19de020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c19ded70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c19de900"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c19da2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c19dcdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c19de490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c19df198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c19dc398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c19df658"/>
        <function-ref name="stop" scoped="" ref="0x2b63c19dfb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b63c19d1128" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b63c19d1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c19d1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b63c19fb330" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c19fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c19fa0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c19fa9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c19fa548"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c19fae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b63c19e77e8" loc="54:/home/rahul/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b63c19e77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b63c19e7b38"/>
        <function-ref name="changed" scoped="" ref="0x2b63c19e7cc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b63c19e7e48"/>
        <function-ref name="setAddress" scoped="" ref="0x2b63c19eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b63c1a0d568" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b63c1a0d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1007588"/>
            <typename><typedef-ref name="TMicro" ref="0x2b63c10078e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b63c1a0b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c1a32638" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c1a32638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1a313f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1a31d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1a31878"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1a301f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c1a2d3a0" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c1a2d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b63c103e720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1a2b130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1a2ba40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1a2b5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1a2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b63c1a21140" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c1a21140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c1a21490"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b63c1a21618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c1a217a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b63c1a21928"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c1a21ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c1a21c38"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b63c1a21dc0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b63c1a20020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b63c1a201a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b63c1a20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b63c1a45b68" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b63c1a45b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b63c1a43db8"/>
        <function-ref name="test" scoped="" ref="0x2b63c1a434a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a4c728"/>
        <function-ref name="captured" scoped="" ref="0x2b63c1a440c0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a44598"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a43930"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a4cbb0"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a44a20"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b63c1a429c0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b63c1a429c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c1a3e270"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1a3f020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a41598"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a3f4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a3e6f8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a41a20"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a3f930"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a3fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1a27098" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1a27098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c1a23270"/>
        <function-ref name="test" scoped="" ref="0x2b63c1a24930"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a27c18"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c1a236f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c1a23bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a26a58"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1a265d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a24db8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a260f8"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a24020"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a244a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b63c1a67020" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b63c1a67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c1a67370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b63c1a674f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c1a67680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b63c1a67808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c1a67990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c1a67b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b63c1a67ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b63c1a67e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b63c1a66020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b63c1a661a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b63c1a56a48" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b63c1a56a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b63c1a56d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b63c1a54020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b63c1a541a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b63c1a54330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b63c1a544b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b63c1a54640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b63c1a62e60" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b63c1a62e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c1a5f798"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1a604f8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a61a18"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a60980"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a5fc20"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a60020"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a60e08"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a5f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b63c1a66680" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b63c1a66680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b63c1a62798"/>
        <function-ref name="test" scoped="" ref="0x2b63c1a64e58"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a65230"/>
        <function-ref name="captured" scoped="" ref="0x2b63c1a65b90"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a640c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a62310"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a656b8"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a64548"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a649d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b63c1a5d2b8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b63c1a5d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c1a5ba40"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1a5c7e8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a5de38"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a5cc70"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a59020"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a5c310"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a5b130"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a5b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b63c1a59698" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b63c1a59698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b63c1a56020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1a58d08"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a583a8"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a571f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a564a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a58830"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a57680"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a57b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1a38020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c1a350f8"/>
        <function-ref name="test" scoped="" ref="0x2b63c1a367a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1a38ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c1a35580"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c1a35a58"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1a379e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1a37560"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1a36c30"/>
        <function-ref name="set" scoped="" ref="0x2b63c1a37088"/>
        <function-ref name="start" scoped="" ref="0x2b63c1a37e70"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1a36320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1b0c020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1b0c020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b63c0f89388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b63c0f89388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1b0c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1b0c740" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1b0c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c1afd930"/>
        <function-ref name="test" scoped="" ref="0x2b63c1afd020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b003a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c1afddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c1afc2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1afe1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b00d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1afd4a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b00830"/>
        <function-ref name="start" scoped="" ref="0x2b63c1afe680"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1afeb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c1af95a8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c1af95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b63c103e720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1b203a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1b20cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1b20830"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b1e190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1b1e6f0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1b1e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b63c1b1a930"/>
        <function-ref name="test" scoped="" ref="0x2b63c1b1a020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b1d3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b63c1b1adb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b63c1b192f0"/>
        <function-ref name="reset" scoped="" ref="0x2b63c1b1c1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b1dd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b63c1b1a4a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b1d830"/>
        <function-ref name="start" scoped="" ref="0x2b63c1b1c680"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1b1cb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b63c1b32e20" loc="63:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b63c1b32e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="TOne" ref="0x2b63c103e720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1b31be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1b2f548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1b2f0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b2f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b63c1b16c50" loc="62:/home/rahul/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c1b16c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1b339f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1b32330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1b33e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b327b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b63c1a33c38" loc="48:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b63c1a33c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1b2d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b63c1b2de48" loc="49:/home/rahul/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b63c1b2de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008d70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b63c1007178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b63c1b2cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b63c1b2a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b63c1b2a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b63c1b2a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1b60e10" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1b60e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1b5b0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1b5e798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1b5d4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1b5d088"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1b5b960"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1b5b510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1b5ebe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1b5f9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1b5daa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1b5fe80"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1b5e348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b63c1b7d568" loc="46:/home/rahul/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c1b7d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1b7d8b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1b7da40"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1b7dbc8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1b7dd50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1b7a020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b7a1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1b7a330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1b7a950"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b7a4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1b7a640"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1b7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b63c1b75540" loc="50:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b63c1b75540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b75890"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b75a18"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b75ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b75d28"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b74020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b741a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b74330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1b79840" loc="46:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1b79840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1b79b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b63c1b747d0" loc="51:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b63c1b747d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b74b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b74ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b74e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b73020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b73330"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b63c1b79e08" loc="47:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c1b79e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1b761a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1b76330"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1b764b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1b76640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1b767c8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b76950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1b76ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1b751a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b76c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1b76de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1b75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b63c1b73958" loc="52:/home/rahul/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b63c1b73958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b73ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b73e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b72020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b721a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b72330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b724b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b72640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b63c1b77d60" loc="44:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b63c1b77d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b920d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b92260"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b923e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b92570"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b926f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b92880"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b92a08"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b63c1b90020" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b63c1b90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b90370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b904f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b90680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b90808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b90990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b90b18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b90ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b90e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b63c1b8e2d8" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1b8e2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1b8e628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b63c1b8f1b0" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b63c1b8f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1b8f500"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1b8f688"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1b8f810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1b8f998"/>
        <function-ref name="get" scoped="" ref="0x2b63c1b8fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1b8fca8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1b8fe30"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1b8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1b896e0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1b896e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1b86a18"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1b87158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1b87e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1b879f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1b842e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1b86e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1b875a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1b88370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1b86448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1b88810"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1b88cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1b83be8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1b83be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1bb9e18"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1b81548"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1bb9278"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1b81de8"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1bb8728"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1bb82d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1b81998"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1b82768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1bb9848"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1b82c08"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1b810f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1bb6020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1bb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1bb22b8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bb5978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1bb36c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1bb3278"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1bb2b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1bb2708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1bb5dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1bb6b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1bb3c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1bb5088"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1bb5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1bb0dc0" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1bb0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1baf930"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1bafd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x2b63c1ba7020" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x2b63c1ba7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ba7b68"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ba6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x2b63c1ba16a8" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x2b63c1ba16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ba0370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ba07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x2b63c1ba6c98" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x2b63c1ba6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ba5820"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ba5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x2b63c1ba49d0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x2b63c1ba49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ba2560"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ba29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2b63c1bd4398" loc="21:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2b63c1bd4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1bd46e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd4870"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1bd49f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2b63c1bd59a8" loc="20:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2b63c1bd59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1bd5cf8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd5e80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1bd4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1b9fbc8" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1b9fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1bd5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1bd51a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1bd5330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1bd54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1bd5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c1bd3550" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1bd3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1bd38a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1bd3a28"/>
        <function-ref name="start" scoped="" ref="0x2b63c1bd3bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1bd3d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2b63c1bd0ad0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2b63c1bd0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1bd0e20"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bcf020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1bcf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x2b63c1bc6c00" loc="25:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x2b63c1bc6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bc8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x2b63c1bc6560" loc="24:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x2b63c1bc6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bc68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2b63c1bd0108" loc="18:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2b63c1bd0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1bd0458"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd05e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1bd0768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b63c1bba190" loc="67:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b63c1bba190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1bba4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1bba668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x2b63c1bca690" loc="23:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x2b63c1bca690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bca9e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bcab68"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bcacf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bcae78"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bc9030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bc91b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bc9340"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bc94c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1bcf5f0" loc="22:/home/rahul/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1bcf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1bcb8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bcd020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1bcdd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1bcd8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1bca1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1bcbd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1bcd470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1bce198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1bcb320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1bce638"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1bcead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2b63c1be0020" loc="36:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b63c1be0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1be0370"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1be04f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1be0680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1be0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b63c1bd8980" loc="45:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b63c1bd8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2b63c1becde0" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2b63c1becde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1beb170"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1beb2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1beb480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1beb608"/>
        <function-ref name="get" scoped="" ref="0x2b63c1beb790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1beb918"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bebaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bebc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2b63c1be8328" loc="26:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2b63c1be8328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be8678"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be8800"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be8988"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be8b10"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be8c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be8e20"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be7020"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b63c1bd7d00" loc="48:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b63c1bd7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c110a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b63c1c11a30" loc="50:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b63c1c11a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b63c1be57d0" loc="30:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b63c1be57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be5b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be5ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be4020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be4330"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2b63c1bd9808" loc="42:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2b63c1bd9808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bd9b58"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bd9ce0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bd9e68"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bd8020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bd81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bd8330"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bd84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bd8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2b63c1beead0" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2b63c1beead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1beee20"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bed020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bed1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bed330"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bed4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bed640"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bed7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bed950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2b63c1bea020" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2b63c1bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bea370"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bea4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bea680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bea808"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bea990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1beab18"/>
        <function-ref name="set" scoped="" ref="0x2b63c1beaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1beae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2b63c1bdf858" loc="38:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b63c1bdf858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1bdfba8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bdfd30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1bdb020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1bdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b63c1bd7020" loc="46:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b63c1bd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2b63c1bda680" loc="41:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2b63c1bda680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bda9d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bdab58"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bdace0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bdae68"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bd9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bd91a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bd9330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bd94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2b63c1be74b0" loc="27:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2b63c1be74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be7800"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be7988"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be7b10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be7c98"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be7e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be6020"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2b63c1bdc2b0" loc="35:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b63c1bdc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1bdc700"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bdc888"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1bdca10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1bdcb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b63c1c10340" loc="51:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b63c1c10340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c10690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b63c1be4958" loc="31:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b63c1be4958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be4ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be4e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be21a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be24b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be2640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2b63c1bedc58" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2b63c1bedc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bec020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bec1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bec330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bec4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bec640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bec7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bec950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1becad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2b63c1be9180" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2b63c1be9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be94d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be9658"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be9968"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be9c78"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be9e00"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b63c1bd7690" loc="47:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b63c1bd7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1bd79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b63c1c113c0" loc="49:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b63c1c113c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c11710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b63c1be6648" loc="29:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b63c1be6648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be6998"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be6b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be6ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be6e30"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be51a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be5330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2b63c1be0ba8" loc="37:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b63c1be0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1bdf020"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bdf1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1bdf330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1bdf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2b63c1bdb4f8" loc="40:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2b63c1bdb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bdb848"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bdb9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bdbb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bdbce0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bdbe68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bda020"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bda1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bda330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b63c1c109b0" loc="52:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b63c1c109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c10d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2b63c1bf1970" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2b63c1bf1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1bf1cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1bf1e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1bee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1bee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1bee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1bee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1bee640"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1bee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b63c1be2ae0" loc="32:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b63c1be2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1be2e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1be1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1be11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1be1330"/>
        <function-ref name="get" scoped="" ref="0x2b63c1be14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1be1640"/>
        <function-ref name="set" scoped="" ref="0x2b63c1be17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1be1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b63c1c0fc28" loc="18:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b63c1c0fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b63c1c0b060" loc="21:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b63c1c0b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b63c1c0bd40" loc="23:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b63c1c0bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b63c1c0c340" loc="19:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b63c1c0c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0c690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b63c1c0a3f8" loc="24:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b63c1c0a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0a748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b63c1c0c9b0" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b63c1c0c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b63c1c0b6d0" loc="22:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b63c1c0b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b63c1c0aa68" loc="25:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b63c1c0aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1c0adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b63c1c2fb38" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b63c1c2fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c2e020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c2e1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c2e330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c2e4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c2e640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c2e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b63c1bfcc88" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b63c1bfcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1bfb020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bfb1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bfb330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1bfb4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1bfb640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1bfb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b63c1bf5b38" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b63c1bf5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c30020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c301a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c30330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c304b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c30640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b63c1c2eb38" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b63c1c2eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c2d020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c2d1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c2d330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c2d4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c2d640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c2d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b63c1bfbb38" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b63c1bfbb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1bf6020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bf61a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bf6330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1bf64b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1bf6640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1bf67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b63c1c30b38" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b63c1c30b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c2f020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c2f1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c2f330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c2f4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c2f640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b63c1bf7da0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b63c1bf7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1bfc170"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bfc2f8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bfc480"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1bfc608"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1bfc790"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1bfc918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b63c1bf6b38" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b63c1bf6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1bf5020"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1bf51a8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1bf5330"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1bf54b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1bf5640"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1bf57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b63c1c24758" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b63c1c24758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c24aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b63c1c29020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b63c1c29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c29370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b63c1c27758" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b63c1c27758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c27aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b63c1c23020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b63c1c23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c23370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b63c1c29758" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b63c1c29758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c29aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b63c1c24020" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b63c1c24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c24370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b63c1c26850" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b63c1c26850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c26ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b63c1c27020" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b63c1c27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c27370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c44258" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c44258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c445a8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c44730"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c448b8"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c44a40"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c44bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c44d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c6c060" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c6c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c6c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c6acf8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c6acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c680a0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c68228"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c683b0"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c68538"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c686c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c68848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c68b10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c68b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c68e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c657e8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c657e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c65b38"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c65cc0"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c65e48"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c64020"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c641a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c64330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c645f8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c645f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c613e0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c613e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c61730"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c618b8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c61a40"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c61bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c61d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c602e8" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c602e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c60638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c5c180" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c5c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c5c4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c5c658"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c5c7e0"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c5c968"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c5caf0"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c5cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c5b020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c5b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c58020" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c58370"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c584f8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c58680"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c58808"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c58990"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c58b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c58de0" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c58de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c57170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c55cd8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c55cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c530a0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c53228"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c533b0"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c53538"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c536c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c53848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c53b10" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c53b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c53e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b63c1c509d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b63c1c509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c50d28"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c4f020"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c4f1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c4f330"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c4f4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c4f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b63c1c4f908" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b63c1c4f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c4fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b63c1c7fb10" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1c7fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c7fe60"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c71020"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c711a8"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c71330"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c714b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b63c1c7f060" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b63c1c7f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c7f3b0"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c7f538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1c7f6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1c7f848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b63c1c6e2e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1c6e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1c6e638"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c6e7c0"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c6e948"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1c6ead0"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1c6ec58"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1c6ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b63c1c6f728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b63c1c6f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1c6fa78"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1c6fc00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1c6fd88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1c6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b63c1ca9ad0" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1ca9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1ca9e20"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1ca8020"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1ca81a8"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1ca8330"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1ca84b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1ca8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b63c1ca9020" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b63c1ca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1ca9370"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1ca94f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1ca9680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1ca9808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b63c1ca52e8" loc="9:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b63c1ca52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1ca5638"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1ca57c0"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1ca5948"/>
        <function-ref name="edge" scoped="" ref="0x2b63c1ca5ad0"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1ca5c58"/>
        <function-ref name="getValue" scoped="" ref="0x2b63c1ca5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b63c1ca6728" loc="8:/home/rahul/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b63c1ca6728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1ca6a78"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1ca6c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1ca6d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1ca5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1c96dc0" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1c96dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1c91088"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1c93708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1c92470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1c92020"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1c91928"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1c914d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1c93b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1c94930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1c92a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1c94dd0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1c932b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1c8d820" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1c8d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1c8db90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1c8dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1ccb550" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1ccb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1ccb8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1ccba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1c8c020" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1c8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1c8c370"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1c8c4f8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1c8c680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1c8c808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1c8c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1c8ea58" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1c8ea58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1c8edc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1c8d020"/>
        <function-ref name="request" scoped="" ref="0x2b63c1c8d1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1c8d330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1c8d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1c8cbd8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1c8cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1ccb020"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1ccb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c24ae7b8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c24ae7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c24aeb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c24aed90" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c24aed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c24ad170"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c24ad2f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c24ad480"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c24ad608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c24aab48" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c24aab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c24a9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c24a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c24a88c0" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c24a88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c24a8c30"/>
        <function-ref name="configure" scoped="" ref="0x2b63c24a8db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c24a70a0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c24a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c24a73f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c24a7578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c24a7700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c24a7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c24a93f0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c24a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c24a9740"/>
        <function-ref name="requested" scoped="" ref="0x2b63c24a98c8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c24a9a50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c24a9bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c24a9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c24a7ad0" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c24a7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c24a7e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c24a6020"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c24a61a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c24a6330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c24a64b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c24a6640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c24a67c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c24a6de8"/>
        <function-ref name="set" scoped="" ref="0x2b63c24a6ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c24a6950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c24a6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c24ace20" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c24ace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c24aa1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c24aa348"/>
        <function-ref name="request" scoped="" ref="0x2b63c24aa4d0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c24aa658"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c24aa7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c24a8020" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c24a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c24a8370"/>
        <function-ref name="userId" scoped="" ref="0x2b63c24a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c24a5100" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c24a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c24a5450"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c24a55d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c1cc80e0" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1cc80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1cc8430"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1cc85b8"/>
        <function-ref name="start" scoped="" ref="0x2b63c1cc8740"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1cc88c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c1cc8b10" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1cc8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c1cc8e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c1cdb0e0" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1cdb0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1cdb430"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1cdb5b8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1cdb740"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1cdb8c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1cdba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c1cdbc98" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1cdbc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1cda020"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1cda1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c24d2740" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c24d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c24d2a90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c24d2c18"/>
        <function-ref name="start" scoped="" ref="0x2b63c24d2da0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c24d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c24d1268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c24d1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c24d15b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b63c252eb90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b63c252eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c252d020"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c252d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c24d1800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c24d1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c24d1b50"/>
        <function-ref name="requested" scoped="" ref="0x2b63c24d1cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c24d1e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c252e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c252e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b63c252d470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b63c252d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c252d7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c252d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b63c24d2020" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b63c24d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c24d2370"/>
        <function-ref name="stop" scoped="" ref="0x2b63c24d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c252e3f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c252e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c252e740"/>
        <function-ref name="userId" scoped="" ref="0x2b63c252e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1cd3020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1cd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1cd3b88"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1cd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b63c1cd2860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b63c1cd2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1cd1458"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1cd18c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c1ccf020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1ccf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1ccf390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1ccf518"/>
        <function-ref name="request" scoped="" ref="0x2b63c1ccf6a0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1ccf828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1ccf9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1ccd790" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1ccd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ccc370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ccc7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b63c1d09060" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b63c1d09060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d09bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d08088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c1d08720" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d08720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d08a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d08c18"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d08da0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d07020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c244b020" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c244b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c244b370"/>
        <function-ref name="configure" scoped="" ref="0x2b63c244b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c244e128" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c244e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c244ec70"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c244c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c244c6b0" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c244c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c244ca00"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c244cb88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c244cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1cf30a0" loc="19:/home/rahul/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1cf30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1cf3be8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1da8088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1cee788" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1cee788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1ced370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1ced7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x2b63c1d231c8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x2b63c1d231c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d23d10"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d221c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x2b63c1cebc58" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x2b63c1cebc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d28020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d281a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d28330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d284b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d28640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x2b63c1d27020" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2b63c1d27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d27370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d274f8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d27680"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d27808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d27990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x2b63c1d263f0" loc="7:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x2b63c1d263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d25020"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d25470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x2b63c1d1fce8" loc="17:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b63c1d1fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1d1e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b63c1d1f2d8" loc="16:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d1f2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1d1f628"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1d1f7b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1d1f938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1d18510" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d18510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1d18880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d18a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1d16140" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d16140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1d164b0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1d16638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1d18c50" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d17020"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1d171a8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d17330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d174b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d17640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1d207c0" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d207c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d20b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d20cb8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d20e40"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d18020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1d17888" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d17888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1d17bd8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1d17d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c255edc8" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c255edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c255d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c255d3f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c255d3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c255d748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c255d8d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c255da58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c255dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c255a200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c255a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c255a570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c255a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c2559e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2559e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c25581c0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c2558348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c25585d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c25585d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c2558920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c2558aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c2558c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c2558db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c255a940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c255a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c255ac90"/>
        <function-ref name="requested" scoped="" ref="0x2b63c255ae18"/>
        <function-ref name="granted" scoped="" ref="0x2b63c2559020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c25591a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c2559330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c2556060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c2556060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c25563b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c2556538"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c25566c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c2556848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c25569d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c2556b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c2556ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c2555330"/>
        <function-ref name="set" scoped="" ref="0x2b63c2555020"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c2556e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c25551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c255b4b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c255b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c255b820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c255b9a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c255bb30"/>
        <function-ref name="granted" scoped="" ref="0x2b63c255bcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c255be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c2559578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2559578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c25598c8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c2559a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c25555f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c25555f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c2555948"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c2555ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1d13698" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d13698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1d13a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d13b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1d113c8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d113c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1d11738"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1d118c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1d13dd8" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d13dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d12170"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1d122f8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d12480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d12608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d12790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1d14910" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d14910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d14c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d14e08"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d13020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d131a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d13330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1d129d8" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d129d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1d12d28"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c2583020" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c2583020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c2583370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c25835f8" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c25835f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c2583948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c2583ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c2583c58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c2583de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c257f388" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c257f388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c257f6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c257f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c257d020" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c257d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c257d390"/>
        <function-ref name="configure" scoped="" ref="0x2b63c257d518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c257d7a0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c257d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c257daf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c257dc78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c257de00"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c257c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c257fac8" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c257fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c257fe18"/>
        <function-ref name="requested" scoped="" ref="0x2b63c257e020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c257e1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c257e330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c257e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c257c268" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c257c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c257c5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c257c740"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c257c8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c257ca50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c257cbd8"/>
        <function-ref name="get" scoped="" ref="0x2b63c257cd60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c257b020"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c257b640"/>
        <function-ref name="set" scoped="" ref="0x2b63c257b330"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c257b1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c257b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c2581630" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c2581630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c25819a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c2581b28"/>
        <function-ref name="request" scoped="" ref="0x2b63c2581cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c2581e38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c257f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c257e700" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c257e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c257ea50"/>
        <function-ref name="userId" scoped="" ref="0x2b63c257ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c257b908" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c257b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c257bc58"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c257bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1d0d9a8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1d0d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1d0dd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d0c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1d0b6d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d0b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1d0ba48"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1d0bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1d0c268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d0c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d0c5b8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1d0c740"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d0c8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d0ca50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d0cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1d0eb28" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d0eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d0d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d0d1a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d0d330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d0d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d0d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1d0ce20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d0ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1d0b1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1d0b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c25abd10" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c25abd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c25aa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c25aa328" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c25aa328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c25aa678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c25aa800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c25aa988"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c25aab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c25a6200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c25a6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c25a6570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c25a66f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c25a5e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c25a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c25a41c0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c25a4348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c25a45d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c25a45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c25a4920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c25a4aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c25a4c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c25a4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c25a6940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c25a6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c25a6c90"/>
        <function-ref name="requested" scoped="" ref="0x2b63c25a6e18"/>
        <function-ref name="granted" scoped="" ref="0x2b63c25a5020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c25a51a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c25a5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c25a3060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c25a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c25a33b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c25a3538"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c25a36c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c25a3848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c25a39d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c25a3b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c25a3ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c25a2330"/>
        <function-ref name="set" scoped="" ref="0x2b63c25a2020"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c25a3e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c25a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c25a74b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c25a74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c25a7820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c25a79a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c25a7b30"/>
        <function-ref name="granted" scoped="" ref="0x2b63c25a7cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c25a7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c25a5578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c25a5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c25a58c8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c25a5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c25a25f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c25a25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c25a2948"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c25a2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c1d496d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d496d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1d49a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1d49bb0"/>
        <function-ref name="start" scoped="" ref="0x2b63c1d49d38"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c1d48268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1d48268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c1d485b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c1d48800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d48800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d48b50"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1d48cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d48e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d46020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c1d463f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1d46740"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1d468c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c25d2d58" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c25d2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c25d10d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c25d1260"/>
        <function-ref name="start" scoped="" ref="0x2b63c25d13e8"/>
        <function-ref name="stop" scoped="" ref="0x2b63c25d1570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c25d17b8" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c25d17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c25d1b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b63c25cf120" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b63c25cf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c25cf470"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c25cf5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c25d1d50" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c25d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c25d00d8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c25d0260"/>
        <function-ref name="granted" scoped="" ref="0x2b63c25d03e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c25d0570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c25d06f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b63c25cf8c0" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b63c25cf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c25cfc10"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c25cfd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b63c25d2638" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b63c25d2638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c25d2988"/>
        <function-ref name="stop" scoped="" ref="0x2b63c25d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c25d0940" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c25d0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c25d0c90"/>
        <function-ref name="userId" scoped="" ref="0x2b63c25d0e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c1d441c8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d441c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1d44518"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1d446a0"/>
        <function-ref name="start" scoped="" ref="0x2b63c1d44828"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d449b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c1d44bf8" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1d44bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c1d43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c1d43268" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1d43268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d435b8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1d43740"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d438c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d43a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1d43bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c1d43e20" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1d43e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1d421a8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1d42330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c261e020" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c261e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c261e370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c261e4f8"/>
        <function-ref name="start" scoped="" ref="0x2b63c261e680"/>
        <function-ref name="stop" scoped="" ref="0x2b63c261e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c261ea50" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c261ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c261eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b63c261c470" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b63c261c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c261c7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c261c948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c261d020" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c261d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c261d370"/>
        <function-ref name="requested" scoped="" ref="0x2b63c261d4f8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c261d680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c261d808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c261d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b63c261cc10" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b63c261cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c261a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c261a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b63c261f8d8" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b63c261f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c261fc28"/>
        <function-ref name="stop" scoped="" ref="0x2b63c261fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c261dbd8" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c261dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c261c020"/>
        <function-ref name="userId" scoped="" ref="0x2b63c261c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c1d61540" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d61540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1d61890"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1d61a18"/>
        <function-ref name="start" scoped="" ref="0x2b63c1d61ba0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d61d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b63c1d5e7d8" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b63c1d5e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d5eb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d5ecb0"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d5ee38"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d5d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1d601c0" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1d601c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d60d28"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d5e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b63c1d56d98" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b63c1d56d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1d55170"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1d552f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b63c1d584a0" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b63c1d584a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1d587f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1d58978"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1d58b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1d58c88"/>
        <function-ref name="get" scoped="" ref="0x2b63c1d58e10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1d57020"/>
        <function-ref name="set" scoped="" ref="0x2b63c1d571a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1d57330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b63c1d576c0" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d576c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d56370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d567c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1d5d4f8" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1d5d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1d5a768"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1d5ce18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1d5bb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1d5b728"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1d58088"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1d5abb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1d5b2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1d5c088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1d5a198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1d5c528"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d5c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c1d53600" loc="4:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d53600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1d53950"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1d53ad8"/>
        <function-ref name="start" scoped="" ref="0x2b63c1d53c60"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d53de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b63c1d508f0" loc="8:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b63c1d508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d50c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d50dc8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d4f020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d4f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d4f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1d52288" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1d52288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d52df0"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d502d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b63c1d89e00" loc="32:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b63c1d89e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1d881a8"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1d88330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b63c1d8b5d8" loc="10:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b63c1d8b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1d8b928"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1d8bab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1d8bc38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1d8bdc0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1d8a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1d8a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1d8a330"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1d8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b63c1d8a848" loc="11:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d8a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d893d8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d89828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1d4f680" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1d4f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1d4b8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1d4d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1d4dd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1d4d8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1d8b1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1d4bd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1d4d470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1d4e1f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1d4b320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1d4e698"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d4eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1d865e8" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1d865e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1d828f0"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1d83020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1d83d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1d838c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1d811c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1d82d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1d83470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1d84158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1d82320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1d845f8"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d84a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1d7d908" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1d7d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1d7dc58"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1d7dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1d7faa8" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1d7faa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d7e620"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d7ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c1d7d060" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d7d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1d7d3b0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1d7d538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1d7d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1d6ed58" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1d6ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d6d8f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d6dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b63c1d6c5e8" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b63c1d6c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d6b198"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d6b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c1d6bca0" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d6bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1dab0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1dab228"/>
        <function-ref name="request" scoped="" ref="0x2b63c1dab3b0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1dab538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1dab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1f92380" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1f92380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1f91020"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1f91470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b63c1f91a08" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b63c1f91a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b63c1f91d58"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1f90020"/>
        <function-ref name="stopMic" scoped="" ref="0x2b63c1f901a8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b63c1f90330"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b63c1f904b8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1f90640"/>
        <function-ref name="muxSel" scoped="" ref="0x2b63c1f907c8"/>
        <function-ref name="startMic" scoped="" ref="0x2b63c1f90950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1d9a6f8" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1d9a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d99370"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d997c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b63c1d97538" loc="9:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b63c1d97538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1d960c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1d96510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b63c1d8fc10" loc="43:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b63c1d8fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b63c1d8e020"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1d8e1a8"/>
        <function-ref name="stopMic" scoped="" ref="0x2b63c1d8e330"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b63c1d8e4b8"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b63c1d8e640"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1d8e7c8"/>
        <function-ref name="muxSel" scoped="" ref="0x2b63c1d8e950"/>
        <function-ref name="startMic" scoped="" ref="0x2b63c1d8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b63c1d8f300" loc="42:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c1d8f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1d8f650"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1d8f7d8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1d8f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1d90598" loc="41:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1d90598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1d908e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1d90a70"/>
        <function-ref name="request" scoped="" ref="0x2b63c1d90bf8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1d90d80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1d8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b63c1d8d668" loc="47:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1d8d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1d8d9b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1d8db40"/>
        <function-ref name="start" scoped="" ref="0x2b63c1d8dcc8"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1d8de50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x2b63c1dc36d8" loc="54:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x2b63c1dc36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1dc3a28"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1dc3bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1dc3d38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1dc2020"/>
        <function-ref name="get" scoped="" ref="0x2b63c1dc21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1dc2330"/>
        <function-ref name="set" scoped="" ref="0x2b63c1dc24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1dc2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x2b63c1dcb438" loc="49:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b63c1dcb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c1dcb788"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1dcb910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c1dcba98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x2b63c1dc50b8" loc="52:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x2b63c1dc50b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1dc5408"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1dc5590"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1dc5718"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1dc58a0"/>
        <function-ref name="get" scoped="" ref="0x2b63c1dc5a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1dc5bb0"/>
        <function-ref name="set" scoped="" ref="0x2b63c1dc5d38"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1dc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x2b63c1dc43a8" loc="53:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x2b63c1dc43a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1dc46f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1dc4880"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1dc4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1dc4b90"/>
        <function-ref name="get" scoped="" ref="0x2b63c1dc4d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1dc3020"/>
        <function-ref name="set" scoped="" ref="0x2b63c1dc31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1dc3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b63c1dcc188" loc="48:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b63c1dcc188"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b63c1dcc4d8"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1dcc660"/>
        <function-ref name="stopMic" scoped="" ref="0x2b63c1dcc7e8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b63c1dcc970"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b63c1dccaf8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1dccc80"/>
        <function-ref name="muxSel" scoped="" ref="0x2b63c1dcce08"/>
        <function-ref name="startMic" scoped="" ref="0x2b63c1dcb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2b63c1db3828" loc="57:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2b63c1db3828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1db3b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1db3d00"/>
        <function-ref name="request" scoped="" ref="0x2b63c1db2020"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1db21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1db2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x2b63c1dc29b0" loc="55:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x2b63c1dc29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b63c1dc2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b63c1db6c30" loc="56:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1db6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1dc0820"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1db5ba0"/>
        <function-ref name="write" scoped="" ref="0x2b63c1dbf3c8"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1db5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x2b63c1db2710" loc="58:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x2b63c1db2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b63c1db2a60"/>
        <function-ref name="disable" scoped="" ref="0x2b63c1db2be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b63c1db2d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b63c1db1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c1dca020" loc="51:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1dc62b8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1dc9978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1dc76c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1dc7278"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1dc6b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1dc6708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1dc9dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1dcab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1dc7c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1dc9088"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1dc9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1e0e1d0" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1e0e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e0e520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1e0e6a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1e0e830"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e0e9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e0eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b63c1f2b020" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1f2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1f2bba0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1f6f020"/>
        <function-ref name="write" scoped="" ref="0x2b63c1f2a790"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1f29388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1e00538" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1e00538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e00888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1e00a10"/>
        <function-ref name="request" scoped="" ref="0x2b63c1e00b98"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e00d20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1dff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b63c1dff9b0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1dff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1dfd560"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1dfb8b0"/>
        <function-ref name="write" scoped="" ref="0x2b63c1dfc130"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1dfccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1e54af8" loc="92:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1e54af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1e54e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1e53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1e526d8" loc="96:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1e526d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1e52a48"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1e52bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1e53268" loc="93:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1e53268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e535b8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1e53740"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e538c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e53a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1e53bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1e11d80" loc="91:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1e11d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e54170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1e542f8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1e54480"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e54608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e54790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1e53e20" loc="94:/home/rahul/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1e53e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1e521a8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1e52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c262dd88" loc="44:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c262dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c262b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b63c262b3f8" loc="45:/home/rahul/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b63c262b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c262b748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c262b8d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c262ba58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c262bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c2628200" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c2628200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c2628570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c26286f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c2627e18" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2627e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c26261c0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c2626348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c26265d0" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c26265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c2626920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c2626aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c2626c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c2626db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c2628940" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2628940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c2628c90"/>
        <function-ref name="requested" scoped="" ref="0x2b63c2628e18"/>
        <function-ref name="granted" scoped="" ref="0x2b63c2627020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c26271a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c2627330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c2625060" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c2625060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c26253b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c2625538"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c26256c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c2625848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c26259d0"/>
        <function-ref name="get" scoped="" ref="0x2b63c2625b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c2625ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c2624330"/>
        <function-ref name="set" scoped="" ref="0x2b63c2624020"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c2625e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c26241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c26294b0" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c26294b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c2629820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c26299a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c2629b30"/>
        <function-ref name="granted" scoped="" ref="0x2b63c2629cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c2629e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c2627578" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c2627578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c26278c8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c2627a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c26245f8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c26245f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c2624948"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c2624ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c1e50d20" loc="62:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1e50d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c1e4e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c1e4e2e8" loc="63:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1e4e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e4e638"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1e4e7c0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e4e948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e4ead0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1e4ec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b63c1e50600" loc="60:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c1e50600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c1e50950"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1e50ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c1e4d020" loc="64:/home/rahul/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1e4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1e4d370"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1e4d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2b63c1e96420" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b63c1e96420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b63c1e96770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b63c1e55a10" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b63c1e55a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1e9a5d8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1e978e8"/>
        <function-ref name="write" scoped="" ref="0x2b63c1e99190"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1e99d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c1e969f8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c1e969f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1e96d48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1e95020"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1e951a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1e95330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1e954b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1e95640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1e957c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1e95de8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1e95ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1e95950"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1e95c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1e4a140" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1e4a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e4a4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1e4a638"/>
        <function-ref name="request" scoped="" ref="0x2b63c1e4a7c0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e4a948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e4aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b63c1e5a020" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1e5abc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1e56020"/>
        <function-ref name="write" scoped="" ref="0x2b63c1e59790"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1e58388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b63c1e56c70" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b63c1e56c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1e55020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1e551a8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1e55330"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1e554b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1e55640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2b63c1eff318" loc="79:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b63c1eff318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b63c1eff668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2b63c1eff930" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b63c1eff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b63c1effc80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b63c1effe08"/>
        <function-ref name="setStart" scoped="" ref="0x2b63c1efd020"/>
        <function-ref name="status" scoped="" ref="0x2b63c1efd1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b63c1efd330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c1efd4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b63c1efd640"/>
        <function-ref name="read" scoped="" ref="0x2b63c1efd7c8"/>
        <function-ref name="init" scoped="" ref="0x2b63c1efd950"/>
        <function-ref name="enableAck" scoped="" ref="0x2b63c1efdad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b63c1efdc60"/>
        <function-ref name="hasStart" scoped="" ref="0x2b63c1efdde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b63c1efc020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b63c1efc2a8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1efc430"/>
        <function-ref name="write" scoped="" ref="0x2b63c1efc5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b63c1efc740"/>
        <function-ref name="off" scoped="" ref="0x2b63c1efc8c8"/>
        <function-ref name="setStop" scoped="" ref="0x2b63c1efca50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b63c1efcbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b63c1efcd60"/>
        <function-ref name="hasStop" scoped="" ref="0x2b63c1efb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2b63c1efb2e8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b63c1efb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1efb638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1efb7c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1efb948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1efbad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1efbc58"/>
        <function-ref name="get" scoped="" ref="0x2b63c1efbde0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1efa020"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1efa640"/>
        <function-ref name="set" scoped="" ref="0x2b63c1efa330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1efa1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1efa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2b63c1efa908" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b63c1efa908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1efac58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1efade0"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1ef9020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1ef91a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1ef9330"/>
        <function-ref name="get" scoped="" ref="0x2b63c1ef94b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1ef9640"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1ef9c60"/>
        <function-ref name="set" scoped="" ref="0x2b63c1ef9950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1ef97c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1ef9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b63c1e91e60" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b63c1e91e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c1f031e8"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1f03370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b63c1f03700" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b63c1f03700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b63c1d958c8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b63c1d95b70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1f023a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b63c1f00790"/>
        <function-ref name="write" scoped="" ref="0x2b63c1f01020"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1f01ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b63c1ef6830" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b63c1ef6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b63c1ef6b80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b63c1ef6d08"/>
        <function-ref name="setStart" scoped="" ref="0x2b63c1ef3020"/>
        <function-ref name="status" scoped="" ref="0x2b63c1ef31a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b63c1ef3330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c1ef34b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b63c1ef3640"/>
        <function-ref name="read" scoped="" ref="0x2b63c1ef37c8"/>
        <function-ref name="init" scoped="" ref="0x2b63c1ef3950"/>
        <function-ref name="enableAck" scoped="" ref="0x2b63c1ef3ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b63c1ef3c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2b63c1ef3de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b63c1ef2020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b63c1ef22a8"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1ef2430"/>
        <function-ref name="write" scoped="" ref="0x2b63c1ef25b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b63c1ef2740"/>
        <function-ref name="off" scoped="" ref="0x2b63c1ef28c8"/>
        <function-ref name="setStop" scoped="" ref="0x2b63c1ef2a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b63c1ef2bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b63c1ef2d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2b63c1ef1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b63c1eee1d8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b63c1eee1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b63c1eee528"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b63c1eee6b0"/>
        <function-ref name="setStart" scoped="" ref="0x2b63c1eee838"/>
        <function-ref name="status" scoped="" ref="0x2b63c1eee9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b63c1eeeb48"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b63c1eeecd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b63c1eeee58"/>
        <function-ref name="read" scoped="" ref="0x2b63c1eed020"/>
        <function-ref name="init" scoped="" ref="0x2b63c1eed1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x2b63c1eed330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b63c1eed4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x2b63c1eed640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b63c1eed7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b63c1eeda50"/>
        <function-ref name="enable" scoped="" ref="0x2b63c1eedbd8"/>
        <function-ref name="write" scoped="" ref="0x2b63c1eedd60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b63c1eec020"/>
        <function-ref name="off" scoped="" ref="0x2b63c1eec1a8"/>
        <function-ref name="setStop" scoped="" ref="0x2b63c1eec330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b63c1eec4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b63c1eec640"/>
        <function-ref name="hasStop" scoped="" ref="0x2b63c1eec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2b63c1eecb50" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2b63c1eecb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1eeb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1eeb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1eeb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1eeb4b8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1eeb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1eeb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b63c1eeb950"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1eebad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2b63c1eebe08" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2b63c1eebe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c1eea1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c1eea330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c1eea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c1eea640"/>
        <function-ref name="get" scoped="" ref="0x2b63c1eea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c1eea950"/>
        <function-ref name="set" scoped="" ref="0x2b63c1eeaad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c1eeac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c1f46d10" loc="46:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c1f46d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c1f430a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b63c1f43358" loc="47:/home/rahul/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c1f43358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c1f436a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c1f43830"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c1f439b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c1f43b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c1f43cc8"/>
        <function-ref name="get" scoped="" ref="0x2b63c1f43e50"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c1f42020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c1f42640"/>
        <function-ref name="set" scoped="" ref="0x2b63c1f421a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c1f42330"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c1f424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c1f6d020" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c1f6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c1f692b8"/>
        <function-ref name="fired" scoped="" ref="0x2b63c1f6c978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c1f6b6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c1f6b278"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c1f69b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c1f69708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c1f6cdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c1f6db68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c1f6bc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c1f6c088"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1f6c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c1f66af8" loc="92:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c1f66af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c1f66e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1f65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c1f646d8" loc="96:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c1f646d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c1f64a48"/>
        <function-ref name="configure" scoped="" ref="0x2b63c1f64bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c1f65268" loc="93:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f65268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1f655b8"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1f65740"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1f658c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1f65a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1f65bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c1f67d88" loc="91:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1f67d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1f66170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1f662f8"/>
        <function-ref name="request" scoped="" ref="0x2b63c1f66480"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1f66608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1f66790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c1f65e20" loc="94:/home/rahul/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f65e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1f641a8"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1f64330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b63c26d5980" loc="44:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b63c26d5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b63c26d5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b63c26d4020" loc="45:/home/rahul/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b63c26d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c26d4370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c26d44f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c26d4680"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c26d4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b63c26d2d58" loc="55:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b63c26d2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b63c26d10f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c26d1278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c26d0980" loc="60:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c26d0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c26d0cf0"/>
        <function-ref name="configure" scoped="" ref="0x2b63c26d0e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b63c26ce130" loc="61:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b63c26ce130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b63c26ce480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b63c26ce608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b63c26ce790"/>
        <function-ref name="dequeue" scoped="" ref="0x2b63c26ce918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b63c26d14c0" loc="56:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c26d14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c26d1810"/>
        <function-ref name="requested" scoped="" ref="0x2b63c26d1998"/>
        <function-ref name="granted" scoped="" ref="0x2b63c26d1b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c26d1ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c26d1e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b63c26ceb60" loc="62:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b63c26ceb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b63c26cd020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b63c26cd1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b63c26cd330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b63c26cd4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b63c26cd640"/>
        <function-ref name="get" scoped="" ref="0x2b63c26cd7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b63c26cd950"/>
        <function-ref name="led0On" scoped="" ref="0x2b63c26cc020"/>
        <function-ref name="set" scoped="" ref="0x2b63c26cdc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b63c26cdad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b63c26cdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b63c26d2060" loc="54:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c26d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c26d23d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c26d2558"/>
        <function-ref name="request" scoped="" ref="0x2b63c26d26e0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c26d2868"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c26d29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b63c26d00e0" loc="57:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c26d00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c26d0430"/>
        <function-ref name="userId" scoped="" ref="0x2b63c26d05b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b63c26cc2e8" loc="75:/home/rahul/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b63c26cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c26cc638"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c26cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c1f626d8" loc="69:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c1f626d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c1f62a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c1f62bb0"/>
        <function-ref name="start" scoped="" ref="0x2b63c1f62d38"/>
        <function-ref name="stop" scoped="" ref="0x2b63c1f60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c1f60268" loc="71:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c1f60268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c1f605b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c1f60800" loc="72:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c1f60800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1f60b50"/>
        <function-ref name="requested" scoped="" ref="0x2b63c1f60cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1f60e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1f5f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c1f5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c1f5f3f0" loc="73:/home/rahul/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c1f5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c1f5f740"/>
        <function-ref name="userId" scoped="" ref="0x2b63c1f5f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b63c2702780" loc="61:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b63c2702780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b63c2702ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b63c2702c58"/>
        <function-ref name="start" scoped="" ref="0x2b63c2702de0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c2701020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b63c2701268" loc="63:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b63c2701268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b63c27015b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b63c2700b90" loc="78:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b63c2700b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c26ff020"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c26ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b63c2701800" loc="64:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b63c2701800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c2701b50"/>
        <function-ref name="requested" scoped="" ref="0x2b63c2701cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b63c2701e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c2700020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b63c27001a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b63c26ff470" loc="73:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b63c26ff470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c26ff7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c26ff948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b63c2702060" loc="60:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b63c2702060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b63c27023b0"/>
        <function-ref name="stop" scoped="" ref="0x2b63c2702538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b63c27003f0" loc="65:/home/rahul/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b63c27003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b63c2700740"/>
        <function-ref name="userId" scoped="" ref="0x2b63c27008c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c1f54020" loc="24:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c1f54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1f54b88"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1f53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b63c1f53860" loc="26:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b63c1f53860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c1f52458"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c1f528c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b63c1f50020" loc="27:/home/rahul/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b63c1f50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b63c1f50390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b63c1f50518"/>
        <function-ref name="request" scoped="" ref="0x2b63c1f506a0"/>
        <function-ref name="granted" scoped="" ref="0x2b63c1f50828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b63c1f509b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b63c2640578" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b63c2640578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b63c26408c8"/>
        <function-ref name="configure" scoped="" ref="0x2b63c2640a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b63c26435f0" loc="22:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b63c26435f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b63c2642198"/>
        <function-ref name="readDone" scoped="" ref="0x2b63c26425e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b63c2642ba0" loc="24:/home/rahul/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor3.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b63c2642ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b63c2640020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b63c26401a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b63c2640330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c1fedd20" loc="49:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c1fedd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c1fec0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1fec228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1fec3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1fec538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1fec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c1fec908" loc="50:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c1fec908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1fecc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c1fecde0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1feb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1feb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c1feb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c1feb578" loc="51:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c1feb578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c1feb8c8"/>
        <function-ref name="source" scoped="" ref="0x2b63c1feba50"/>
        <function-ref name="address" scoped="" ref="0x2b63c1febbd8"/>
        <function-ref name="destination" scoped="" ref="0x2b63c1febd60"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c1fe9020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c1fe91a8"/>
        <function-ref name="type" scoped="" ref="0x2b63c1fe9330"/>
        <function-ref name="setType" scoped="" ref="0x2b63c1fe94b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c1fe9640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c1fe97c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c1fe9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b63c1fe9bd8" loc="52:/home/rahul/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b63c1fe9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c1fe8020"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c1fe81a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c1fe8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c2745978" loc="49:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c2745978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c2745cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c2745e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c2743020"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c27431a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c2743330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c2743578" loc="50:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c2743578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c27438c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c2743a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c2743bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c2743d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c2742020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c2742268" loc="51:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c2742268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c27425b8"/>
        <function-ref name="source" scoped="" ref="0x2b63c2742740"/>
        <function-ref name="address" scoped="" ref="0x2b63c27428c8"/>
        <function-ref name="destination" scoped="" ref="0x2b63c2742a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c2742bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c2742d60"/>
        <function-ref name="type" scoped="" ref="0x2b63c2741020"/>
        <function-ref name="setType" scoped="" ref="0x2b63c27411a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c2741330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c27414b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c2741640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b63c27418c8" loc="52:/home/rahul/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b63c27418c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b63c2741c18"/>
        <function-ref name="noAck" scoped="" ref="0x2b63c2741da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b63c2740020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b63c2737378" loc="44:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c2737378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c27376c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c2737850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c27379d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c2737b60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c2737ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b63c2736020" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b63c2736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c2736370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c27364f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c2736680"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c2736808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c2736990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b63c2736bd8" loc="47:/home/rahul/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c2736bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c2735020"/>
        <function-ref name="source" scoped="" ref="0x2b63c27351a8"/>
        <function-ref name="address" scoped="" ref="0x2b63c2735330"/>
        <function-ref name="destination" scoped="" ref="0x2b63c27354b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c2735640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c27357c8"/>
        <function-ref name="type" scoped="" ref="0x2b63c2735950"/>
        <function-ref name="setType" scoped="" ref="0x2b63c2735ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c2735c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c2735de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c2734020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b63c1fb34f8" loc="43:/home/rahul/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b63c1fb34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c1fb3848"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1fb39d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1fb3b58"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1fb3ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1fb3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b63c1fff6f8" loc="48:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b63c1fff6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c1fffa68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1fffbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1fffd78"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1ffe020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1ffe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b63c2000920" loc="46:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b63c2000920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b63c2000c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c2000e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1fff020"/>
        <function-ref name="cancel" scoped="" ref="0x2b63c1fff1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b63c1fff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b63c1ffda10" loc="50:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c1ffda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1ffdd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c1ffc020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1ffc1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1ffc330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c1ffc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b63c1ffc780" loc="169:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b63c1ffc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1ffcad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1ffcc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b63c1ffb020" loc="126:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b63c1ffb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b63c1ffb370"/>
        <function-ref name="runTask" scoped="" ref="0x2b63c1ffb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b63c1ffe3f0" loc="49:/home/rahul/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c1ffe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c1ffe740"/>
        <function-ref name="source" scoped="" ref="0x2b63c1ffe8c8"/>
        <function-ref name="address" scoped="" ref="0x2b63c1ffea50"/>
        <function-ref name="destination" scoped="" ref="0x2b63c1ffebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c1ffed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c1ffd020"/>
        <function-ref name="type" scoped="" ref="0x2b63c1ffd1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b63c1ffd330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c1ffd4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c1ffd640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c1ffd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b63c1fe0408" loc="46:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b63c1fe0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b63c1fe0758"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b63c1fe08e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b63c1fe0a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b63c1fe0bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b63c1fe0d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b63c1fe5e38" loc="45:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b63c1fe5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b63c1fe01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b63c202b020" loc="47:/home/rahul/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b63c202b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b63c202b370"/>
        <function-ref name="source" scoped="" ref="0x2b63c202b4f8"/>
        <function-ref name="address" scoped="" ref="0x2b63c202b680"/>
        <function-ref name="destination" scoped="" ref="0x2b63c202b808"/>
        <function-ref name="setSource" scoped="" ref="0x2b63c202b990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b63c202bb18"/>
        <function-ref name="type" scoped="" ref="0x2b63c202bca0"/>
        <function-ref name="setType" scoped="" ref="0x2b63c202be28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b63c202a020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b63c202a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b63c202a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b63c2029770" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c2029770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b63c2029ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b63c2025560" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b63c2025560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b63c20258b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x2b63c201fe08" loc="6:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x2b63c201fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b63c201d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b63c201d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b63c201d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b63c201d640"/>
        <function-ref name="get" scoped="" ref="0x2b63c201d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b63c201d950"/>
        <function-ref name="set" scoped="" ref="0x2b63c201dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b63c201dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b63c2025cd8" loc="5:/home/rahul/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c2025cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c201f088"/>
        <function-ref name="fired" scoped="" ref="0x2b63c2021688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c2020470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c2020020"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c201f928"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c201f4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c2021ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c20228b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c2020a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c2022d58"/>
        <function-ref name="stop" scoped="" ref="0x2b63c2021238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b63c2023518" loc="45:/home/rahul/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b63c2023518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b63c1008608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b63c1008960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b63c2014768"/>
        <function-ref name="fired" scoped="" ref="0x2b63c2016e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b63c2015b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b63c2015728"/>
        <function-ref name="getdt" scoped="" ref="0x2b63c2012088"/>
        <function-ref name="gett0" scoped="" ref="0x2b63c2014bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b63c20152d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b63c2016088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b63c2014198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b63c2016528"/>
        <function-ref name="stop" scoped="" ref="0x2b63c20169c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b63c107fbe0" loc="60:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b63c10a3600" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b63c10a5cd8" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b63c10a3060" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c10a3370" loc="80:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b63c10aca68" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c10ac4a0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c10ac7b0" loc="135:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b63c10aec58" loc="123:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b63c10a18c8" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c10a1658" loc="96:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b63c10adcf8" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c10ad750" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b63c10ada78" loc="110:/home/rahul/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b63c1089e40" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b63c1089bd0" loc="113:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b63c1087290" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b63c1087020" loc="138:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b63c1089258" loc="104:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c1088680" loc="130:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c1085d10" loc="53:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c1085d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b63c10ba760" loc="136:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b63c10b0110" loc="83:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b63c10bcd40" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b63c10bc7a8" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b63c10bcac0" loc="114:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b63c10bc070" loc="98:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b63c10b86b0" loc="151:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b63c10bae80" loc="144:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b63c10b0888" loc="92:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b63c10b2820" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b63c10b25b0" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b63c10bbd28" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b63c10bb790" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b63c10bbaa8" loc="129:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b63c10b1290" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b63c10b1020" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c10b1a38" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b63c10c65a0" loc="49:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c10c65a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b63c10c6dd8" loc="55:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b63c10d1a98" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c10c65a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b63c10d1518" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b63c10d1818" loc="63:/home/rahul/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c10c65a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b63c10a8920" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
              <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c10a8020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b63c10a8348" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c10a8658" loc="78:/home/rahul/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b63c10d5070" loc="61:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b63c10d57a8" loc="67:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b63c10d4020" loc="72:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b63c10d4e70" loc="83:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b63c10d2480" loc="100:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b63c10d2c18" loc="117:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b63c10d4738" loc="77:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c10e0768" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b63c10e04f8" loc="134:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b63c10d7900" loc="56:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b63c10d3608" loc="89:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b63c10d3d20" loc="94:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x2b63c10cbd58" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x2b63c10cbae8" loc="3:/home/rahul/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b63c111e870" loc="62:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b63c1124810" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b63c11245a0" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b63c1127020" loc="31:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b63c1127a18" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b63c11277a8" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b63c11264d0" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b63c1126260" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b63c1126d18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b63c11336d0" loc="44:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b63c1133d98" loc="45:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b63c1135920" loc="42:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b63c1132b58" loc="47:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b63c1133020" loc="43:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b63c1132480" loc="46:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c1138bf0" loc="40:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b63c1135290" loc="41:/home/rahul/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b63c118ba78" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b63c118b290" loc="25:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b63c118a290" loc="39:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b63c1181aa0" loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b63c118d108" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b63c118fe68" loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b63c118f710" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b63c118f170" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b63c118f490" loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x2b63c118d880" loc="83:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x2b63c11ad328" loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x2b63c11bd1d8" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b63c11aca68" loc="80:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b63c11b0b78" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c11b0908" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b63c11ac290" loc="75:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b63c11bd8b8" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x2b63c11adae0" loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b63c11bb020" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b63c11bb9c0" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c11bb750" loc="103:/home/rahul/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b63c0f84970" loc="57:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b63c0f86878" loc="72:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b63c0f860d8" loc="65:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b63c0f92608" loc="67:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b63c0f92df8" loc="75:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b63c104c450" loc="76:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b63c1067d28" loc="62:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b63c0fe8940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b63c10656d8" loc="52:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b63c1378020" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c137cc60" loc="65:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b63c1377020" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c1378d58" loc="78:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b63c1373150" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c1375b20" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c1375e30" loc="126:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b63c1375290" loc="106:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b63c13763e0" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c1377e00" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c1376160" loc="94:/home/rahul/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c1396ae0" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c1396ae0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b63c1396d10" loc="35:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1396d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b63c138b9d8" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1396d10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c138b768" loc="63:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b63c13a4ab8" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13a4848" loc="70:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b63c138d870" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c138d600" loc="49:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c13a2d10" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1396d10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13a2750" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b63c13a2a90" loc="78:/home/rahul/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1396d10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b63c13b1728" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13b1140" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b63c13b14a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b63c13b07e8" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13b0578" loc="71:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b63c1399978" loc="57:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b63c1399020" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b63c139cd60" loc="52:/home/rahul/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b63c13930a8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c1372dd8" loc="59:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b63c1391290" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c1391020" loc="71:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b63c1390338" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13900c8" loc="85:/home/rahul/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b63c137f680" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c137f410" loc="177:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b63c1388418" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c13881a8" loc="88:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b63c137b988" loc="68:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b63c1389418" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c13891a8" loc="78:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b63c1384bc0" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c1384608" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b63c1384940" loc="121:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b63c1387760" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c13871a8" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b63c13874e0" loc="103:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b63c1382290" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c1382020" loc="147:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b63c13805a0" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c1380020" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b63c1380320" loc="162:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b63c1092628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b63c1383020" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c1385d60" loc="136:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b63c1397a50" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b63c13974a0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b63c13977d0" loc="187:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b63c1395818" loc="195:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rahul/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b63c13cbc40" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13cb9d0" loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b63c13b6d10" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13b6aa0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b63c13c8ac0" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13c8850" loc="72:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c13cab70" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13ca900" loc="65:/home/rahul/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b63c13be370" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13be100" loc="47:/home/rahul/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b63c13d8928" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13d8398" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c13d86a8" loc="75:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b63c13d3c68" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13d36a0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b63c13d39b0" loc="125:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b63c13d5e30" loc="112:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b63c13d6ba0" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13d6930" loc="89:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b63c13d5020" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c13d49e0" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b63c13d4d08" loc="100:/home/rahul/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x2b63c1416918" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x2b63c1416178" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x2b63c1412108" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b63c1413e38" loc="56:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x2b63c1413108" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b63c1418e48" loc="48:/home/rahul/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c146c020" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c146c020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b63c146c250" loc="59:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c146c250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b63c146cce8" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c146c250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b63c146ca78" loc="66:/home/rahul/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c146c250"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b63c146dd40" loc="52:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c146dd40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b63c14685f8" loc="58:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b63c1467348" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c146dd40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b63c1468d40" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b63c14670c8" loc="66:/home/rahul/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b63c146dd40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b63c1473ac0" loc="52:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b63c1473328" loc="46:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rahul/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x2b63c1458580" loc="57:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x2b63c1458ca8" loc="64:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x2b63c1464db8" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c1464b48" loc="51:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x2b63c1463578" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x2b63c1463308" loc="60:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x2b63c145f650" loc="104:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x2b63c145e8c8" loc="121:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x2b63c14610a8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x2b63c1463e08" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x2b63c145c290" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x2b63c145c020" loc="129:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b63c1454bf0" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x2b63c145ca68" loc="137:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x2b63c1460e40" loc="96:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x2b63c1460020" loc="84:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x2b63c145b258" loc="147:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x2b63c1460730" loc="89:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b63c1461930" loc="79:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x2b63c145e0a8" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x2b63c145fde0" loc="114:/home/rahul/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b63c1453700" loc="95:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c1452020" loc="105:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x2b63c1451c58" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b63c14519e8" loc="25:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
                <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2b63c144dcc8" loc="61:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x2b63c144a650" loc="85:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b63c14496f0" loc="95:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x2b63c144d5b0" loc="56:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x2b63c144cd68" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x2b63c144caf8" loc="74:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x2b63c144f3a0" loc="32:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x2b63c144eda8" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x2b63c144eb38" loc="50:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b63c144e3e0" loc="44:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b63c144c3e0" loc="66:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x2b63c144fc10" loc="39:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b63c10a6020"/>
              <typename><typedef-ref name="message_t" ref="0x2b63c10a5570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x2b63c1449020" loc="90:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/rahul/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c1501ab0" loc="53:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c1501ab0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b63c14fe378" loc="61:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b63c061e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b63c1604870" loc="120:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b63c1605960" loc="97:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b63c1605070" loc="88:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b63c1604110" loc="102:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b63c1603290" loc="128:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rahul/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b63c168c020" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b63c168e6f8" loc="59:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b63c16c4768" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b63c169fa60" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b63c169fdb8" loc="100:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b63c16c4178" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b63c16c44c8" loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b63c16c13f0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c16c3368" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b63c16c3688" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b63c16c39c0" loc="119:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b63c16c3d70" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b63c16c1140" loc="120:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b63c16a2020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b63c16a4250" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b63c16a45a8" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b63c16a4910" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b63c16a4c60" loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b63c16a1898" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b63c16a1020" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c16a2a28" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b63c16a2d48" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b63c16d60d8" loc="114:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b63c16b81d8" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c1005020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b63c10054d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b63c16d3338" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b63c16d30c8" loc="140:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b63c16d6918" loc="122:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b63c16b5d18" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b63c16b8bb0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c1005020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b63c10054d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b63c16b8940" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c1005020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b63c10054d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b63c16b4b88" loc="91:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b63c16d5870" loc="133:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b63c16d3ad0" loc="150:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b63c16b4448" loc="86:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b63c16b2a48" loc="99:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b63c16b2328" loc="95:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b63c16d71d8" loc="106:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b63c16d50d8" loc="127:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b63c16b6dd0" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c100ba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b63c1009178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b63c16b6b60" loc="69:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c100ba10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b63c1009178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b63c16d7990" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b63c16b63e0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b63c100ba10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b63c1009178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b63c16b55b8" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b63c16d2640" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c16d23d0" loc="156:/home/rahul/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b63c16bb020" loc="95:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c16bb7f8" loc="105:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b63c1728c98" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b63c174d5c0" loc="61:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b63c174aa78" loc="56:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b63c1749a70" loc="73:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b63c174a258" loc="46:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b63c17492a8" loc="65:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b63c1748360" loc="81:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b63c1745020" loc="90:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b63c1745810" loc="98:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rahul/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b63c1763020" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b63c1742218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b63c173dc60" loc="79:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b63c1742218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b63c173e0d8" loc="53:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b63c173eb58" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b63c1742218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b63c173e8e8" loc="62:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b63c1742218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b63c173d428" loc="70:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b63c1742218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b63c17ccc20" loc="62:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b63c1835020" loc="53:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b63c1835020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b63c1835ac8" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b63c1835020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b63c1835858" loc="64:/home/rahul/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b63c1835020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c187c3f8" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c187c3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b63c187c628" loc="57:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c187c628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b63c187a020" loc="64:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c187c628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b63c1879070" loc="76:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b63c187a838" loc="71:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b63c1879760" loc="82:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b63c185dc10" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b63c185dc10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b63c185de40" loc="56:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b63c18567a0" loc="109:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b63c18588c8" loc="78:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b63c1857dc0" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b63c1857820" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b63c1857b40" loc="103:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b63c1857070" loc="88:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b63c1855020" loc="116:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b63c185a930" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b63c185a6c0" loc="66:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c185de40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c1858178" loc="73:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rahul/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b63c1882a50" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1015a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b63c1015e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b63c187de18" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1022100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b63c1022508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b63c187fc70" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101a980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b63c101ad88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b63c187d678" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b63c101ad88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b63c187d408" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b63c101ad88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b63c18aa828" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1022100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b63c1022508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b63c18aa5b8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1022100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b63c1022508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b63c187f4c8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1015a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b63c1015e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b63c187f258" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1015a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b63c1015e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b63c189c998" loc="38:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b63c189b1d8" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b63c189c290" loc="32:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b63c189b988" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b63c189e0d8" loc="21:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101c118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b63c101c520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b63c189ea88" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101c118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b63c101c520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b63c189e818" loc="27:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c101c118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b63c101c520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b63c18a8020" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c18a8020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b63c18a4738" loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b63c18a79d0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b63c18a88d8" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c18a8020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b63c18a5110" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b63c18a3020" loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c18a7290" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c18a8020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b63c18a7020" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c18a8020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b63c18a5808" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c18a4020" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b63c188c418" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c188c418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b63c1887900" loc="98:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b63c1889a40" loc="87:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b63c188ccb8" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c188c418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b63c1886290" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b63c1886020" loc="104:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b63c1886a10" loc="110:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b63c188a4c0" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b63c188bd50" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b63c18871d8" loc="93:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c188b630" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c188c418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b63c188b3c0" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b63c188c418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b63c188abb8" loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c1889328" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b63c19e8648" loc="50:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b63c19e74d0" loc="60:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b63c19e8da8" loc="55:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b63c19ece38" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b63c19ec880" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b63c10929d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b63c19ecbb8" loc="45:/home/rahul/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b63c1092d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b63c1a4e3e0" loc="58:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1041928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b63c1041d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b63c1a1c0a8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b63c102c880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b63c1a1ddc8" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b63c102c880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b63c1a1b258" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1037578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b63c1037980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b63c1a22c18" loc="45:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1028da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b63c1027228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b63c1a1bc18" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1037578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b63c1037980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b63c1a1b9a8" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1037578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b63c1037980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b63c1a4eda0" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1041928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b63c1041d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b63c1a4eb30" loc="59:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1041928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b63c1041d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b63c1a1fc20" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102a890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b63c102ac98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b63c1a1f470" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102c478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b63c102c880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b63c1a1d640" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1028da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b63c1027228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b63c1a1d3d0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c1028da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b63c1027228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b63c1a1ca78" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b63c102ac98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b63c1a1c808" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b63c102a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b63c102ac98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b63c1a20b68" loc="40:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b63c1a45648" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b63c1a453d8" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b63c1a46568" loc="76:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b63c1a4a498" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b63c1a497c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b63c1a49558" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b63c1a48020" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b63c1a46cb8" loc="82:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b63c1a4add0" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b63c1a4ab60" loc="53:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b63c1a20b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b63c1a48718" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b63c1a48e00" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/rahul/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2b63c1bc6178" loc="20:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/rahul/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b63c1bdde70" loc="68:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b63c1bdd720" loc="61:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b63c1bdd020" loc="54:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b63c1bde648" loc="53:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b63c1bf9020" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b63c1bf7a48" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b63c1bfa8d0" loc="51:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b63c1bf7290" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b63c1bf7020" loc="70:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b63c1bfa1d8" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b63c1bf9760" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b63c1c264e0" loc="48:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/rahul/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x2b63c1d9da98" loc="110:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b63c1d9ec40" loc="97:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x2b63c1da0dc0" loc="87:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x2b63c1da0020" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b63c1da1d50" loc="77:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x2b63c1d9e540" loc="92:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b63c1d9d360" loc="102:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x2b63c1da1698" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x2b63c1da1428" loc="72:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x2b63c1da06f8" loc="82:/home/rahul/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/home/rahul/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x2b63c1dc1528" loc="59:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2b63c1dc1528"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b63c1dbda30" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b63c1d91020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b63c1dc1da8" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b63c1d91020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b63c1dbd108" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b63c1dbd438" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b63c1dbd790" loc="76:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b63c1db6020" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b63c1db7290" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b63c1db75c0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b63c1db78f0" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b63c1db7c48" loc="112:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b63c1dbc778" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b63c1d91020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b63c1dbbaf8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b63c1d91020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b63c1dbbe28" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b63c1dbc180" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b63c1dbc4d8" loc="92:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b63c1dba3e0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b63c1db9760" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b63c0f8b1a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b63c1db9a90" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b63c061db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b63c1db9dc0" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b63c1dba140" loc="102:/home/rahul/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b63c1e3d918" loc="46:/home/rahul/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2b63c1e87db8" loc="54:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2b63c1e864c0" loc="55:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2b63c1e844c8" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b63c1e84258" loc="60:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2b63c1e876f8" loc="52:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2b63c1e82b68" loc="65:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b63c1e7c700" loc="84:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b63c1e804d8" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b63c1e80268" loc="67:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b63c1e7be18" loc="89:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b63c1e888f0" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2b63c1e88680" loc="49:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2b63c1e824a0" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b63c1e82230" loc="64:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b63c1e80d10" loc="68:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2b63c1e84ba0" loc="61:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b63c1e7fc50" loc="75:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2b63c1e86ba8" loc="56:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b63c1e7c020" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b63c1e7ed00" loc="83:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b63c1e7b750" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b63c1e7b4e0" loc="88:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b63c061d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2b63c1e7f4f8" loc="72:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b63c1e87020" loc="50:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2b63c1e834b0" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b63c1e83240" loc="62:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2b63c1e7e6c0" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b63c1e7e450" loc="81:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b63c1e7ce28" loc="85:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2b63c1e83b78" loc="63:/home/rahul/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b63c0f829b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
